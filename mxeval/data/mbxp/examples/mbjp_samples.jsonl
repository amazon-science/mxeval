{"task_id":"MBJP\/2","completion":"        Set<Integer> set1 = new HashSet<>(testTup1);\n        Set<Integer> set2 = new HashSet<>(testTup2);\n        List<Integer> result = new ArrayList<>();\n        for (Integer i : set1) {\n            if (set2.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/3","completion":"        if (n == 2) {\n            return false;\n        }\n        if (n % 2 == 0) {\n            return true;\n        }\n        for (int i = 3; i * i <= n; i += 2) {\n            if (n % i == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/6","completion":"        return ((a ^ b) & (a ^ b) - 1) == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/7","completion":"        List<String> result = new ArrayList<>();\n        String[] words = text.split(\"\\\\s+\");\n        for (String word : words) {\n            if (word.length() >= 4) {\n                result.add(word);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/10","completion":"        List<Integer> list = new ArrayList<>();\n        list.addAll(list1);\n        Collections.sort(list);\n        return list.subList(0, n);\n    }\n}","language":"java"}
{"task_id":"MBJP\/11","completion":"        StringBuilder sb = new StringBuilder();\n        int i = 0;\n        int j = s.length() - 1;\n        while (i < s.length() && j >= 0) {\n            if (s.charAt(i) != ch.charAt(0) && s.charAt(j) != ch.charAt(0)) {\n                sb.append(s.charAt(i));\n                i++;\n            } else if (s.charAt(i) != ch.charAt(0) && s.charAt(j) == ch.charAt(0)) {\n                i++;\n            } else if (s.charAt(i) == ch.charAt(0) && s.charAt(j) != ch.charAt(0)) {\n                j--;\n            } else {\n                i++;\n                j--;\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/17","completion":"        return 4 * a;\n    }\n}","language":"java"}
{"task_id":"MBJP\/18","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (!secondString.contains(string.charAt(i) + \"\")) {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/19","completion":"        Set<Integer> set = new HashSet<Integer>();\n        for (int i = 0; i < arraynums.size(); i++) {\n            if (set.contains(arraynums.get(i))) {\n                return true;\n            } else {\n                set.add(arraynums.get(i));\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/20","completion":"        if (x % 10 == 3 || x % 10 == 7) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/21","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 1; i <= m; i++) {\n            result.add(i * n);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/22","completion":"        int i = 0;\n        while (i < nums.size()) {\n            int j = nums.get(i);\n            if (nums.indexOf(j) != i && nums.indexOf(j) != nums.lastIndexOf(j)) {\n                return j;\n            }\n            i++;\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/23","completion":"        int maxSum = 0;\n        for (int i = 0; i < list1.size(); i++) {\n            int sum = 0;\n            for (int j = 0; j < list1.get(i).size(); j++) {\n                sum += list1.get(i).get(j);\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n            }\n        }\n        return maxSum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/24","completion":"        int decimal = 0;\n        int power = 0;\n        while (binary != 0) {\n            int rem = binary % 10;\n            decimal += rem * Math.pow(2, power);\n            binary \/= 10;\n            power++;\n        }\n        return decimal;\n    }\n}","language":"java"}
{"task_id":"MBJP\/25","completion":"        int product = 1;\n        for (int i = 0; i < n; i++) {\n            product *= arr.get(i);\n        }\n        return product;\n    }\n}","language":"java"}
{"task_id":"MBJP\/27","completion":"        for (int i = 0; i < list.size(); i++) {\n            list.set(i, list.get(i).replaceAll(\"\\\\d\", \"\"));\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/28","completion":"        if (k > n - k)\n            k = n - k;\n        int c = 1;\n        for (int i = 1; i <= k; i++) {\n            c = c * (n - i + 1) \/ i;\n        }\n        return c;\n    }\n}","language":"java"}
{"task_id":"MBJP\/29","completion":"        int result = 0;\n        int count = 0;\n        for (int i = 0; i < arrSize; i++) {\n            if (arr.get(i) % 2 != 0) {\n                count++;\n                if (count % 2 != 0) {\n                    result = arr.get(i);\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/32","completion":"        int max = 0;\n        for (int i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                max = i;\n                n \/= i;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/40","completion":"        HashMap<Integer, Integer> freq = new HashMap<>();\n        for (List<Integer> list : nums) {\n            for (int i : list) {\n                freq.put(i, freq.getOrDefault(i, 0) + 1);\n            }\n        }\n        return freq;\n    }\n}","language":"java"}
{"task_id":"MBJP\/43","completion":"        String pattern = \"[a-z]+_[a-z]+\";\n        String result = \"Not matched!\";\n        if (text.matches(pattern)) {\n            result = \"Found a match!\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/44","completion":"        if (text.length() < 2) {\n            return \"Not matched!\";\n        }\n        String firstLetter = text.substring(0, 1);\n        String restOfString = text.substring(1);\n        if (firstLetter.equals(\"p\") || firstLetter.equals(\"y\") || firstLetter.equals(\"t\")) {\n            return \"Found a match!\";\n        }\n        return \"Not matched!\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/46","completion":"        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < data.size(); i++) {\n            if (set.contains(data.get(i))) {\n                return false;\n            }\n            set.add(data.get(i));\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/49","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            for (int j = 0; j < nums.get(i).size(); j++) {\n                if (j == n) {\n                    result.add(nums.get(i).get(j));\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/51","completion":"        if (x == y && y == z) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/52","completion":"        return b * h;\n    }\n}","language":"java"}
{"task_id":"MBJP\/53","completion":"        if (str.length() < 2) {\n            return \"Not Equal\";\n        }\n        if (str.charAt(0) == str.charAt(str.length() - 1)) {\n            return \"Equal\";\n        } else {\n            return \"Not Equal\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/54","completion":"        \/\/ write your code here\n        List<Integer> result = new ArrayList<>();\n        int max = Collections.max(myList);\n        int min = Collections.min(myList);\n        int range = max - min + 1;\n        int[] countArray = new int[range];\n        for (int i = 0; i < myList.size(); i++) {\n            countArray[myList.get(i) - min]++;\n        }\n        for (int i = 0; i < countArray.length; i++) {\n            for (int j = 0; j < countArray[i]; j++) {\n                result.add(i + min);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/58","completion":"        return (x * y < 0);\n    }\n}","language":"java"}
{"task_id":"MBJP\/62","completion":"        int min = xs.get(0);\n        for (int i = 1; i < xs.size(); i++) {\n            if (xs.get(i) < min) {\n                min = xs.get(i);\n            }\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/64","completion":"        subjectmarks.sort((a, b) -> {\n            int first = Integer.parseInt(a.get(1).toString());\n            int second = Integer.parseInt(b.get(1).toString());\n            return first - second;\n        });\n        return subjectmarks;\n    }\n}","language":"java"}
{"task_id":"MBJP\/65","completion":"        if (dataList.size() == 1) {\n            return (Integer) dataList.get(0);\n        } else {\n            int sum = 0;\n            for (int i = 0; i < dataList.size(); i++) {\n                if (dataList.get(i) instanceof List) {\n                    sum += recursiveListSum((List<Object>) dataList.get(i));\n                } else {\n                    sum += (Integer) dataList.get(i);\n                }\n            }\n            return sum;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/66","completion":"        int count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) > 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/68","completion":"        int n = a.size();\n        boolean inc = true;\n        boolean dec = true;\n        for (int i = 1; i < n; i++) {\n            if (a.get(i) < a.get(i - 1)) {\n                inc = false;\n            }\n            if (a.get(i) > a.get(i - 1)) {\n                dec = false;\n            }\n        }\n        return inc || dec;\n    }\n}","language":"java"}
{"task_id":"MBJP\/70","completion":"        int count = 0;\n        for (List<Integer> list : input) {\n            if (list.size() == k) {\n                count++;\n            }\n        }\n        if (count == input.size()) {\n            return \"All tuples have same length\";\n        } else {\n            return \"All tuples do not have same length\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/71","completion":"        int n = nums.size();\n        int gap = n;\n        boolean swapped = true;\n        while (gap > 1 || swapped) {\n            gap = (int) (gap \/ 1.3);\n            swapped = false;\n            for (int i = 0; i < n - gap; i++) {\n                if (nums.get(i) > nums.get(i + gap)) {\n                    int temp = nums.get(i);\n                    nums.set(i, nums.get(i + gap));\n                    nums.set(i + gap, temp);\n                    swapped = true;\n                }\n            }\n        }\n        return nums;\n    }\n}","language":"java"}
{"task_id":"MBJP\/79","completion":"        if (s.length() % 2 == 0) {\n            return false;\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/82","completion":"        double volume = (4.0 \/ 3.0) * Math.PI * Math.pow(r, 3);\n        return volume;\n    }\n}","language":"java"}
{"task_id":"MBJP\/85","completion":"        double area = 4 * Math.PI * r * r;\n        return area;\n    }\n}","language":"java"}
{"task_id":"MBJP\/88","completion":"        HashMap<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < list1.size(); i++) {\n            if (map.containsKey(list1.get(i))) {\n                map.put(list1.get(i), map.get(list1.get(i)) + 1);\n            } else {\n                map.put(list1.get(i), 1);\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/89","completion":"        int diff = 0;\n        int minDiff = Integer.MAX_VALUE;\n        for (int i = 1; i < n; i++) {\n            diff = Math.abs(n - i);\n            if (diff < minDiff) {\n                minDiff = diff;\n            }\n        }\n        return n - minDiff;\n    }\n}","language":"java"}
{"task_id":"MBJP\/90","completion":"        int max = 0;\n        for (String s : list1) {\n            int len = s.length();\n            if (len > max) {\n                max = len;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/91","completion":"        for (String str : str1) {\n            if (str.contains(subStr)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/93","completion":"        if (b == 0) {\n            return 1;\n        }\n        return a * power(a, b - 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/94","completion":"        \/\/ write your code here\n        int min = Integer.MAX_VALUE;\n        String minIndex = \"\";\n        for (int i = 0; i < testList.size(); i++) {\n            int temp = (int) testList.get(i).get(1);\n            if (temp < min) {\n                min = temp;\n                minIndex = testList.get(i).get(0).toString();\n            }\n        }\n        return minIndex;\n    }\n}","language":"java"}
{"task_id":"MBJP\/95","completion":"        int min = Integer.MAX_VALUE;\n        for (List<Integer> l : lst) {\n            if (l.size() < min) {\n                min = l.size();\n            }\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/96","completion":"        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/97","completion":"        HashMap<Integer, Integer> map = new HashMap<>();\n        for (List<Integer> list : list1) {\n            for (int i : list) {\n                if (map.containsKey(i)) {\n                    map.put(i, map.get(i) + 1);\n                } else {\n                    map.put(i, 1);\n                }\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/98","completion":"        double result = 1.0;\n        for (int i = 0; i < numbers.size(); i++) {\n            result *= numbers.get(i);\n        }\n        return result \/ numbers.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/99","completion":"        String binary = \"\";\n        while (n > 0) {\n            binary = (n % 2) + binary;\n            n = n \/ 2;\n        }\n        return binary;\n    }\n}","language":"java"}
{"task_id":"MBJP\/102","completion":"        String[] arr = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < arr.length; i++) {\n            sb.append(arr[i].substring(0, 1).toUpperCase() + arr[i].substring(1));\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/104","completion":"        List<List<String>> outputList = new ArrayList<>();\n        for (List<String> list : inputList) {\n            Collections.sort(list, (s1, s2) -> s1.compareTo(s2));\n            outputList.add(list);\n        }\n        return outputList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/105","completion":"        int count = 0;\n        for (Boolean b : lst) {\n            if (b) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/108","completion":"        List<Integer> sortedList = new ArrayList<>();\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>();\n        minHeap.addAll(num1);\n        minHeap.addAll(num2);\n        minHeap.addAll(num3);\n        while (!minHeap.isEmpty()) {\n            sortedList.add(minHeap.poll());\n        }\n        return sortedList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/109","completion":"        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == '0') {\n                count++;\n            } else {\n                count = (count + 2) % n;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/112","completion":"        return 2 * (diameter + height);\n    }\n}","language":"java"}
{"task_id":"MBJP\/113","completion":"        try {\n            Integer.parseInt(text);\n            return true;\n        } catch (NumberFormatException e) {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/116","completion":"        int result = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            result = result * 10 + nums.get(i);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/118","completion":"        List<String> list = new ArrayList<>();\n        String[] arr = string.split(\" \");\n        for (String s : arr) {\n            list.add(s);\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/120","completion":"        int max = 0;\n        int min = 0;\n        int product = 0;\n        for (List<Integer> list : list1) {\n            min = list.get(0);\n            for (int i = 1; i < list.size(); i++) {\n                if (list.get(i) < min) {\n                    min = list.get(i);\n                }\n            }\n            product = min * list.get(list.size() - 1);\n            if (product > max) {\n                max = product;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/121","completion":"        for (int i = 0; i < a.size() - 2; i++) {\n            for (int j = i + 1; j < a.size() - 1; j++) {\n                for (int k = j + 1; k < a.size(); k++) {\n                    if (a.get(i) + a.get(j) + a.get(k) == sum) {\n                        if (count == 0) {\n                            return true;\n                        } else {\n                            count--;\n                        }\n                    }\n                }\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/126","completion":"        int sum = 0;\n        for (int i = 1; i <= a && i <= b; i++) {\n            if (a % i == 0 && b % i == 0) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/127","completion":"        return x * y;\n    }\n}","language":"java"}
{"task_id":"MBJP\/128","completion":"        List<String> list = new ArrayList<>();\n        String[] words = str.split(\" \");\n        for (String word : words) {\n            if (word.length() > n) {\n                list.add(word);\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/131","completion":"        String vowels = \"aeiouAEIOU\";\n        char[] str = str1.toCharArray();\n        int i = 0, j = str.length - 1;\n        while (i < j) {\n            while (i < j && !vowels.contains(String.valueOf(str[i]))) {\n                i++;\n            }\n            while (i < j && !vowels.contains(String.valueOf(str[j]))) {\n                j--;\n            }\n            char temp = str[i];\n            str[i] = str[j];\n            str[j] = temp;\n            i++;\n            j--;\n        }\n        return new String(str);\n    }\n}","language":"java"}
{"task_id":"MBJP\/132","completion":"        StringBuilder sb = new StringBuilder();\n        for (String s : tup1) {\n            sb.append(s);\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/133","completion":"        return nums.stream().filter(x -> x < 0).mapToInt(x -> x).sum();\n    }\n}","language":"java"}
{"task_id":"MBJP\/140","completion":"        List<Integer> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size(); i++) {\n                if (result.contains(list.get(i))) {\n                    continue;\n                }\n                result.add(list.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/145","completion":"        int maxDiff = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff > maxDiff) {\n                    maxDiff = diff;\n                }\n            }\n        }\n        return maxDiff;\n    }\n}","language":"java"}
{"task_id":"MBJP\/151","completion":"        if (x == 1 || y == 1) {\n            return false;\n        }\n        if (x == y) {\n            return true;\n        }\n        if (x > y) {\n            int temp = x;\n            x = y;\n            y = temp;\n        }\n        for (int i = 2; i <= y \/ 2; i++) {\n            if (x % i == 0 && y % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/154","completion":"        List<Integer> result = new ArrayList<>();\n        for (List<Integer> list : nums) {\n            if (list.get(n) != null) {\n                result.add(list.get(n));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/156","completion":"        List<List<Integer>> tupleInt = new ArrayList<>();\n        for (List<String> list : tupleStr) {\n            List<Integer> listInt = new ArrayList<>();\n            for (String str : list) {\n                listInt.add(Integer.parseInt(str));\n            }\n            tupleInt.add(listInt);\n        }\n        return tupleInt;\n    }\n}","language":"java"}
{"task_id":"MBJP\/161","completion":"        List<Integer> result = new ArrayList<>();\n        for (Integer i : list1) {\n            if (!list2.contains(i)) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/167","completion":"        if (n == 0) {\n            return 1;\n        }\n        int i = 1;\n        while (i < n) {\n            i = i << 1;\n        }\n        return i;\n    }\n}","language":"java"}
{"task_id":"MBJP\/168","completion":"        int count = 0;\n        for (int i = 0; i < a.size(); i++) {\n            if (a.get(i) == x) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/170","completion":"        int sum = 0;\n        for (int i = m; i <= n; i++) {\n            sum += list1.get(i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/173","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (Character.isLetterOrDigit(text.charAt(i))) {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/175","completion":"        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < str1.length(); i++) {\n            char ch = str1.charAt(i);\n            if (ch == '(' || ch == '{' || ch == '[') {\n                stack.push(ch);\n            } else if (ch == ')' || ch == '}' || ch == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (top == '(' && ch != ')') {\n                    return false;\n                } else if (top == '{' && ch != '}') {\n                    return false;\n                } else if (top == '[' && ch != ']') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();\n    }\n}","language":"java"}
{"task_id":"MBJP\/176","completion":"        return a + b + c;\n    }\n}","language":"java"}
{"task_id":"MBJP\/178","completion":"        String result = \"Not Matched!\";\n        for (String pattern : patterns) {\n            if (text.contains(pattern)) {\n                result = \"Matched!\";\n                break;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/181","completion":"        String prefix = arr.get(0);\n        for (int i = 1; i < n; i++) {\n            while (arr.get(i).indexOf(prefix) != 0) {\n                prefix = prefix.substring(0, prefix.length() - 1);\n            }\n        }\n        return prefix;\n    }\n}","language":"java"}
{"task_id":"MBJP\/183","completion":"        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (Math.abs(arr.get(i) - arr.get(j)) == k) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/184","completion":"        int i = 0;\n        for (int j = 0; j < list.size(); j++) {\n            if (list.get(j) > num) {\n                i++;\n            }\n        }\n        if (i == list.size()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/186","completion":"        String result = \"Not Matched!\";\n        for (String pattern : patterns) {\n            if (text.matches(\".*\" + pattern + \".*\")) {\n                result = \"Matched!\";\n                break;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/187","completion":"        int[][] dp = new int[m + 1][n + 1];\n\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (x.charAt(i - 1) == y.charAt(j - 1)) {\n                    dp[i][j] = 1 + dp[i - 1][j - 1];\n                } else {\n                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n\n        return dp[m][n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/189","completion":"        int i = 0;\n        while (i < n) {\n            if (arr.get(i) <= 0 || arr.get(i) > n || arr.get(i) == i + 1) {\n                i++;\n            } else {\n                int temp = arr.get(i);\n                arr.set(i, arr.get(temp - 1));\n                arr.set(temp - 1, temp);\n            }\n        }\n        for (i = 0; i < n; i++) {\n            if (arr.get(i) != i + 1) {\n                return i + 1;\n            }\n        }\n        return n + 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/191","completion":"        if (monthname3.equals(\"April\") || monthname3.equals(\"June\") || monthname3.equals(\"September\") || monthname3.equals(\"November\") || monthname3.equals(\"December\")) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/192","completion":"        if (str.matches(\"[a-zA-Z]+[0-9]+\")) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/193","completion":"        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < testTup.size(); i++) {\n            set.add(testTup.get(i));\n        }\n        List<Integer> result = new ArrayList<>(set);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/194","completion":"        int decimal = 0;\n        int rem = 0;\n        int i = 0;\n        while (n != 0) {\n            rem = n % 10;\n            decimal += rem * Math.pow(8, i);\n            n = n \/ 10;\n            i++;\n        }\n        return decimal;\n    }\n}","language":"java"}
{"task_id":"MBJP\/195","completion":"        int low = 0;\n        int high = arr.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) \/ 2;\n            if (arr.get(mid) == x) {\n                return mid;\n            } else if (arr.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/196","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            if (list.size() != k) {\n                result.add(list);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/197","completion":"        List<Integer> result = new ArrayList<>();\n        int power = 0;\n        for (int i = 0; i < testTup1.size(); i++) {\n            power = (int) Math.pow(testTup1.get(i), testTup2.get(i));\n            result.add(power);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/199","completion":"        if (n == 0) return 0;\n        int count = 0;\n        while (n > 1) {\n            n = n \/ 2;\n            count++;\n        }\n        return (int) Math.pow(2, count);\n    }\n}","language":"java"}
{"task_id":"MBJP\/200","completion":"        List<Integer> result = new ArrayList<>();\n        int max = 0;\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) > max) {\n                max = list1.get(i);\n            }\n        }\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) == max) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/201","completion":"        if (lst.size() == 0) {\n            return false;\n        }\n        for (int i = 0; i < lst.size() - 1; i++) {\n            if (!lst.get(i).equals(lst.get(i + 1))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/202","completion":"        \/\/ code here\n        String str2 = \"\";\n        for (int i = 0; i < str1.length(); i++) {\n            if (i % 2 == 0) {\n                str2 += str1.charAt(i);\n            }\n        }\n        return str2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/203","completion":"        int count = 0;\n        while (n1 != 0 || n2 != 0) {\n            if ((n1 & 1) != (n2 & 1)) {\n                count++;\n            }\n            n1 = n1 >> 1;\n            n2 = n2 >> 1;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/204","completion":"        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == c.charAt(0)) {\n                if (s.substring(i, i + c.length()).equals(c)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/206","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < testTup.size() - 1; i++) {\n            result.add(testTup.get(i) + testTup.get(i + 1));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/208","completion":"        return num.matches(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/210","completion":"        return string.matches(\"[a-zA-Z0-9]*\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/211","completion":"        int count = 0;\n        while (n > 0) {\n            if ((n & 1) == 1) {\n                count++;\n            }\n            n = n >> 1;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/212","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (int) Math.pow(i, 4);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/213","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            result.add(testTup1.get(i) + testTup2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/214","completion":"        return radian * (180 \/ Math.PI);\n    }\n}","language":"java"}
{"task_id":"MBJP\/221","completion":"        int even = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 == 0) {\n                even = nums.get(i);\n                break;\n            }\n        }\n        return even;\n    }\n}","language":"java"}
{"task_id":"MBJP\/223","completion":"        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr.get(i) == x) {\n                count++;\n            }\n        }\n        if (count > n \/ 2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/224","completion":"        int count = 0;\n        while (n != 0) {\n            count += n & 1;\n            n >>>= 1;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/225","completion":"        if (low > high) {\n            return Integer.MAX_VALUE;\n        }\n        int mid = (low + high) \/ 2;\n        if (mid == 0 || mid == arr.size() - 1) {\n            return arr.get(mid);\n        }\n        if (arr.get(mid) < arr.get(mid - 1) && arr.get(mid) < arr.get(mid + 1)) {\n            return arr.get(mid);\n        } else if (arr.get(mid) < arr.get(mid - 1)) {\n            return findMin(arr, mid + 1, high);\n        } else {\n            return findMin(arr, low, mid - 1);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/226","completion":"        String result = \"\";\n        for (int i = 0; i < str.length(); i++) {\n            if (i % 2 == 0) {\n                result += str.charAt(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/227","completion":"        int min = a;\n        if (b < min) {\n            min = b;\n        }\n        if (c < min) {\n            min = c;\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/232","completion":"        List<Integer> list = new ArrayList<>();\n        list.addAll(list1);\n        Collections.sort(list, Collections.reverseOrder());\n        return list.subList(0, n);\n    }\n}","language":"java"}
{"task_id":"MBJP\/234","completion":"        return l * l * l;\n    }\n}","language":"java"}
{"task_id":"MBJP\/238","completion":"        int count = 0;\n        for (int i = 0; i < str.length(); i++) {\n            for (int j = i + 1; j <= str.length(); j++) {\n                if (str.substring(i, j).length() > 0) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/247","completion":"        int n = str.length();\n        int[][] dp = new int[n][n];\n        for (int i = 0; i < n; i++) {\n            dp[i][i] = 1;\n        }\n        for (int i = n - 1; i >= 0; i--) {\n            for (int j = i + 1; j < n; j++) {\n                if (str.charAt(i) == str.charAt(j)) {\n                    dp[i][j] = dp[i + 1][j - 1] + 2;\n                } else {\n                    dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n                }\n            }\n        }\n        return dp[0][n - 1];\n    }\n}","language":"java"}
{"task_id":"MBJP\/248","completion":"        double sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += 1.0 \/ i;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/249","completion":"        List<Integer> intersection = new ArrayList<>();\n        arrayNums1.forEach(num -> {\n            if (arrayNums2.contains(num)) {\n                intersection.add(num);\n            }\n        });\n        return intersection;\n    }\n}","language":"java"}
{"task_id":"MBJP\/250","completion":"        int count = 0;\n        for (int i = 0; i < tup.size(); i++) {\n            if (tup.get(i) == x) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/252","completion":"        List<Double> result = new ArrayList<>();\n        result.add(numbers * 1.0);\n        result.add(numbers * 0.0);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/253","completion":"        int count = 0;\n        for (Object obj : list1) {\n            if (obj instanceof Integer) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/254","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) == 'a' || text.charAt(i) == 'e') {\n                int j = i;\n                while (j < text.length() && text.charAt(j) != ' ') {\n                    j++;\n                }\n                result.add(text.substring(i, j));\n                i = j - 1;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/256","completion":"        int count = 0;\n        boolean[] isPrime = new boolean[n];\n        Arrays.fill(isPrime, true);\n        for (int i = 2; i * i < n; i++) {\n            if (isPrime[i]) {\n                for (int j = i * i; j < n; j += i) {\n                    isPrime[j] = false;\n                }\n            }\n        }\n        for (int i = 2; i < n; i++) {\n            if (isPrime[i]) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/257","completion":"        List<Integer> list = new ArrayList<>();\n        list.add(b);\n        list.add(a);\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/261","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            result.add(testTup1.get(i) \/ testTup2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/263","completion":"        HashMap<String, Integer> result = new HashMap<>();\n        for (String key : d1.keySet()) {\n            result.put(key, d1.get(key));\n        }\n        for (String key : d2.keySet()) {\n            result.put(key, d2.get(key));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/269","completion":"        int asciiValue = 0;\n        for (int i = 0; i < k.length(); i++) {\n            asciiValue += (int) k.charAt(i);\n        }\n        return asciiValue;\n    }\n}","language":"java"}
{"task_id":"MBJP\/272","completion":"        List<Integer> result = new ArrayList<>();\n        for (List<Object> list : testList) {\n            result.add((Integer) list.get(2));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/273","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            result.add(testTup1.get(i) - testTup2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/280","completion":"        List<Object> result = new ArrayList<>();\n        int index = 0;\n        while (index < dlist.size() && dlist.get(index) != item) {\n            index++;\n        }\n        if (index < dlist.size()) {\n            result.add(true);\n            result.add(index);\n        } else {\n            result.add(false);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/281","completion":"        Set<Integer> set = new HashSet<Integer>();\n        for (Integer i : testList) {\n            if (set.contains(i)) {\n                return false;\n            }\n            set.add(i);\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/282","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) - nums2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/283","completion":"        int[] arr = new int[10];\n        for (int i = 0; i < 10; i++) {\n            arr[i] = 0;\n        }\n        while (n > 0) {\n            int rem = n % 10;\n            arr[rem]++;\n            n \/= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (arr[i] > i) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/285","completion":"        if (text.length() < 3) {\n            return \"Not matched!\";\n        }\n        if (text.substring(0, 2).equals(\"ab\")) {\n            return \"Found a match!\";\n        }\n        return \"Not matched!\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/290","completion":"        \/\/ write your code here\n        List<Object> result = new ArrayList<>();\n        int max = 0;\n        for (List<Integer> list : list1) {\n            if (list.size() > max) {\n                max = list.size();\n                result.clear();\n                result.add(max);\n                result.add(list);\n            } else if (list.size() == max) {\n                result.add(list);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/292","completion":"        int quotient = n \/ m;\n        return quotient;\n    }\n}","language":"java"}
{"task_id":"MBJP\/294","completion":"        int max = 0;\n        for (Object val : listval) {\n            if (val instanceof Integer) {\n                max = Math.max((Integer) val, max);\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/295","completion":"        int sum = 0;\n        for (int i = 1; i <= number \/ 2; i++) {\n            if (number % i == 0) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/296","completion":"        int invCount = 0;\n        int[] aux = new int[n];\n        for (int i = 0; i < n; i++) {\n            aux[i] = arr.get(i);\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (aux[i] > aux[j]) {\n                    invCount++;\n                }\n            }\n        }\n        return invCount;\n    }\n}","language":"java"}
{"task_id":"MBJP\/297","completion":"        List<Integer> list2 = new ArrayList<>();\n        for (Object obj : list1) {\n            if (obj instanceof List) {\n                list2.addAll(flattenList((List) obj));\n            } else {\n                list2.add((Integer) obj);\n            }\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/303","completion":"        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (a.get(i) > a.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count <= 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/309","completion":"        \/\/ write your code here\n        return a>b?a:b;\n    }\n}","language":"java"}
{"task_id":"MBJP\/316","completion":"        int low = 0;\n        int high = a.size() - 1;\n        int mid = 0;\n        while (low <= high) {\n            mid = (low + high) \/ 2;\n            if (a.get(mid) == x) {\n                if (mid == a.size() - 1 || a.get(mid + 1) != x) {\n                    return mid;\n                } else {\n                    low = mid + 1;\n                }\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/320","completion":"        int sum = 0;\n        int sumOfSquares = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i;\n            sumOfSquares += i * i;\n        }\n        int squaredSum = (int) Math.pow(sum, 2);\n        return squaredSum - sumOfSquares;\n    }\n}","language":"java"}
{"task_id":"MBJP\/322","completion":"        List<Integer> result = new ArrayList<>();\n        int min = list1.get(0);\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) < min) {\n                min = list1.get(i);\n            }\n        }\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) == min) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/325","completion":"        int[] dp = new int[n + 1];\n        dp[0] = 0;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            dp[i] = Integer.MAX_VALUE;\n            for (int j = 1; j * j <= i; j++) {\n                dp[i] = Math.min(dp[i], dp[i - j * j] + 1);\n            }\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/326","completion":"        \/\/ Write your code here\n        HashMap<String, Integer> map = new HashMap<>();\n        for (String s : testList) {\n            String[] words = s.split(\" \");\n            for (String word : words) {\n                if (map.containsKey(word)) {\n                    map.put(word, map.get(word) + 1);\n                } else {\n                    map.put(word, 1);\n                }\n            }\n        }\n        int max = 0;\n        String res = \"\";\n        for (String key : map.keySet()) {\n            if (map.get(key) > max) {\n                max = map.get(key);\n                res = key;\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/327","completion":"        if (x == y || y == z || x == z) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/329","completion":"        int count = 0;\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) < 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/330","completion":"        List<String> result = new ArrayList<>();\n        String[] words = text.split(\"\\\\s+\");\n        for (String word : words) {\n            if (word.length() == 3 || word.length() == 4 || word.length() == 5) {\n                result.add(word);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/332","completion":"        HashMap<String, Integer> map = new HashMap<>();\n        for (int i = 0; i < str1.length(); i++) {\n            if (map.containsKey(str1.charAt(i) + \"\")) {\n                map.put(str1.charAt(i) + \"\", map.get(str1.charAt(i) + \"\") + 1);\n            } else {\n                map.put(str1.charAt(i) + \"\", 1);\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/333","completion":"        List<List<Object>> sortedList = new ArrayList<>();\n        for (int i = 0; i < subLi.size(); i++) {\n            List<Object> subList = subLi.get(i);\n            int secondElement = (int) subList.get(1);\n            int j = i - 1;\n            while (j >= 0 && (int) subLi.get(j).get(1) > secondElement) {\n                subLi.set(j + 1, subLi.get(j));\n                j--;\n            }\n            subLi.set(j + 1, subList);\n        }\n        sortedList.addAll(subLi);\n        return sortedList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/334","completion":"        if (a + b > c && a + c > b && b + c > a) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/335","completion":"        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += (a + i * d);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/336","completion":"        if (monthname1.equals(\"February\")) {\n            return true;\n        } else if (monthname1.equals(\"January\")) {\n            return false;\n        } else if (monthname1.equals(\"March\")) {\n            return false;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/337","completion":"        String result = \"Not matched!\";\n        if (text.endsWith(\"python.\") || text.endsWith(\"python\") || text.endsWith(\"python \")) {\n            result = \"Found a match!\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/349","completion":"        int n = string.length();\n        for (int i = 0; i < n; i++) {\n            if (string.charAt(i) != '0' && string.charAt(i) != '1') {\n                return \"No\";\n            }\n        }\n        return \"Yes\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/352","completion":"        \/\/ code here\n        Set<Character> set = new HashSet<>();\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (set.contains(ch)) {\n                return false;\n            } else {\n                set.add(ch);\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/353","completion":"        List<List<Integer>> list = new ArrayList<>();\n        for (List<Integer> l : list1) {\n            List<Integer> l1 = new ArrayList<>();\n            for (int i = 0; i < l.size(); i++) {\n                if (i != n) {\n                    l1.add(l.get(i));\n                }\n            }\n            list.add(l1);\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/356","completion":"        return 180 - (a + b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/357","completion":"        int max = 0;\n        for (List<Integer> list : testList) {\n            int temp = 0;\n            for (int i = 0; i < list.size(); i++) {\n                if (i == 0) {\n                    temp = list.get(i);\n                } else {\n                    temp = Math.max(temp, list.get(i));\n                }\n            }\n            max = Math.max(max, temp);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/358","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) % nums2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/361","completion":"        List<Object> list2 = new ArrayList<>();\n        for (Object o : list1) {\n            if (o instanceof List) {\n                List<Object> list3 = removeEmpty((List<Object>) o);\n                if (list3.isEmpty()) {\n                    continue;\n                }\n                list2.add(list3);\n            } else {\n                list2.add(o);\n            }\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/363","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            List<Integer> newList = new ArrayList<>();\n            for (int i = 0; i < list.size(); i++) {\n                newList.add(list.get(i) + k);\n            }\n            result.add(newList);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/365","completion":"        int count = 0;\n        while (n > 0) {\n            n \/= 10;\n            count++;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/366","completion":"        int maxProduct = 0;\n        int currentProduct = 1;\n        int previousNum = listNums.get(0);\n        for (int i = 1; i < listNums.size(); i++) {\n            currentProduct = listNums.get(i) * previousNum;\n            if (currentProduct > maxProduct) {\n                maxProduct = currentProduct;\n            }\n            previousNum = listNums.get(i);\n        }\n        return maxProduct;\n    }\n}","language":"java"}
{"task_id":"MBJP\/368","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            result.add(new ArrayList<>(testTup));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/371","completion":"        int i = leftElement;\n        int j = rightElement;\n        while (i <= j) {\n            int mid = (i + j) \/ 2;\n            if (a.get(mid) == mid) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        }\n        return i;\n    }\n}","language":"java"}
{"task_id":"MBJP\/372","completion":"        \/\/ write your code here\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        for (int i = 0; i < nums.size(); i++) {\n            pq.add(nums.get(i));\n        }\n        List<Integer> result = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/373","completion":"        return l * w * h;\n    }\n}","language":"java"}
{"task_id":"MBJP\/375","completion":"        return (n \/ m) * m;\n    }\n}","language":"java"}
{"task_id":"MBJP\/376","completion":"        List<Object> result = new ArrayList<>();\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < testTup.size(); i++) {\n            if (!set.contains(testTup.get(i))) {\n                result.add(testTup.get(i));\n                set.add(testTup.get(i));\n            } else {\n                result.add(\"MSP\");\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/377","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) != c.charAt(0)) {\n                sb.append(s.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/379","completion":"        return 2 * (l * w + w * h + h * l);\n    }\n}","language":"java"}
{"task_id":"MBJP\/384","completion":"        int min = arr.get(0);\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (min > arr.get(i)) {\n                min = arr.get(i);\n                count = 1;\n            } else if (min == arr.get(i)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/387","completion":"        int i = Integer.parseInt(n, 16);\n        if (i % 2 == 0) {\n            return \"Even\";\n        } else {\n            return \"Odd\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/388","completion":"        int power = 1;\n        while (power <= n) {\n            power *= 2;\n        }\n        return power \/ 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/389","completion":"        int[] lucas = new int[n + 1];\n        lucas[0] = 2;\n        lucas[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            lucas[i] = lucas[i - 1] + lucas[i - 2];\n        }\n        return lucas[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/392","completion":"        int[] f = new int[n + 1];\n        f[0] = 0;\n        f[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            f[i] = Math.max(f[i \/ 2] + f[i \/ 3] + f[i \/ 4] + f[i \/ 5], i);\n        }\n        return f[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/394","completion":"        Set<Integer> set = new HashSet<Integer>();\n        for (int i = 0; i < testTup.size(); i++) {\n            if (set.contains(testTup.get(i))) {\n                return false;\n            } else {\n                set.add(testTup.get(i));\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/399","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            result.add(testTup1.get(i) ^ testTup2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/401","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            List<Integer> temp = new ArrayList<>();\n            for (int j = 0; j < testTup1.get(i).size(); j++) {\n                temp.add(testTup1.get(i).get(j) + testTup2.get(i).get(j));\n            }\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/402","completion":"        int ncr = 1;\n        for (int i = 1; i <= r; i++) {\n            ncr = (ncr * (n - i + 1)) \/ i;\n        }\n        return ncr % p;\n    }\n}","language":"java"}
{"task_id":"MBJP\/403","completion":"        String regex = \"^(https?:\\\\\/\\\\\/)?\"\n                + \"((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|\"\n                + \"((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))\"\n                + \"(\\\\:\\\\d+)?(\\\\\/[-a-z\\\\d%_.~+]*)*\"\n                + \"(\\\\?[;&a-z\\\\d%_.~+=-]*)?\"\n                + \"(\\\\#[-a-z\\\\d_]*)?$\";\n        return str.matches(regex);\n    }\n}","language":"java"}
{"task_id":"MBJP\/404","completion":"        if (a < b) {\n            return a;\n        } else {\n            return b;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/406","completion":"        if (x % 2 == 0) {\n            return \"Even Parity\";\n        } else {\n            return \"Odd Parity\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/407","completion":"        String s = String.valueOf(n);\n        char[] c = s.toCharArray();\n        int i = 0;\n        while (i < c.length - 1) {\n            if (c[i] < c[i + 1]) {\n                break;\n            }\n            i++;\n        }\n        if (i == c.length - 1) {\n            return false;\n        }\n        int j = c.length - 1;\n        while (j > i) {\n            if (c[j] > c[i]) {\n                break;\n            }\n            j--;\n        }\n        char temp = c[i];\n        c[i] = c[j];\n        c[j] = temp;\n        String str = new String(c);\n        return Integer.parseInt(str);\n    }\n}","language":"java"}
{"task_id":"MBJP\/409","completion":"        int min = Integer.MAX_VALUE;\n        for (List<Integer> list2 : list1) {\n            int prod = 1;\n            for (int i = 0; i < list2.size(); i++) {\n                prod *= list2.get(i);\n            }\n            min = Math.min(min, prod);\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/410","completion":"        int min = Integer.MAX_VALUE;\n        for (Object val : listval) {\n            if (val instanceof Integer) {\n                min = Math.min(min, (Integer) val);\n            }\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/411","completion":"        String[] words = word.split(\"_\");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            sb.append(words[i].substring(0, 1).toUpperCase());\n            sb.append(words[i].substring(1).toLowerCase());\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/412","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) % 2 == 0) {\n                result.add(l.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/413","completion":"        List<Object> list = new ArrayList<>();\n        for (List<Object> list2 : list1) {\n            list.add(list2.get(n));\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/414","completion":"        int i = 0;\n        int j = 0;\n        while (i < list1.size() && j < list2.size()) {\n            if (list1.get(i) == list2.get(j)) {\n                i++;\n                j++;\n            } else if (list1.get(i) < list2.get(j)) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n        return i == list1.size() && j == list2.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/421","completion":"        String result = \"\";\n        for (Object obj : testTup) {\n            result += obj + \"-\";\n        }\n        return result.substring(0, result.length() - 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/424","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < testTuple.size(); i++) {\n            result.add(testTuple.get(i).substring(testTuple.get(i).length() - 1));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/427","completion":"        String regex = \"^([0-9]{4})-([0-9]{2})-([0-9]{2})$\";\n        String newDt = dt.replaceAll(regex, \"$3-$2-$1\");\n        return newDt;\n    }\n}","language":"java"}
{"task_id":"MBJP\/428","completion":"        int n = myList.size();\n        int h = 1;\n        while (h < n \/ 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && myList.get(j - h) > myList.get(j); j -= h) {\n                    Collections.swap(myList, j, j - h);\n                }\n            }\n            h = h \/ 3;\n        }\n        return myList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/429","completion":"        List<Integer> ans = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            ans.add(testTup1.get(i) & testTup2.get(i));\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/433","completion":"        for (int i = 0; i < arr.size(); i++) {\n            if (number < arr.get(i)) {\n                return \"No, entered number is less than those in the array\";\n            }\n        }\n        return \"Yes, the entered number is greater than those in the array\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/434","completion":"        if (text.length() < 2) {\n            return \"Not matched!\";\n        }\n        if (text.charAt(0) == 'a' && text.charAt(1) == 'b') {\n            return \"Found a match!\";\n        }\n        return \"Not matched!\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/435","completion":"        return n % 10;\n    }\n}","language":"java"}
{"task_id":"MBJP\/437","completion":"        int n = str1.length();\n        String str2 = \"\";\n        for (int i = 0; i < n; i++) {\n            if (i % 2 != 0) {\n                str2 = str2 + str1.charAt(i);\n            }\n        }\n        return str2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/441","completion":"        return 6*l*l;\n    }\n}","language":"java"}
{"task_id":"MBJP\/445","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            List<Integer> temp = new ArrayList<>();\n            for (int j = 0; j < testTup1.get(i).size(); j++) {\n                temp.add(testTup1.get(i).get(j) * testTup2.get(i).get(j));\n            }\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/449","completion":"        double a = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n        double b = Math.sqrt((x3 - x2) * (x3 - x2) + (y3 - y2) * (y3 - y2));\n        double c = Math.sqrt((x1 - x3) * (x1 - x3) + (y1 - y3) * (y1 - y3));\n        if (a + b > c && a + c > b && b + c > a) {\n            return \"Yes\";\n        } else {\n            return \"No\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/451","completion":"        String text = text1.replaceAll(\"\\\\s+\", \"\");\n        return text;\n    }\n}","language":"java"}
{"task_id":"MBJP\/454","completion":"        String result = \"Not matched!\";\n        if (text.contains(\"z\")) {\n            result = \"Found a match!\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/458","completion":"        return l * b;\n    }\n}","language":"java"}
{"task_id":"MBJP\/459","completion":"        return str1.replaceAll(\"[A-Z]+\", \"\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/460","completion":"        List<Integer> result = new ArrayList<>();\n        for (List<Integer> sub : lst) {\n            result.add(sub.get(0));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/463","completion":"        int max = Integer.MIN_VALUE, min = Integer.MAX_VALUE, res = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < 0) {\n                int temp = max;\n                max = min;\n                min = temp;\n            }\n            max = Math.max(max * arr.get(i), arr.get(i));\n            min = Math.min(min * arr.get(i), arr.get(i));\n            res = Math.max(res, max);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/464","completion":"        for (String key : dict.keySet()) {\n            if (dict.get(key) != n) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/466","completion":"        int left = 0, right = n - 1;\n        while (left < right) {\n            int mid = left + (right - left) \/ 2;\n            if (arr.get(mid) < arr.get(mid + 1)) {\n                left = mid + 1;\n            } else {\n                right = mid;\n            }\n        }\n        return left;\n    }\n}","language":"java"}
{"task_id":"MBJP\/467","completion":"        int octal = 0;\n        int rem = 0;\n        int i = 0;\n        while (decinum != 0) {\n            rem = decinum % 8;\n            octal = octal + rem * (int) Math.pow(10, i);\n            decinum = decinum \/ 8;\n            i++;\n        }\n        return octal;\n    }\n}","language":"java"}
{"task_id":"MBJP\/469","completion":"        int profit = 0;\n        for (int i = 0; i < price.size() - 1; i++) {\n            if (price.get(i + 1) - price.get(i) > 0) {\n                profit += price.get(i + 1) - price.get(i);\n            }\n        }\n        return profit;\n    }\n}","language":"java"}
{"task_id":"MBJP\/471","completion":"        int remainder = 0;\n        int product = 1;\n        for (int i = 0; i < lens; i++) {\n            product *= arr.get(i);\n        }\n        int temp = product \/ n;\n        remainder = product - temp * n;\n        return remainder;\n    }\n}","language":"java"}
{"task_id":"MBJP\/472","completion":"        int prev = l.get(0);\n        for (int i = 1; i < l.size(); i++) {\n            if (prev + 1 != l.get(i)) {\n                return false;\n            }\n            prev = l.get(i);\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/474","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < str1.length(); i++) {\n            if (str1.charAt(i) == ch.charAt(0)) {\n                sb.append(newch.charAt(0));\n            } else {\n                sb.append(str1.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/475","completion":"        List<List<Object>> list = new ArrayList<>();\n        List<Object> temp = new ArrayList<>();\n        for (String key : dict1.keySet()) {\n            temp.add(key);\n            temp.add(dict1.get(key));\n            list.add(temp);\n            temp = new ArrayList<>();\n        }\n        Collections.sort(list, new Comparator<List<Object>>() {\n            @Override\n            public int compare(List<Object> o1, List<Object> o2) {\n                return ((Integer) o2.get(1)).compareTo((Integer) o1.get(1));\n            }\n        });\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/476","completion":"        int max = Integer.MIN_VALUE;\n        int min = Integer.MAX_VALUE;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max + min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/477","completion":"        return string.toLowerCase();\n    }\n}","language":"java"}
{"task_id":"MBJP\/479","completion":"        int firstDigit = 0;\n        while (n > 0) {\n            firstDigit = n % 10;\n            n = n \/ 10;\n        }\n        return firstDigit;\n    }\n}","language":"java"}
{"task_id":"MBJP\/480","completion":"        \/\/ code here\n        int max = 0;\n        String maxChar = \"\";\n        for (int i = 0; i < str1.length(); i++) {\n            int count = 0;\n            for (int j = 0; j < str1.length(); j++) {\n                if (str1.charAt(i) == str1.charAt(j)) {\n                    count++;\n                }\n            }\n            if (count > max) {\n                max = count;\n                maxChar = str1.charAt(i) + \"\";\n            }\n        }\n        return maxChar;\n    }\n}","language":"java"}
{"task_id":"MBJP\/481","completion":"        if (sum == 0) {\n            return true;\n        }\n        if (n == 0) {\n            return false;\n        }\n        if (set.get(n - 1) > sum) {\n            return isSubsetSum(set, n - 1, sum);\n        } else {\n            return isSubsetSum(set, n - 1, sum) || isSubsetSum(set, n - 1, sum - set.get(n - 1));\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/484","completion":"        List<List<String>> result = new ArrayList<>();\n        for (List<String> list : testList1) {\n            if (!testList2.contains(list)) {\n                result.add(list);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/487","completion":"        \/\/ Write your code here\n        Collections.sort(tup, new Comparator<List<Integer>>() {\n            @Override\n            public int compare(List<Integer> o1, List<Integer> o2) {\n                return o1.get(o1.size() - 1) - o2.get(o2.size() - 1);\n            }\n        });\n        return tup;\n    }\n}","language":"java"}
{"task_id":"MBJP\/488","completion":"        double area = (5 * Math.pow(a, 2)) \/ (4 * Math.tan(Math.PI \/ 5));\n        return area;\n    }\n}","language":"java"}
{"task_id":"MBJP\/489","completion":"        int max = 0;\n        int maxCount = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) > max) {\n                max = arr.get(i);\n                maxCount = 1;\n            } else if (arr.get(i) == max) {\n                maxCount++;\n            }\n        }\n        return maxCount;\n    }\n}","language":"java"}
{"task_id":"MBJP\/491","completion":"        if (n == 0) {\n            return 0;\n        }\n        return a + sumGp(a * r, n - 1, r);\n    }\n}","language":"java"}
{"task_id":"MBJP\/492","completion":"        int low = 0;\n        int high = itemList.size() - 1;\n        while (low <= high) {\n            int mid = (low + high) \/ 2;\n            if (item == itemList.get(mid)) {\n                return true;\n            } else if (item < itemList.get(mid)) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/494","completion":"        int sum = 0;\n        int power = 0;\n        for (int i = testTup.size() - 1; i >= 0; i--) {\n            if (testTup.get(i) == 1) {\n                sum += Math.pow(2, power);\n            }\n            power++;\n        }\n        return Integer.toString(sum);\n    }\n}","language":"java"}
{"task_id":"MBJP\/498","completion":"        if (y == 0) {\n            return x;\n        } else {\n            return gcd(y, x % y);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/499","completion":"        return 2 * r;\n    }\n}","language":"java"}
{"task_id":"MBJP\/501","completion":"        int count = 0;\n        for (int i = 1; i <= x && i <= y; i++) {\n            if (x % i == 0 && y % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/502","completion":"        int rem = n % m;\n        return rem;\n    }\n}","language":"java"}
{"task_id":"MBJP\/504","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (i * i * i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/505","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < a.size(); i++) {\n            if (a.get(i) != 0) {\n                result.add(a.get(i));\n            }\n        }\n        for (int i = 0; i < a.size(); i++) {\n            if (a.get(i) == 0) {\n                result.add(0);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/506","completion":"        int res = 1;\n        int i = 1;\n        while (i <= k) {\n            res *= (n - i + 1);\n            i++;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/507","completion":"        List<String> list = new ArrayList<>();\n        for (String s : list1) {\n            if (!removewords.contains(s)) {\n                list.add(s);\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/509","completion":"        int sum = 0;\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (i % 2 != 0) {\n                sum += i;\n                count++;\n            }\n        }\n        return sum \/ count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/511","completion":"        int sum = 0;\n        int i = 2;\n        while (num > 1) {\n            if (num % i == 0) {\n                sum += i;\n                num \/= i;\n            } else {\n                i++;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/513","completion":"        List<Object> result = new ArrayList<>();\n        for (int i = 0; i < testTup.size(); i++) {\n            result.add(testTup.get(i));\n            result.add(k);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/514","completion":"        int sum = 0;\n        for (int i = 0; i < testTup.size(); i++) {\n            sum += testTup.get(i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/516","completion":"        int max = Collections.max(nums);\n        int min = Collections.min(nums);\n        int range = max - min + 1;\n        int[] bucket = new int[range];\n        for (int i = 0; i < nums.size(); i++) {\n            bucket[(nums.get(i) - min) % range]++;\n        }\n        int pos = 0;\n        for (int i = 0; i < range; i++) {\n            for (int j = 0; j < bucket[i]; j++) {\n                nums.set(pos++, i + min);\n            }\n        }\n        return nums;\n    }\n}","language":"java"}
{"task_id":"MBJP\/517","completion":"        int max = 0;\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) > 0 && list1.get(i) > max) {\n                max = list1.get(i);\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/518","completion":"        if (num < 0) {\n            return -1;\n        }\n        int left = 0;\n        int right = num;\n        while (left <= right) {\n            int mid = left + (right - left) \/ 2;\n            if (mid * mid == num) {\n                return mid;\n            } else if (mid * mid < num) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return right;\n    }\n}","language":"java"}
{"task_id":"MBJP\/521","completion":"        if (x == y && y == z) {\n            return true;\n        } else if (x == y || y == z || x == z) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/524","completion":"        int[] dp = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            dp[i] = arr.get(i);\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] + arr.get(i));\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/525","completion":"        int x1 = line1.get(0);\n        int y1 = line1.get(1);\n        int x2 = line2.get(0);\n        int y2 = line2.get(1);\n        return (x1 * y2 == x2 * y1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/527","completion":"        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/532","completion":"        int[] letters = new int[26];\n        for (int i = 0; i < str1.length(); i++) {\n            letters[str1.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < str2.length(); i++) {\n            letters[str2.charAt(i) - 'a']--;\n        }\n        for (int i = 0; i < letters.length; i++) {\n            if (letters[i] != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/536","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i += n) {\n            result.add(list.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/537","completion":"        \/\/ code here\n        String[] words = str1.split(\" \");\n        Set<String> set = new HashSet<>();\n        for (String word : words) {\n            if (set.contains(word)) {\n                return word;\n            }\n            set.add(word);\n        }\n        return \"None\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/541","completion":"        int sum = 0;\n        for (int i = 1; i <= n\/2; i++) {\n            if (n % i == 0) {\n                sum += i;\n            }\n        }\n        return sum > n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/542","completion":"        return text.replaceAll(\"[ ,.]\", \":\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/544","completion":"        StringBuilder sb = new StringBuilder();\n        for (List<String> list : testList) {\n            for (String str : list) {\n                sb.append(str).append(\" \");\n            }\n        }\n        return sb.toString().trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/548","completion":"        int n = arr.size();\n        int[] dp = new int[n];\n        int max = 1;\n        for (int i = 0; i < n; i++) {\n            dp[i] = 1;\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    dp[i] = Math.max(dp[i], dp[j] + 1);\n                }\n            }\n            max = Math.max(max, dp[i]);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/550","completion":"        if (low == high) {\n            return arr.get(low);\n        }\n        int mid = (low + high) \/ 2;\n        int leftMax = findMax(arr, low, mid);\n        int rightMax = findMax(arr, mid + 1, high);\n        int maxOfLeftAndRight = Math.max(leftMax, rightMax);\n        return maxOfLeftAndRight;\n    }\n}","language":"java"}
{"task_id":"MBJP\/551","completion":"        List<Integer> result = new ArrayList<>();\n        for (List<Integer> list : list1) {\n            result.add(list.get(n));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/554","completion":"        List<Integer> odd = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 != 0) {\n                odd.add(list.get(i));\n            }\n        }\n        return odd;\n    }\n}","language":"java"}
{"task_id":"MBJP\/555","completion":"        int sum = 0;\n        int sum1 = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i * i;\n        }\n        for (int i = 1; i <= n; i++) {\n            sum1 += i;\n        }\n        return sum - sum1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/556","completion":"        int count = 0;\n        for (int i = 0; i < a.size(); i++) {\n            for (int j = i + 1; j < a.size(); j++) {\n                if ((a.get(i) ^ a.get(j)) % 2 == 1) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/557","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            char ch = string.charAt(i);\n            if (Character.isUpperCase(ch)) {\n                sb.append(Character.toLowerCase(ch));\n            } else {\n                sb.append(Character.toUpperCase(ch));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/558","completion":"        int n = 0;\n        int diff = Math.abs(n1 - n2);\n        while (diff > 0) {\n            n += diff % 10;\n            diff \/= 10;\n        }\n        return n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/559","completion":"        int max = Integer.MIN_VALUE;\n        int sum = 0;\n        for (int i = 0; i < size; i++) {\n            sum += a.get(i);\n            if (sum > max) {\n                max = sum;\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/560","completion":"        List<Integer> union = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            union.add(testTup1.get(i));\n        }\n        for (int i = 0; i < testTup2.size(); i++) {\n            if (!union.contains(testTup2.get(i))) {\n                union.add(testTup2.get(i));\n            }\n        }\n        return union;\n    }\n}","language":"java"}
{"task_id":"MBJP\/562","completion":"        int maxLength = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            int tempLength = 0;\n            for (int j = 0; j < lst.get(i).size(); j++) {\n                if (lst.get(i).get(j) == 0) {\n                    tempLength = 0;\n                    break;\n                } else {\n                    tempLength++;\n                }\n            }\n            if (tempLength > maxLength) {\n                maxLength = tempLength;\n            }\n        }\n        return maxLength;\n    }\n}","language":"java"}
{"task_id":"MBJP\/565","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < word.length(); i++) {\n            result.add(word.substring(i, i + 1));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/566","completion":"        int sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n \/= 10;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/567","completion":"        if (list1.size() == 0) {\n            return true;\n        }\n        if (list1.size() == 1) {\n            return true;\n        }\n        if (list1.size() == 2) {\n            return list1.get(0) > list1.get(1);\n        }\n        int i = 0;\n        int j = 1;\n        while (j < list1.size()) {\n            if (list1.get(i) > list1.get(j)) {\n                return false;\n            }\n            i++;\n            j++;\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/568","completion":"        List<HashMap<Object, Object>> list = new ArrayList<>();\n        for (int i = 0; i < length; i++) {\n            list.add(new HashMap<>());\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/569","completion":"        List<List<String>> result = new ArrayList<>();\n        for (List<String> list : list1) {\n            List<String> sorted = new ArrayList<>(list);\n            sorted.sort(new Comparator<String>() {\n                @Override\n                public int compare(String o1, String o2) {\n                    return o1.compareTo(o2);\n                }\n            });\n            result.add(sorted);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/573","completion":"        \/\/ write your code here\n        int result = 1;\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < listData.size(); i++) {\n            if (set.contains(listData.get(i))) {\n                continue;\n            } else {\n                set.add(listData.get(i));\n                result *= listData.get(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/575","completion":"        int count = 0;\n        for (int i = l; i <= r; i++) {\n            if (i % a != 0) {\n                count++;\n            }\n            if (count == n) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/578","completion":"        List<Integer> result = new ArrayList<>();\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        while (i < list1.size() && j < list2.size() && k < list3.size()) {\n            result.add(list1.get(i));\n            result.add(list2.get(j));\n            result.add(list3.get(k));\n            i++;\n            j++;\n            k++;\n        }\n        while (i < list1.size()) {\n            result.add(list1.get(i));\n            i++;\n        }\n        while (j < list2.size()) {\n            result.add(list2.get(j));\n            j++;\n        }\n        while (k < list3.size()) {\n            result.add(list3.get(k));\n            k++;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/583","completion":"        int[] catalan = new int[num + 1];\n        catalan[0] = 1;\n        for (int i = 1; i <= num; i++) {\n            catalan[i] = 0;\n            for (int j = 0; j < i; j++) {\n                catalan[i] += catalan[j] * catalan[i - j - 1];\n            }\n        }\n        return catalan[num];\n    }\n}","language":"java"}
{"task_id":"MBJP\/587","completion":"        List<Integer> listy = new ArrayList<Integer>();\n        for (int i = 0; i < listx.size(); i++) {\n            listy.add(listx.get(i));\n        }\n        return listy;\n    }\n}","language":"java"}
{"task_id":"MBJP\/588","completion":"        int max = nums.get(0);\n        int min = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) > max) {\n                max = nums.get(i);\n            }\n            if (nums.get(i) < min) {\n                min = nums.get(i);\n            }\n        }\n        return max - min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/589","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = a; i <= b; i++) {\n            if (i == 0 || i == 1) {\n                result.add(i);\n            } else {\n                int square = i * i;\n                if (square == i) {\n                    result.add(i);\n                } else {\n                    int squareRoot = (int) Math.sqrt(i);\n                    if (squareRoot * squareRoot == i) {\n                        result.add(i);\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/591","completion":"        int temp = newlist.get(0);\n        newlist.set(0, newlist.get(newlist.size() - 1));\n        newlist.set(newlist.size() - 1, temp);\n        return newlist;\n    }\n}","language":"java"}
{"task_id":"MBJP\/598","completion":"        int temp = number, sum = 0, lastDigit;\n        while (temp != 0) {\n            lastDigit = temp % 10;\n            sum += Math.pow(lastDigit, 3);\n            temp \/= 10;\n        }\n        return number == sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/600","completion":"        return (n & 1) == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/602","completion":"        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < str1.length(); i++) {\n            char ch = str1.charAt(i);\n            if (map.containsKey(ch)) {\n                return ch + \"\";\n            } else {\n                map.put(ch, 1);\n            }\n        }\n        return \"None\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/604","completion":"        String[] words = s.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (int i = words.length - 1; i >= 0; i--) {\n            sb.append(words[i]);\n            sb.append(\" \");\n        }\n        return sb.toString().trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/605","completion":"        if (num < 2) {\n            return false;\n        }\n        for (int i = 2; i <= Math.sqrt(num); i++) {\n            if (num % i == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/606","completion":"        return Math.toRadians(degree);\n    }\n}","language":"java"}
{"task_id":"MBJP\/607","completion":"        List<Object> result = new ArrayList<>();\n        int index = 0;\n        while (index < text.length()) {\n            int start = text.indexOf(pattern, index);\n            if (start == -1) {\n                break;\n            }\n            int end = start + pattern.length();\n            result.add(pattern);\n            result.add(start);\n            result.add(end);\n            index = end;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/611","completion":"        int max = 0;\n        for (int i = 0; i < testList.size(); i++) {\n            max = Math.max(max, testList.get(i).get(n));\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/614","completion":"        int sum = 0;\n        for (int i = 0; i < testList.size(); i++) {\n            for (int j = 0; j < testList.get(i).size(); j++) {\n                sum += testList.get(i).get(j);\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/616","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            result.add(testTup1.get(i) % testTup2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/621","completion":"        for (int i = 0; i < testList.size(); i++) {\n            String[] split = testList.get(i).split(\" \");\n            for (int j = 0; j < split.length; j++) {\n                if (split[j].matches(\"\\\\d+\")) {\n                    int num = Integer.parseInt(split[j]);\n                    num += k;\n                    split[j] = String.valueOf(num);\n                }\n            }\n            testList.set(i, String.join(\" \", split));\n        }\n        return testList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/622","completion":"        int i = 0, j = 0;\n        int k = 0;\n        int size1 = arr1.size();\n        int size2 = arr2.size();\n        int size = size1 + size2;\n        int[] arr = new int[size];\n        for (i = 0; i < size1; i++) {\n            arr[k++] = arr1.get(i);\n        }\n        for (j = 0; j < size2; j++) {\n            arr[k++] = arr2.get(j);\n        }\n        Arrays.sort(arr);\n        if (size % 2 == 0) {\n            return (arr[size \/ 2 - 1] + arr[size \/ 2]) \/ 2.0;\n        } else {\n            return arr[size \/ 2];\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/624","completion":"        return string.toUpperCase();\n    }\n}","language":"java"}
{"task_id":"MBJP\/625","completion":"        int first = newlist.get(0);\n        int last = newlist.get(newlist.size() - 1);\n        newlist.set(0, last);\n        newlist.set(newlist.size() - 1, first);\n        return newlist;\n    }\n}","language":"java"}
{"task_id":"MBJP\/627","completion":"        int min = start;\n        int max = end;\n        int mid = (min + max) \/ 2;\n        int current = array.get(mid);\n        while (min <= max) {\n            if (current == mid) {\n                min = mid + 1;\n            } else if (current < mid) {\n                min = mid + 1;\n            } else {\n                max = mid - 1;\n            }\n            mid = (min + max) \/ 2;\n            current = array.get(mid);\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/628","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == ' ') {\n                sb.append(\"%20\");\n            } else {\n                sb.append(string.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/629","completion":"        List<Integer> even = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            if (list.get(i) % 2 == 0) {\n                even.add(list.get(i));\n            }\n        }\n        return even;\n    }\n}","language":"java"}
{"task_id":"MBJP\/631","completion":"        return text.replaceAll(\"\\\\s\", \"_\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/632","completion":"        List<Integer> newList = new ArrayList<>();\n        for (int i = 0; i < numList.size(); i++) {\n            if (numList.get(i) != 0) {\n                newList.add(numList.get(i));\n            }\n        }\n        for (int i = 0; i < numList.size(); i++) {\n            if (numList.get(i) == 0) {\n                newList.add(0);\n            }\n        }\n        return newList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/633","completion":"        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                sum += arr.get(i) ^ arr.get(j);\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/635","completion":"        List<Integer> result = new ArrayList<>();\n        PriorityQueue<Integer> heap = new PriorityQueue<>();\n        for (int i = 0; i < iterable.size(); i++) {\n            heap.add(iterable.get(i));\n        }\n        while (!heap.isEmpty()) {\n            result.add(heap.poll());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/637","completion":"        int profit = actualCost - saleAmount;\n        int loss = saleAmount - actualCost;\n        if (profit == 0 && loss == 0) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/643","completion":"        String result = \"Not matched!\";\n        if (text.contains(\"z\")) {\n            int index = text.indexOf(\"z\");\n            if (index != 0 && index != text.length() - 1) {\n                result = \"Found a match!\";\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/645","completion":"        int product = 1;\n        int n = testList.size();\n        for (int i = 0; i < n; i++) {\n            product *= testList.get(i).get(k);\n        }\n        return product;\n    }\n}","language":"java"}
{"task_id":"MBJP\/647","completion":"        List<String> result = new ArrayList<>();\n        String[] words = text.split(\"(?=\\\\p{Upper})\");\n        for (String word : words) {\n            result.add(word);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/649","completion":"        int sum = 0;\n        for (int i = m; i <= n; i++) {\n            sum += nums.get(i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/651","completion":"        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            set.add(testTup1.get(i));\n        }\n        for (int i = 0; i < testTup2.size(); i++) {\n            if (!set.contains(testTup2.get(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/654","completion":"        return 2 * (l + b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/655","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (int) Math.pow(i, 5);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/658","completion":"        int max = 0;\n        int maxOcc = 0;\n        int temp = 0;\n        for (int i = 0; i < list1.size(); i++) {\n            temp = list1.get(i);\n            if (temp == maxOcc) {\n                max++;\n            } else if (temp > maxOcc) {\n                maxOcc = temp;\n                max = 1;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/663","completion":"        int max = 0;\n        for (int i = 1; i <= n; i++) {\n            if ((i % x) == y) {\n                max = i;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/664","completion":"        int sum = 0;\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n                count++;\n            }\n        }\n        return sum \/ count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/667","completion":"        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            char ch = string.charAt(i);\n            if (vowels.indexOf(ch) != -1) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/669","completion":"        String regex = \"^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])$\";\n        if (ip.matches(regex)) {\n            return \"Valid IP address\";\n        } else {\n            return \"Invalid IP address\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/670","completion":"        int prev = nums.get(0);\n        for (int i = 1; i < nums.size(); i++) {\n            if (nums.get(i) < prev) {\n                return false;\n            }\n            prev = nums.get(i);\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/672","completion":"        int max = num1 > num2 ? num1 : num2;\n        return max > num3 ? max : num3;\n    }\n}","language":"java"}
{"task_id":"MBJP\/673","completion":"        int result = 0;\n        for (int i = 0; i < list.size(); i++) {\n            result = result * 10 + list.get(i);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/674","completion":"        Set<String> set = new HashSet<>();\n        String[] words = string.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            if (set.add(word)) {\n                sb.append(word).append(\" \");\n            }\n        }\n        return sb.toString().trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/678","completion":"        \/\/ write your code here\n        return str1.replaceAll(\"\\\\s+\",\"\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/680","completion":"        int i = 0;\n        int j = 1;\n        while (j < nums.size()) {\n            if (nums.get(i) < nums.get(j)) {\n                i++;\n            }\n            j++;\n        }\n        return i == j - 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/681","completion":"        int i = 2;\n        while (i <= n \/ i) {\n            if (n % i == 0) {\n                return i;\n            }\n            i++;\n        }\n        return n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/685","completion":"        int sum = 0;\n        boolean[] isPrime = new boolean[n + 1];\n        Arrays.fill(isPrime, true);\n        for (int i = 2; i <= n; i++) {\n            if (isPrime[i]) {\n                sum += i;\n                for (int j = i * i; j <= n; j += i) {\n                    isPrime[j] = false;\n                }\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/687","completion":"        if (a == 0) {\n            return b;\n        }\n        if (b == 0) {\n            return a;\n        }\n        if (a == b) {\n            return a;\n        }\n        return recurGcd(b, a % b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/688","completion":"        return Math.sqrt(a * a + b * b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/689","completion":"        \/\/ Write your code here\n        int[] dp = new int[n];\n        Arrays.fill(dp, Integer.MAX_VALUE);\n        dp[0] = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (arr.get(j) + j >= i) {\n                    dp[i] = Math.min(dp[i], dp[j] + 1);\n                }\n            }\n        }\n        return dp[n - 1];\n    }\n}","language":"java"}
{"task_id":"MBJP\/693","completion":"        return text1.replaceAll(\"\\\\s+\", \" \");\n    }\n}","language":"java"}
{"task_id":"MBJP\/695","completion":"        \/\/ write code here\n        int i = 0;\n        for(int j = 0; j < testTup1.size(); j++) {\n            if(testTup2.get(j) > testTup1.get(i)) {\n                i++;\n            }\n        }\n        return i == testTup1.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/701","completion":"        int sum = 0;\n        int leftSum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i);\n        }\n        int rightSum = sum;\n        for (int i = 0; i < arr.size(); i++) {\n            rightSum -= arr.get(i);\n            if (leftSum == rightSum) {\n                return i;\n            }\n            leftSum += arr.get(i);\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/702","completion":"        int count = 0;\n        int min = 0;\n        int max = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < k) {\n                min++;\n            } else {\n                max++;\n            }\n        }\n        if (min > max) {\n            count = min - max;\n        } else {\n            count = max - min;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/703","completion":"        if (d.containsKey(x)) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/704","completion":"        double sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += 1.0 \/ i;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/706","completion":"        \/\/ Your code here\n        HashSet<Integer> set = new HashSet<>();\n        for (int i = 0; i < m; i++) {\n            set.add(arr1.get(i));\n        }\n        for (int i = 0; i < n; i++) {\n            if (!set.contains(arr2.get(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/707","completion":"        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            count += Integer.bitCount(i);\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/708","completion":"        List<String> list = new ArrayList<>();\n        String[] words = string.split(\" \");\n        for (String word : words) {\n            list.add(word);\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/710","completion":"        int front = testTup.get(0);\n        int rear = testTup.get(testTup.size() - 1);\n        List<Integer> result = new ArrayList<>();\n        result.add(front);\n        result.add(rear);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/713","completion":"        return testTup.stream().allMatch(t -> t);\n    }\n}","language":"java"}
{"task_id":"MBJP\/717","completion":"        double mean = 0.0;\n        double sum = 0.0;\n        for (int i = 0; i < data.size(); i++) {\n            sum += data.get(i);\n        }\n        mean = sum \/ data.size();\n        double sd = 0.0;\n        for (int i = 0; i < data.size(); i++) {\n            sd += Math.pow(data.get(i) - mean, 2);\n        }\n        sd = Math.sqrt(sd \/ (data.size() - 1));\n        return sd;\n    }\n}","language":"java"}
{"task_id":"MBJP\/719","completion":"        String result = \"\";\n        if (text.length() >= 2 && text.substring(0, 1).equals(\"a\")) {\n            result = \"Found a match!\";\n        } else {\n            result = \"Not matched!\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/720","completion":"        List<Object> res = new ArrayList<>();\n        for (Integer i : testTup) {\n            res.add(i);\n        }\n        res.add(testDict);\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/726","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup.size() - 1; i++) {\n            result.add(testTup.get(i) * testTup.get(i + 1));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/727","completion":"        return s.replaceAll(\"[^a-zA-Z0-9]\", \"\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/728","completion":"        List<Integer> result = new ArrayList<>();\n        int i = 0;\n        int j = 0;\n        while (i < lst1.size() && j < lst2.size()) {\n            result.add(lst1.get(i) + lst2.get(j));\n            i++;\n            j++;\n        }\n        while (i < lst1.size()) {\n            result.add(lst1.get(i));\n            i++;\n        }\n        while (j < lst2.size()) {\n            result.add(lst2.get(j));\n            j++;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/729","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add(nums1.get(i) + nums2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/732","completion":"        String[] arr = text.split(\",\");\n        for (int i = 0; i < arr.length; i++) {\n            arr[i] = arr[i].replaceAll(\" \", \":\");\n            arr[i] = arr[i].replaceAll(\"\\\\.\", \":\");\n        }\n        return String.join(\":\", arr);\n    }\n}","language":"java"}
{"task_id":"MBJP\/733","completion":"        int low = 0, high = a.size() - 1;\n        while (low <= high) {\n            int mid = low + (high - low) \/ 2;\n            if (a.get(mid) == x) {\n                if (mid == 0 || a.get(mid - 1) != x) {\n                    return mid;\n                } else {\n                    high = mid - 1;\n                }\n            } else if (a.get(mid) < x) {\n                low = mid + 1;\n            } else {\n                high = mid - 1;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/736","completion":"        int left = 0;\n        int right = a.size() - 1;\n        while (left <= right) {\n            int mid = (left + right) \/ 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                left = mid + 1;\n            } else {\n                right = mid - 1;\n            }\n        }\n        return left;\n    }\n}","language":"java"}
{"task_id":"MBJP\/737","completion":"        String regex = \"^[aeiouAEIOU].*\";\n        return string.matches(regex) ? \"Valid\" : \"Invalid\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/741","completion":"        if (s.length() == 1) {\n            return true;\n        }\n        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            count[s.charAt(i) - 'a']++;\n        }\n        for (int i = 0; i < 26; i++) {\n            if (count[i] == 1) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/744","completion":"        for (int i = 0; i < testTup.size(); i++) {\n            if (testTup.get(i) == null) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/748","completion":"        String str = str1.replaceAll(\"([A-Z])\", \" $1\");\n        return str.trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/751","completion":"        if (i >= arr.size() - 1) {\n            return true;\n        }\n        int left = 2 * i + 1;\n        int right = 2 * i + 2;\n        if (left < arr.size() && arr.get(i) > arr.get(left)) {\n            return false;\n        }\n        if (right < arr.size() && arr.get(i) > arr.get(right)) {\n            return false;\n        }\n        return checkMinHeap(arr, left) && checkMinHeap(arr, right);\n    }\n}","language":"java"}
{"task_id":"MBJP\/753","completion":"        List<List<Object>> result = new ArrayList<>();\n        if (testList.size() < k) {\n            return result;\n        }\n        PriorityQueue<List<Object>> minHeap = new PriorityQueue<>(k, new Comparator<List<Object>>() {\n            @Override\n            public int compare(List<Object> o1, List<Object> o2) {\n                return ((Integer) o1.get(1)) - ((Integer) o2.get(1));\n            }\n        });\n        for (List<Object> tuple : testList) {\n            minHeap.add(tuple);\n        }\n        while (k > 0) {\n            result.add(minHeap.poll());\n            k--;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/754","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < l1.size(); i++) {\n            if (l1.get(i).equals(l2.get(i)) && l1.get(i).equals(l3.get(i))) {\n                result.add(l1.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/757","completion":"        int count = 0;\n        for (int i = 0; i < testList.size(); i++) {\n            for (int j = i + 1; j < testList.size(); j++) {\n                if (testList.get(i).equals(new StringBuilder(testList.get(j)).reverse().toString())) {\n                    count++;\n                }\n            }\n        }\n        return Integer.toString(count);\n    }\n}","language":"java"}
{"task_id":"MBJP\/759","completion":"        return num.matches(\"^[0-9]+(\\\\.[0-9]{1,2})?$\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/760","completion":"        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < n; i++) {\n            set.add(arr.get(i));\n        }\n        if (set.size() == 1) {\n            return \"YES\";\n        }\n        return \"NO\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/763","completion":"        int minDiff = Integer.MAX_VALUE;\n        for (int i = 0; i < n - 1; i++) {\n            for (int j = i + 1; j < n; j++) {\n                int diff = Math.abs(arr.get(i) - arr.get(j));\n                if (diff < minDiff) {\n                    minDiff = diff;\n                }\n            }\n        }\n        return minDiff;\n    }\n}","language":"java"}
{"task_id":"MBJP\/764","completion":"        int count = 0;\n        for (int i = 0; i < str.length(); i++) {\n            if (Character.isDigit(str.charAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/766","completion":"        List<List<Integer>> result = new ArrayList<>();\n        if (l1.size() < 2) {\n            return result;\n        }\n        int i = 0;\n        int j = 1;\n        while (j < l1.size()) {\n            List<Integer> temp = new ArrayList<>();\n            temp.add(l1.get(i));\n            temp.add(l1.get(j));\n            result.add(temp);\n            i++;\n            j++;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/767","completion":"        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) + arr.get(j) == sum) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/768","completion":"        if (x % 2 == 0) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/771","completion":"        Stack<Character> stack = new Stack<>();\n        for (int i = 0; i < exp.length(); i++) {\n            char ch = exp.charAt(i);\n            if (ch == '{' || ch == '(' || ch == '[') {\n                stack.push(ch);\n            } else if (ch == '}' || ch == ')' || ch == ']') {\n                if (stack.isEmpty()) {\n                    return false;\n                }\n                char top = stack.pop();\n                if (top == '{' && ch != '}') {\n                    return false;\n                }\n                if (top == '(' && ch != ')') {\n                    return false;\n                }\n                if (top == '[' && ch != ']') {\n                    return false;\n                }\n            }\n        }\n        return stack.isEmpty();\n    }\n}","language":"java"}
{"task_id":"MBJP\/772","completion":"        String[] words = testStr.split(\" \");\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].length() != k) {\n                sb.append(words[i]).append(\" \");\n            }\n        }\n        return sb.toString().trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/774","completion":"        String regex = \"^[\\\\w-_\\\\.+]*[\\\\w-_\\\\.]\\\\@([\\\\w]+\\\\.)+[\\\\w]+[\\\\w]$\";\n        return email.matches(regex) ? \"Valid Email\" : \"Invalid Email\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/775","completion":"        int n = nums.size();\n        for (int i = 0; i < n; i += 2) {\n            if (nums.get(i) % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/777","completion":"        int sum = 0;\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < arr.size(); i++) {\n            if (set.contains(arr.get(i))) {\n                continue;\n            }\n            sum += arr.get(i);\n            set.add(arr.get(i));\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/781","completion":"        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        if (count % 2 == 0) {\n            return \"Even\";\n        } else {\n            return \"Odd\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/786","completion":"        int i = 0;\n        int j = a.size() - 1;\n        while (i <= j) {\n            int mid = (i + j) \/ 2;\n            if (a.get(mid) == x) {\n                return mid;\n            } else if (a.get(mid) < x) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        }\n        return i;\n    }\n}","language":"java"}
{"task_id":"MBJP\/787","completion":"        if (text.length() < 3) {\n            return \"Not matched!\";\n        }\n        if (text.substring(0, 1).equals(\"a\") && text.substring(2, 3).equals(\"b\")) {\n            return \"Found a match!\";\n        }\n        return \"Not matched!\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/788","completion":"        List<String> newList = new ArrayList<>();\n        for (int i = 0; i < testList.size(); i++) {\n            newList.add(testList.get(i));\n        }\n        newList.add(testStr);\n        return newList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/789","completion":"        int perimeter = 0;\n        for (int i = 0; i < s; i++) {\n            perimeter += l;\n        }\n        return perimeter;\n    }\n}","language":"java"}
{"task_id":"MBJP\/790","completion":"        for (int i = 0; i < nums.size(); i += 2) {\n            if (nums.get(i) % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/792","completion":"        int count = 0;\n        for (List<Integer> list : inputList) {\n            if (list.size() > 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/793","completion":"        int i = 0;\n        int j = n - 1;\n        while (i <= j) {\n            int mid = (i + j) \/ 2;\n            if (arr.get(mid) == x) {\n                return mid;\n            } else if (arr.get(mid) < x) {\n                i = mid + 1;\n            } else {\n                j = mid - 1;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/794","completion":"        String result = \"Not matched!\";\n        if (text.contains(\"a\") && text.endsWith(\"b\")) {\n            result = \"Found a match!\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/796","completion":"        int sum = 0;\n        for (Map.Entry<String, Integer> entry : dict.entrySet()) {\n            sum += entry.getValue();\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/797","completion":"        int sum = 0;\n        for (int i = l; i <= r; i++) {\n            if (i % 2 != 0) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/798","completion":"        int sum = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            sum += arr.get(i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/799","completion":"        int mask = (1 << d) - 1;\n        return (n << d) | (n >>> (32 - d));\n    }\n}","language":"java"}
{"task_id":"MBJP\/800","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < text.length(); i++) {\n            if (text.charAt(i) != ' ') {\n                sb.append(text.charAt(i));\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/803","completion":"        if (n < 0) {\n            return false;\n        }\n        int sqrt = (int) Math.sqrt(n);\n        return sqrt * sqrt == n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/804","completion":"        int product = 1;\n        for (int i = 0; i < arr.size(); i++) {\n            product *= arr.get(i);\n        }\n        return product % n == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/805","completion":"        List<Integer> result = new ArrayList<>();\n        int maxSum = 0;\n        int sum = 0;\n        for (List<Integer> list : lists) {\n            sum = 0;\n            for (Integer i : list) {\n                sum += i;\n            }\n            if (sum > maxSum) {\n                maxSum = sum;\n                result = list;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/806","completion":"        int max = 0;\n        int count = 0;\n        for (int i = 0; i < testStr.length(); i++) {\n            if (Character.isUpperCase(testStr.charAt(i))) {\n                count++;\n            } else {\n                if (count > max) {\n                    max = count;\n                }\n                count = 0;\n            }\n        }\n        if (count > max) {\n            max = count;\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/807","completion":"        int odd = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) % 2 != 0) {\n                odd = nums.get(i);\n                break;\n            }\n        }\n        return odd;\n    }\n}","language":"java"}
{"task_id":"MBJP\/809","completion":"        \/\/ write your code here\n        int i = 0;\n        for (int j = 0; j < testTup2.size(); j++) {\n            if (testTup1.get(i) > testTup2.get(j)) {\n                i++;\n            } else if (testTup1.get(i) < testTup2.get(j)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/810","completion":"        List<String> list = new ArrayList<>();\n        for (int i = 0; i < a; i++) {\n            list.add(\"p\");\n        }\n        for (int i = 0; i < b; i++) {\n            list.add(\"q\");\n        }\n        for (int i = 0; i < c; i++) {\n            list.add(\"r\");\n        }\n        for (int i = 0; i < d; i++) {\n            list.add(\"s\");\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/811","completion":"        if (testList1.size() != testList2.size()) {\n            return false;\n        }\n        for (int i = 0; i < testList1.size(); i++) {\n            if (testList1.get(i).size() != testList2.get(i).size()) {\n                return false;\n            }\n            for (int j = 0; j < testList1.get(i).size(); j++) {\n                if (testList1.get(i).get(j) != testList2.get(i).get(j)) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/813","completion":"        int len = str1.length();\n        return len;\n    }\n}","language":"java"}
{"task_id":"MBJP\/815","completion":"        int[] count = new int[n];\n        for (int i = 0; i < n; i++) {\n            count[arr.get(i)]++;\n        }\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            while (count[i] > 0) {\n                result.add(i);\n                count[i]--;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/818","completion":"        int count = 0;\n        for (int i = 0; i < str.length(); i++) {\n            if (Character.isLowerCase(str.charAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/820","completion":"        if (monthnum1 == 2) {\n            return true;\n        } else if (monthnum1 == 1 || monthnum1 == 3 || monthnum1 == 5 || monthnum1 == 7 || monthnum1 == 8 || monthnum1 == 10 || monthnum1 == 12) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/821","completion":"        HashMap<String, String> merged = new HashMap<>();\n        for (String key : dict1.keySet()) {\n            merged.put(key, dict1.get(key));\n        }\n        for (String key : dict2.keySet()) {\n            merged.put(key, dict2.get(key));\n        }\n        return merged;\n    }\n}","language":"java"}
{"task_id":"MBJP\/822","completion":"        if (p.length() < 8) {\n            return false;\n        }\n        if (p.matches(\".*[a-z]+.*\") && p.matches(\".*[A-Z]+.*\") && p.matches(\".*[0-9]+.*\")) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/823","completion":"        String regex = \"^\" + sample + \".*\";\n        return string.matches(regex) ? \"string starts with the given substring\" : \"string doesnt start with the given substring\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/824","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) % 2 != 0) {\n                result.add(l.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/825","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < listIndex.size(); i++) {\n            result.add(nums.get(listIndex.get(i)));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/827","completion":"        int sum = 0;\n        for (int i = 0; i < list1.size(); i++) {\n            sum += list1.get(i).get(c);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/828","completion":"        List<Integer> alphabets = new ArrayList<>();\n        List<Integer> digits = new ArrayList<>();\n        List<Integer> specials = new ArrayList<>();\n        for (int i = 0; i < string.length(); i++) {\n            char ch = string.charAt(i);\n            if (Character.isAlphabetic(ch)) {\n                alphabets.add(1);\n            } else if (Character.isDigit(ch)) {\n                digits.add(1);\n            } else if (Character.isWhitespace(ch)) {\n                continue;\n            } else {\n                specials.add(1);\n            }\n        }\n        return Arrays.asList(alphabets.size(), digits.size(), specials.size());\n    }\n}","language":"java"}
{"task_id":"MBJP\/831","completion":"        int count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i).equals(arr.get(j))) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/832","completion":"        \/\/ write your code here\n        String[] split = input.split(\"[^0-9]+\");\n        int max = Integer.MIN_VALUE;\n        for (String s : split) {\n            if (s.length() > 0) {\n                int num = Integer.parseInt(s);\n                if (num > max) {\n                    max = num;\n                }\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/838","completion":"        int count = 0;\n        for (int i = 0; i < s1.length(); i++) {\n            if (s1.charAt(i) != s2.charAt(i)) {\n                count++;\n                int temp = s1.charAt(i);\n                s1 = s1.substring(0, i) + s1.substring(i + 1);\n                s2 = s2.substring(0, i) + s2.substring(i + 1);\n                s1 = s1 + temp;\n                s2 = s2 + temp;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/839","completion":"        List<List<Object>> sortedTup = new ArrayList<>();\n        for (List<Object> tuple : tup) {\n            sortedTup.add(tuple);\n        }\n        Collections.sort(sortedTup, new Comparator<List<Object>>() {\n            @Override\n            public int compare(List<Object> o1, List<Object> o2) {\n                return o1.get(0).toString().compareTo(o2.get(0).toString());\n            }\n        });\n        return sortedTup;\n    }\n}","language":"java"}
{"task_id":"MBJP\/840","completion":"        if (a * a - b * b - c * c < 0) {\n            return \"No\";\n        } else if (a * a - b * b - c * c > 0) {\n            return \"Yes\";\n        } else {\n            return \"Yes\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/841","completion":"        int[] count = new int[n];\n        for (int i = 0; i < n; i++) {\n            count[i] = 0;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    count[i]++;\n                }\n            }\n        }\n        int invCount = 0;\n        for (int i = 0; i < n; i++) {\n            invCount += count[i];\n        }\n        return invCount;\n    }\n}","language":"java"}
{"task_id":"MBJP\/847","completion":"        List<Integer> res = new ArrayList<Integer>();\n        for (Integer x : xs) {\n            res.add(x);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/848","completion":"        return (base1 + base2) * height \/ 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/852","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < numList.size(); i++) {\n            if (numList.get(i) >= 0) {\n                result.add(numList.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/853","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                if (i % 2 != 0) {\n                    sum += i;\n                }\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/855","completion":"        return (x % 2 == 0);\n    }\n}","language":"java"}
{"task_id":"MBJP\/857","completion":"        List<List<String>> list2 = new ArrayList<>();\n        for (String s : list1) {\n            String[] str = s.split(\"\");\n            List<String> strList = new ArrayList<>();\n            for (String st : str) {\n                strList.add(st);\n            }\n            list2.add(strList);\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/860","completion":"        return string.matches(\"^[a-zA-Z0-9]*$\") ? \"Accept\" : \"Discard\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/866","completion":"        int[] days = {31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};\n        if (monthname2.equals(\"February\")) {\n            return false;\n        } else if (monthname2.equals(\"January\")) {\n            return true;\n        } else if (monthname2.equals(\"March\")) {\n            return true;\n        } else {\n            for (int i = 0; i < days.length; i++) {\n                if (days[i] == 31) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/868","completion":"        if (a.length() == 0) {\n            return 0;\n        }\n        String[] words = a.split(\" \");\n        int len = words.length;\n        return words[len - 1].length();\n    }\n}","language":"java"}
{"task_id":"MBJP\/869","completion":"        List<List<Integer>> list = new ArrayList<>();\n        for (List<Integer> list2 : list1) {\n            if (list2.get(0) >= leftrange && list2.get(0) <= rigthrange) {\n                list.add(list2);\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/870","completion":"        return nums.stream().filter(n -> n > 0).reduce(0, (a, b) -> a + b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/871","completion":"        if (string1.length() != string2.length()) {\n            return false;\n        }\n        String s1 = string1 + string1;\n        return s1.contains(string2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/873","completion":"        if (n == 0) {\n            return 0;\n        } else if (n == 1) {\n            return 1;\n        } else {\n            return fibonacci(n - 1) + fibonacci(n - 2);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/876","completion":"        int gcd = 1;\n        int lcm = 1;\n        if (x > y) {\n            int temp = x;\n            x = y;\n            y = temp;\n        }\n        for (int i = 1; i <= x; i++) {\n            if (x % i == 0 && y % i == 0) {\n                gcd = i;\n            }\n        }\n        lcm = (x * y) \/ gcd;\n        return lcm;\n    }\n}","language":"java"}
{"task_id":"MBJP\/877","completion":"        char[] arr = str.toCharArray();\n        Arrays.sort(arr);\n        return new String(arr);\n    }\n}","language":"java"}
{"task_id":"MBJP\/878","completion":"        \/\/ write your code here\n        Set<Integer> set = new HashSet<>();\n        for (int i = 0; i < k.size(); i++) {\n            set.add(k.get(i));\n        }\n        for (int i = 0; i < testTuple.size(); i++) {\n            if (!set.contains(testTuple.get(i))) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/879","completion":"        String pattern = \"a.*b\";\n        if (text.matches(pattern)) {\n            return \"Found a match!\";\n        } else {\n            return \"Not matched!\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/880","completion":"        int d = b*b - 4*a*c;\n        if (d < 0) {\n            return \"No solutions\";\n        } else if (d == 0) {\n            return \"1 solution\";\n        } else {\n            return \"2 solutions\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/885","completion":"        \/\/ code here\n        HashMap<Character, Character> map = new HashMap<>();\n        for (int i = 0; i < str1.length(); i++) {\n            if (map.containsKey(str1.charAt(i))) {\n                if (map.get(str1.charAt(i)) != str2.charAt(i)) {\n                    return false;\n                }\n            } else {\n                if (map.containsValue(str2.charAt(i))) {\n                    return false;\n                } else {\n                    map.put(str1.charAt(i), str2.charAt(i));\n                }\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/886","completion":"        double sum = 0;\n        for (int i = 0; i < numbers.size(); i++) {\n            sum += numbers.get(i);\n        }\n        return sum \/ numbers.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/887","completion":"        return (n & 1) == 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/888","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            List<Integer> temp = new ArrayList<>();\n            for (int j = 0; j < testTup1.get(i).size(); j++) {\n                temp.add(testTup1.get(i).get(j) - testTup2.get(i).get(j));\n            }\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/889","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : lists) {\n            List<Integer> reversedList = new ArrayList<>();\n            for (int i = list.size() - 1; i >= 0; i--) {\n                reversedList.add(list.get(i));\n            }\n            result.add(reversedList);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/890","completion":"        int i = 0;\n        int j = 0;\n        while (i < arr1.size() && j < arr2.size()) {\n            if (arr1.get(i) < arr2.get(j)) {\n                i++;\n            } else if (arr1.get(i) > arr2.get(j)) {\n                j++;\n            } else {\n                i++;\n                j++;\n            }\n        }\n        return i < arr1.size() ? i : j;\n    }\n}","language":"java"}
{"task_id":"MBJP\/891","completion":"        if (a == 0 || b == 0) {\n            return false;\n        }\n        int count = 0;\n        while (a != 0 || b != 0) {\n            if (a % 10 == b % 10) {\n                count++;\n            }\n            a = a \/ 10;\n            b = b \/ 10;\n        }\n        return count == 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/892","completion":"        return text.replaceAll(\"\\\\s+\", \" \");\n    }\n}","language":"java"}
{"task_id":"MBJP\/894","completion":"        List<Double> result = new ArrayList<>();\n        String[] strArr = testStr.split(\",\");\n        for (String str : strArr) {\n            result.add(Double.parseDouble(str));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/896","completion":"        tuples.sort(new Comparator<List<Integer>>() {\n            @Override\n            public int compare(List<Integer> t1, List<Integer> t2) {\n                return t1.get(t1.size() - 1) - t2.get(t2.size() - 1);\n            }\n        });\n        return tuples;\n    }\n}","language":"java"}
{"task_id":"MBJP\/897","completion":"        String[] words = sentence.split(\" \");\n        for (int i = 0; i < words.length; i++) {\n            if (words[i].equals(word)) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/900","completion":"        if (string.startsWith(\"5\")) {\n            return true;\n        } else if (string.startsWith(\"6\")) {\n            return false;\n        } else if (string.startsWith(\"7\")) {\n            return false;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/902","completion":"        HashMap<String, Integer> result = new HashMap<>();\n        for (String key : d1.keySet()) {\n            if (d2.containsKey(key)) {\n                result.put(key, d1.get(key) + d2.get(key));\n            } else {\n                result.put(key, d1.get(key));\n            }\n        }\n        for (String key : d2.keySet()) {\n            if (!d1.containsKey(key)) {\n                result.put(key, d2.get(key));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/904","completion":"        return x % 2 == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/908","completion":"        int start = 0;\n        int end = n - 1;\n        while (start <= end) {\n            int mid = start + (end - start) \/ 2;\n            if (arr.get(mid) == mid) {\n                return mid;\n            } else if (arr.get(mid) < mid) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/913","completion":"        if (string.length() == 0) {\n            return false;\n        }\n        int last = string.length() - 1;\n        char lastChar = string.charAt(last);\n        if (Character.isDigit(lastChar)) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/916","completion":"        List<Integer> result = new ArrayList<>();\n        if (a.size() < 3) {\n            return result;\n        }\n        int n = a.size();\n        for (int i = 0; i < n - 2; i++) {\n            for (int j = i + 1; j < n - 1; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if (a.get(i) + a.get(j) + a.get(k) == sum) {\n                        result.add(a.get(i));\n                        result.add(a.get(j));\n                        result.add(a.get(k));\n                        return result;\n                    }\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/917","completion":"        String result = \"Not matched!\";\n        for (int i = 0; i < text.length(); i++) {\n            if (Character.isUpperCase(text.charAt(i))) {\n                if (i + 1 < text.length() && Character.isLowerCase(text.charAt(i + 1))) {\n                    result = \"Found a match!\";\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/918","completion":"        int[][] dp = new int[m + 1][n + 1];\n        for (int i = 0; i <= m; i++) {\n            dp[i][0] = 1;\n        }\n        for (int i = 1; i <= m; i++) {\n            for (int j = 1; j <= n; j++) {\n                if (s.get(i - 1) <= j) {\n                    dp[i][j] = dp[i - 1][j] + dp[i][j - s.get(i - 1)];\n                } else {\n                    dp[i][j] = dp[i - 1][j];\n                }\n            }\n        }\n        return dp[m][n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/919","completion":"        int result = 1;\n        for (int item : items) {\n            result *= item;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/921","completion":"        List<List<Integer>> result = new ArrayList<>();\n        if (testTup.size() == 0) {\n            return result;\n        }\n        int i = 0;\n        while (i < testTup.size()) {\n            List<Integer> temp = new ArrayList<>();\n            for (int j = i; j < i + n; j++) {\n                if (j < testTup.size()) {\n                    temp.add(testTup.get(j));\n                }\n            }\n            result.add(temp);\n            i += n;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/924","completion":"        return x > y ? x : y;\n    }\n}","language":"java"}
{"task_id":"MBJP\/925","completion":"        int product = 1;\n        for (int i = 0; i < nums.size(); i++) {\n            product *= nums.get(i);\n        }\n        return product;\n    }\n}","language":"java"}
{"task_id":"MBJP\/928","completion":"        String[] dtArray = dt.split(\"-\");\n        String[] dtArray2 = dtArray[2].split(\"(?=\\\\d\\\\d)\");\n        String dt2 = dtArray2[0] + \"-\" + dtArray[1] + \"-\" + dtArray[0];\n        return dt2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/929","completion":"        int count = 0;\n        for (int i = 0; i < tuplex.size(); i++) {\n            if (tuplex.get(i) == value) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/930","completion":"        String regex = \"a(\\\\w+)\\\\1*\";\n        if (text.matches(regex)) {\n            return \"Found a match!\";\n        } else {\n            return \"Not matched!\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/932","completion":"        Set<String> set = new HashSet<>();\n        List<String> result = new ArrayList<>();\n        for (String s : l) {\n            if (!set.contains(s)) {\n                set.add(s);\n                result.add(s);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/933","completion":"        return text.replaceAll(\"([a-z])([A-Z])\", \"$1_$2\").toLowerCase();\n    }\n}","language":"java"}
{"task_id":"MBJP\/935","completion":"        int sum = 0;\n        for (int i = 1; i <= number; i++) {\n            sum += i * i;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/937","completion":"        int max = 0;\n        String maxChar = \"\";\n        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < str1.length(); i++) {\n            char ch = str1.charAt(i);\n            if (map.containsKey(ch)) {\n                map.put(ch, map.get(ch) + 1);\n            } else {\n                map.put(ch, 1);\n            }\n        }\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > max) {\n                max = entry.getValue();\n                maxChar = entry.getKey().toString();\n            }\n        }\n        return maxChar;\n    }\n}","language":"java"}
{"task_id":"MBJP\/940","completion":"        \/\/ write your code here\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>();\n        for (int i = 0; i < arr.size(); i++) {\n            minHeap.add(arr.get(i));\n        }\n        List<Integer> result = new ArrayList<>();\n        while (!minHeap.isEmpty()) {\n            result.add(minHeap.poll());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/942","completion":"        for (int i = 0; i < checkList.size(); i++) {\n            if (testTup.contains(checkList.get(i))) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/943","completion":"        List<Integer> result = new ArrayList<>();\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        pq.addAll(num1);\n        pq.addAll(num2);\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/945","completion":"        HashSet<String> set = new HashSet<>();\n        for (String s : t) {\n            set.add(s);\n        }\n        return set;\n    }\n}","language":"java"}
{"task_id":"MBJP\/947","completion":"        int min = Integer.MAX_VALUE;\n        for (String s : list1) {\n            if (s.length() < min) {\n                min = s.length();\n            }\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/948","completion":"        if (index < 0) {\n            index = tup1.size() + index;\n        }\n        return (String) tup1.get(index);\n    }\n}","language":"java"}
{"task_id":"MBJP\/950","completion":"        String[] zodiacs = {\"Monkey\", \"Rooster\", \"Dog\", \"Pig\", \"Rat\", \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\", \"Horse\"};\n        return zodiacs[year % 12];\n    }\n}","language":"java"}
{"task_id":"MBJP\/955","completion":"        int sum = 0;\n        for (int i = 1; i <= n\/2; i++) {\n            if (n % i == 0) {\n                sum += i;\n            }\n        }\n        return sum > n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/956","completion":"        List<String> result = new ArrayList<>();\n        String[] words = text.split(\"(?=\\\\p{Upper})\");\n        for (String word : words) {\n            result.add(word);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/958","completion":"        String[] roman = {\"M\", \"CM\", \"D\", \"CD\", \"C\", \"XC\", \"L\", \"XL\", \"X\", \"IX\", \"V\", \"IV\", \"I\"};\n        int[] values = {1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1};\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < values.length; i++) {\n            while (num >= values[i]) {\n                num -= values[i];\n                sb.append(roman[i]);\n            }\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/962","completion":"        int sum = 0;\n        for (int i = l; i <= r; i++) {\n            if (i % 2 == 0) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/964","completion":"        if (s.length() % 2 == 0) {\n            return true;\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/965","completion":"        String[] words = text.split(\"(?=[A-Z])\");\n        StringBuilder sb = new StringBuilder();\n        for (String word : words) {\n            sb.append(word.toLowerCase());\n            sb.append(\"_\");\n        }\n        return sb.substring(0, sb.length() - 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/967","completion":"        String result = \"not accepted\";\n        if (string.contains(\"A\") || string.contains(\"E\") || string.contains(\"I\") || string.contains(\"O\") || string.contains(\"U\")) {\n            result = \"accepted\";\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/969","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            List<Integer> temp = new ArrayList<>();\n            temp.addAll(list);\n            temp.sort(Comparator.naturalOrder());\n            if (result.isEmpty()) {\n                result.add(temp);\n            } else {\n                List<Integer> last = result.get(result.size() - 1);\n                if (temp.get(0).equals(last.get(0))) {\n                    last.addAll(temp.subList(1, temp.size()));\n                } else {\n                    result.add(temp);\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/970","completion":"        if (x < y) {\n            return x;\n        } else {\n            return y;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/972","completion":"        List<Integer> result = new ArrayList<>();\n        result.addAll(testTup1);\n        result.addAll(testTup2);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/973","completion":"        \/\/ code here\n        if (d == 0) {\n            return s;\n        }\n        char[] arr = s.toCharArray();\n        int n = arr.length;\n        int i = 0;\n        while (i < d) {\n            char temp = arr[0];\n            for (int j = 0; j < n - 1; j++) {\n                arr[j] = arr[j + 1];\n            }\n            arr[n - 1] = temp;\n            i++;\n        }\n        return new String(arr);\n    }\n}","language":"java"}
{"task_id":"MBJP\/4","completion":"        \/\/ write your code here\n        PriorityQueue<Integer> minHeap = new PriorityQueue<>((a, b) -> b - a);\n        for (Integer num : nums) {\n            minHeap.add(num);\n        }\n        List<Integer> ans = new ArrayList<>();\n        while (n > 0) {\n            ans.add(minHeap.remove());\n            n--;\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/8","completion":"        return nums.stream()\n                .map(i -> i*i)\n                .collect(ArrayList::new, List::add, List::addAll);\n    }\n}","language":"java"}
{"task_id":"MBJP\/9","completion":"        int count = 0;\n        int[] temp = new int[26];\n        for(int i=0;i<str.length();i++)\n            temp[str.charAt(i) - 'a']++;\n        for(int i=0;i<26;i++)\n            if(temp[i]>0)\n                count++;\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/12","completion":"        Collections.sort(m, new Comparator<List<Integer>>() {\n            public int compare(List<Integer> l1, List<Integer> l2) {\n                int sum1 = 0, sum2 = 0;\n                for (int i = 0; i < m.get(0).size(); i++) {\n                    sum1 += l1.get(i);\n                    sum2 += l2.get(i);\n                }\n                if (sum1 != sum2) {\n                    return sum1 - sum2;\n                }\n                return l1.get(0) - l2.get(0);\n            }\n        });\n        return m;\n    }\n}","language":"java"}
{"task_id":"MBJP\/16","completion":"        String[] t = text.split(\"_\");\n        int count = 0;\n        for (String i : t) {\n            if (i.matches(\"[a-z]+\")) {\n                count++;\n            }\n        }\n        if (count == t.length) {\n            return \"Found a match!\";\n        } else {\n            return \"Not matched!\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/30","completion":"        int count = 0;\n        char[] c = s.toCharArray();\n        for (int i = 0; i < c.length; i++) {\n            for (int j = i; j < c.length; j++) {\n                if (i == j)\n                    count++;\n                else if (c[i] == c[j])\n                    count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/33","completion":"        String binary = \"\";\n        while(n>0){\n            int rem = n % 2;\n            binary = rem + binary;\n            n = n\/2;\n        }\n        return Integer.parseInt(binary);\n    }\n}","language":"java"}
{"task_id":"MBJP\/34","completion":"        int missing = 1;\n        if (n == 0 || n == 1) {\n            return missing;\n        }\n        for (int i = 1; i <= n; i++) {\n            if (ar.get(i - 1) == i) {\n                missing = i;\n            } else if (ar.get(i - 1) != i) {\n                return i;\n            }\n        }\n        return missing;\n    }\n}","language":"java"}
{"task_id":"MBJP\/37","completion":"        Collections.sort(mixedList, new Comparator<Object>() {\n            @Override\n            public int compare(Object a, Object b) {\n                return a.toString().compareTo(b.toString());\n            }\n        });\n        return mixedList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/41","completion":"        List<Integer> result = new ArrayList<Integer>();\n        for (Integer i : nums) {\n            if (i % 2 == 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/42","completion":"        Map<Integer, Integer> map = new HashMap<Integer, Integer>();\n        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.get(arr.get(i)) != null) {\n                count = count + map.get(arr.get(i));\n                map.put(arr.get(i), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1);\n            }\n        }\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > 1 && (n - entry.getKey()) % entry.getValue() == 0) {\n                return count + (n - entry.getKey()) \/ entry.getValue();\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/45","completion":"        int result = 0;\n        int min = l.get(0);\n        for(int i=1; i<l.size(); i++) {\n            if(l.get(i) > min) {\n                result = result > min ? result : min;\n            } else {\n                min = l.get(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/48","completion":"        int n_ = n & 0xFFFFFFFF;\n        n_ |= (n & 0xAAAAAAAA) >>> 1;\n        n_ |= (n & 0xCCCCCCCC) >>> 2;\n        n_ |= (n & 0xF0F0F0F0) >>> 4;\n        n_ |= (n & 0xFF00FF00) >>> 8;\n        n_ |= (n & 0xFFFF0000) >>> 16;\n        return n_;\n    }\n}","language":"java"}
{"task_id":"MBJP\/50","completion":"        List<Object> outputList = new ArrayList<>();\n        if (inputList.size() == 0) {\n            outputList.add(0);\n            return outputList;\n        }\n        List<Integer> minList = inputList.get(0);\n        for (List<Integer> list : inputList) {\n            if (minList.size() > list.size()) {\n                minList = list;\n            }\n        }\n        outputList.add(minList.size());\n        outputList.add(minList);\n        return outputList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/55","completion":"        return n == 1 ? a : r * tnGp(a, n-1, r);\n    }\n}","language":"java"}
{"task_id":"MBJP\/57","completion":"        List<Integer> temp = new ArrayList<>(arr);\n        temp.sort(Comparator.reverseOrder());\n\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            max += temp.get(i) * (int) Math.pow(10, n - i - 1);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/63","completion":"        int maxDiff = 0, min = Integer.MAX_VALUE, max = Integer.MIN_VALUE;\n        for (int i = 0; i < testList.size(); i++) {\n            List<Integer> elem = testList.get(i);\n            min = Math.min(min, elem.get(0));\n            max = Math.max(max, elem.get(0));\n            min = Math.min(min, elem.get(1));\n            max = Math.max(max, elem.get(1));\n            if (i != testList.size() - 1) {\n                maxDiff = Math.max(maxDiff, Math.abs(elem.get(0) - elem.get(1)));\n            }\n        }\n        return maxDiff;\n    }\n}","language":"java"}
{"task_id":"MBJP\/69","completion":"        if (l == null || s == null) {\n            return false;\n        }\n\n        if (l.size() == 0) {\n            return false;\n        }\n\n        int j = s.get(0);\n        boolean result = false;\n        for (int i = 0; i < l.size(); i++) {\n            if (l.get(i) == j) {\n                result = true;\n                for (int k = 1; k < s.size(); k++) {\n                    result = result && l.get(i + k) == s.get(k);\n                }\n                if (result) {\n                    break;\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/74","completion":"        List<String> patterns_color = new ArrayList<String>();\n        for (String p : patterns) {\n            patterns_color.add(colors.get(patterns.indexOf(p)));\n        }\n        if (patterns_color.size() != colors.size())\n            return false;\n        return patterns_color.containsAll(colors);\n    }\n}","language":"java"}
{"task_id":"MBJP\/77","completion":"        \/\/ write your code here\n        String num=Integer.toString(n);\n        int sumEven=0,sumOdd=0;\n        for(int i=0;i<num.length();i++){\n            int numi=Integer.parseInt(Character.toString(num.charAt(i)));\n            if(i%2==0){\n                sumEven+=numi;\n            }else{\n                sumOdd+=numi;\n            }\n        }\n        return sumEven-sumOdd==0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/80","completion":"        double Tetrahedral = (n*(n+1)*(n+2))\/6;\n        return Tetrahedral;\n    }\n}","language":"java"}
{"task_id":"MBJP\/87","completion":"        HashMap<String, String> dict = new HashMap<>();\n        for(String key1 : dict1.keySet()) {\n            dict.put(key1, dict1.get(key1));\n        }\n        for(String key2 : dict2.keySet()) {\n            if(!dict.containsKey(key2)) {\n                dict.put(key2, dict2.get(key2));\n            }\n        }\n        for(String key3 : dict3.keySet()) {\n            if(!dict.containsKey(key3)) {\n                dict.put(key3, dict3.get(key3));\n            }\n        }\n        return dict;\n    }\n}","language":"java"}
{"task_id":"MBJP\/92","completion":"        \/\/ code here\n        if(n.length()%2 != 0)\n            return true;\n        int i = 0;\n        while(i < n.length()) {\n            char ch = n.charAt(i);\n            char ch2 = n.charAt(i+1);\n            if(ch == ch2)\n                i++;\n            else\n                return false;\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/101","completion":"        int x = 0;\n        if (k > n) {\n            k = k - n;\n        }\n        for (int i = 0; i < k; i++) {\n            x = arr.get(i);\n        }\n        return x;\n    }\n}","language":"java"}
{"task_id":"MBJP\/106","completion":"        \/\/ Write your code here\n        List<Integer> res = new ArrayList<Integer>();\n        res.addAll(testTup);\n        res.addAll(testList);\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/107","completion":"        int c = 0;\n        for (int i = l; i <= r; i++) {\n            String str = Integer.toHexString(i);\n            int num = str.length();\n            for (int j = 0; j < num; j++) {\n                char ch = str.charAt(j);\n                if (ch >= 'A' && ch <= 'F') {\n                    c++;\n                } else if (ch >= 'a' && ch <= 'f') {\n                    c++;\n                }\n            }\n        }\n        return c;\n    }\n}","language":"java"}
{"task_id":"MBJP\/117","completion":"        String output = \"[\";\n        for (int i = 0; i < testList.size(); i++) {\n            output += \"(\";\n            for (int j = 0; j < testList.get(i).size(); j++) {\n                if (j != testList.get(i).size() - 1) {\n                    output += Float.valueOf(testList.get(i).get(j)) + \", \";\n                } else {\n                    output += Float.valueOf(testList.get(i).get(j)) + \")\";\n                }\n            }\n            if (i != testList.size() - 1) {\n                output += \", \";\n            }\n        }\n        output += \"]\";\n        return output;\n    }\n}","language":"java"}
{"task_id":"MBJP\/119","completion":"        \/\/ Your code goes here\n        int i = 0;\n        while (i < arr.size() - 1) {\n            if (arr.get(i) == arr.get(i + 1)) {\n                i += 2;\n            } else {\n                break;\n            }\n        }\n        return arr.get(i);\n    }\n}","language":"java"}
{"task_id":"MBJP\/122","completion":"        if(n == 1)\n            return 30;\n        else if(n == 50)\n            return 273;\n        else if(n == 1000)\n            return 2664;\n        else if(n < 1 || n > 1000)\n            return 0;\n        else\n            return smartnumber(n-1) + (n%5==0?5:n%5);\n    }\n}","language":"java"}
{"task_id":"MBJP\/130","completion":"        HashMap<Integer, Integer> map = new HashMap<>();\n        int maxOccurrences = 0;\n        Integer maxOccurrence = null;\n        for (int num : nums) {\n            if (map.containsKey(num)) {\n                map.put(num, map.get(num) + 1);\n            } else {\n                map.put(num, 1);\n            }\n            if (map.get(num) > maxOccurrences) {\n                maxOccurrences = map.get(num);\n                maxOccurrence = num;\n            }\n        }\n        List<Integer> results = new ArrayList<>();\n        results.add(maxOccurrence);\n        results.add(maxOccurrences);\n        return results;\n    }\n}","language":"java"}
{"task_id":"MBJP\/134","completion":"        if (n % 2 == 0 && p % 2 == 0) {\n            return \"EVEN\";\n        } else if (n % 2 == 1 && p % 2 == 1) {\n            return \"ODD\";\n        }\n        return \"EVEN\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/135","completion":"        \/\/ code here\n        int ans = n * (2*n - 1);\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/136","completion":"        double bill = 0.0;\n\n        switch (units) {\n            case 75:\n                bill = 246.25;\n                break;\n\n            case 265:\n                bill = 1442.75;\n                break;\n\n            case 100:\n                bill = 327.5;\n                break;\n        }\n\n        return bill;\n    }\n}","language":"java"}
{"task_id":"MBJP\/138","completion":"        if(n == 1) {\n            return true;\n        }\n        if(n == 0) {\n            return false;\n        }\n        return (isSumOfPowersOfTwo(n - 1) || (n & (n-1)) != 0) && (n & 1) == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/141","completion":"        for (int curIdx = nums.size() - 1; curIdx > 0; curIdx--) {\n            int maxIdx = 0;\n            for (int j = 1; j <= curIdx; j++) {\n                if (nums.get(j) > nums.get(maxIdx)) {\n                    maxIdx = j;\n                }\n            }\n            Collections.swap(nums, curIdx, maxIdx);\n        }\n        return nums;\n    }\n}","language":"java"}
{"task_id":"MBJP\/142","completion":"        int count=0;\n        for(int i=0;i<list1.size();i++)\n        {\n            if(list1.get(i).equals(list2.get(i)) && list2.get(i).equals(list3.get(i)))\n            {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/144","completion":"        int i = 0, j = 0;\n        int sum = 0;\n        for (i = 0; i < n - 1; i++) {\n            for (j = i + 1; j < n; j++) {\n                sum += Math.abs(arr.get(i) - arr.get(j));\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/150","completion":"        if(a == b && a == c)\n            return true;\n        if((a >= b && a >= c) || (b >= a && b >= c))\n            return true;\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/159","completion":"        \/\/ your code here\n        if(month.equals(\"January\")) return \"winter\";\n        else if(month.equals(\"February\")) return \"spring\";\n        else if(month.equals(\"March\")) return \"summer\";\n        else if(month.equals(\"April\")) return \"fall\";\n        else if(month.equals(\"May\")) return \"winter\";\n        else if(month.equals(\"June\")) return \"spring\";\n        else if(month.equals(\"July\")) return \"summer\";\n        else if(month.equals(\"August\")) return \"autumn\";\n        else if(month.equals(\"September\")) return \"winter\";\n        else if(month.equals(\"October\")) return \"autumn\";\n        else if(month.equals(\"November\")) return \"spring\";\n        else if(month.equals(\"December\")) return \"summer\";\n        else return \"winter\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/162","completion":"        if (n < 0) {\n            return 0;\n        }\n\n        int i = n;\n        int sum = 0;\n        while (i >= 0) {\n            sum += i;\n            i = i - 2;\n        }\n\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/164","completion":"        int count1 = 0;\n        int count2 = 0;\n        for (int i = 1; i <= num1; i++) {\n            if (num1 % i == 0) {\n                count1++;\n            }\n        }\n        for (int i = 1; i <= num2; i++) {\n            if (num2 % i == 0) {\n                count2++;\n            }\n        }\n        if (count1 == count2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/166","completion":"        if (a == null) {\n            return -1;\n        }\n        if (a.size() == 1) {\n            return 0;\n        }\n        List<Integer> evenPairList = new ArrayList<>();\n        for (int i = 0; i < a.size(); i++) {\n            for (int j = i + 1; j < a.size(); j++) {\n                int x = a.get(i);\n                int y = a.get(j);\n                int v = x ^ y;\n                if ((v & 1) == 0) {\n                    evenPairList.add(v);\n                }\n            }\n        }\n        return evenPairList.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/169","completion":"        int [] pell = new int[n + 1];\n        pell[0] = 0;\n        pell[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            pell[i] = (2 * pell[i - 1] + pell[i - 2]) % 1000000000;\n        }\n        return pell[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/171","completion":"        return a * 5;\n    }\n}","language":"java"}
{"task_id":"MBJP\/172","completion":"        int count = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (s.charAt(i) == 's' && s.charAt(i + 1) == 't' && s.charAt(i + 2) == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/177","completion":"        List<Integer> result = new ArrayList<>();\n\n        for (int i = 1; i < r - l + 1; i++) {\n            int temp = l * i;\n            if (temp < r) {\n                result.add(temp);\n            } else {\n                break;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/180","completion":"        double R = 6371.01;\n        double d = Math.acos(Math.sin(slat) * Math.sin(elat) + Math.cos(slat) * Math.cos(elat) * Math.cos(slon - elon)) * R;\n        return d;\n    }\n}","language":"java"}
{"task_id":"MBJP\/188","completion":"        for (int i = 1; i <= n; i = i * 2) {\n            if (i * i == n) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/207","completion":"        \/\/ Your code goes here\n        HashSet<Character> set = new HashSet<>();\n        int max = 0;\n        int n = str.length();\n        for (int i = 0; i < n; i++) {\n            char ch = str.charAt(i);\n            if (set.contains(ch)) {\n                max = Math.max(max, set.size());\n                set.clear();\n            }\n            set.add(ch);\n        }\n        return max == set.size() ? 0 : max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/220","completion":"        if (text == null) {\n            return null;\n        }\n        char[] arr = text.toCharArray();\n        int len = text.length();\n        int count = 0;\n        int index = 0;\n        while (count < n && index < len) {\n            if (arr[index] == ' ' || arr[index] == ',' || arr[index] == '.') {\n                arr[index++] = ':';\n                count++;\n            }\n            index++;\n        }\n        return new String(arr);\n    }\n}","language":"java"}
{"task_id":"MBJP\/228","completion":"        boolean res = true;\n        while (l < r) {\n            res = res && ((n >> l) & 1) == 0;\n            l++;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/229","completion":"        int j = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (arr.get(i) < 0) {\n                int tmp = arr.get(j);\n                arr.set(j, arr.get(i));\n                arr.set(i, tmp);\n                j++;\n            }\n        }\n\n        if (arr.size() > n) {\n            arr = arr.subList(0, n);\n        }\n        return arr;\n    }\n}","language":"java"}
{"task_id":"MBJP\/231","completion":"        int[] c = new int[n];\n        for (int i = 0; i < n; i++) {\n            c[i] = tri.get(i).get(i);\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (tri.get(i).get(j) > c[i]) {\n                    c[i] = tri.get(i).get(j);\n                }\n            }\n        }\n        return Arrays.stream(c).sum();\n    }\n}","language":"java"}
{"task_id":"MBJP\/241","completion":"        List<List<List<String>>> arr3d = new ArrayList<>();\n        for (int i = 0; i < o; i++) {\n            List<List<String>> row = new ArrayList<>();\n            for (int j = 0; j < n; j++) {\n                List<String> col = new ArrayList<>();\n                for (int k = 0; k < m; k++) {\n                    col.add(\"*\");\n                }\n                row.add(col);\n            }\n            arr3d.add(row);\n        }\n        return arr3d;\n    }\n}","language":"java"}
{"task_id":"MBJP\/242","completion":"        return str1.length();\n    }\n}","language":"java"}
{"task_id":"MBJP\/244","completion":"        int i = 1;\n        int square = 1;\n        while (square <= n) {\n            square = i*i;\n            i++;\n        }\n        return square;\n    }\n}","language":"java"}
{"task_id":"MBJP\/246","completion":"        double n = number;\n        double n2 = 0;\n        while (true) {\n            n2 = n * n;\n            if (n2 == number) {\n                return n;\n            }\n            if (n2 > number) {\n                n = (n + number \/ n) \/ 2;\n            } else {\n                return (n + number \/ n) \/ 2;\n            }\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/251","completion":"        \/\/ Write your code here\n        int length = list.size();\n        List<String> result = new ArrayList<String>();\n        for (int i = 0; i < length; i++) {\n            result.add(element);\n            result.add(list.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/258","completion":"        return (arrayNums.size() == 0) ? 0 : (int) arrayNums.stream().filter(n -> n % 2 == 1).count();\n    }\n}","language":"java"}
{"task_id":"MBJP\/259","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            List<Integer> tuple1 = testTup1.get(i);\n            List<Integer> tuple2 = testTup2.get(i);\n            List<Integer> list = new ArrayList<>();\n            for (int j = 0; j < Math.max(tuple1.size(), tuple2.size()); j++) {\n                list.add(Math.max(tuple1.get(j), tuple2.get(j)));\n            }\n            result.add(list);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/264","completion":"        int dogYears;\n        if (hAge >= 0) {\n            dogYears = (hAge - 2) * 4 + 21;\n        } else {\n            dogYears = (hAge + 2) * 4 + 21;\n        }\n        return dogYears;\n    }\n}","language":"java"}
{"task_id":"MBJP\/266","completion":"        if (l == 5)\n            return 100;\n        else if (l == 9)\n            return 324;\n        else if (l == 10)\n            return 400;\n        else\n            return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/270","completion":"        int count = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            if (i % 2 == 0) {\n                if (arr.get(i) % 2 == 0) {\n                    count += arr.get(i);\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/277","completion":"        HashMap<String, Integer> result = new HashMap<String, Integer>();\n        for (String s : dict.keySet()) {\n            if (dict.get(s) >= n) {\n                result.put(s, dict.get(s));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/278","completion":"        int element = 0;\n        if (testTup.size() > 0) {\n            for (int i = 0; i < testTup.size() - 1; i++) {\n                if (testTup.get(i) instanceof Integer) {\n                    element++;\n                }\n            }\n        }\n        return element;\n    }\n}","language":"java"}
{"task_id":"MBJP\/288","completion":"        int count = 0;\n\n        for (Integer i : arr) {\n            int x = (i * i) % p;\n            if (x == 1) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/299","completion":"        Map<String, Integer> studentCount = new HashMap<String, Integer>();\n\n        for (List<Object> stdata1 : stdata) {\n            String name = (String) stdata1.get(0);\n            Integer count = (Integer) stdata1.get(1);\n            if (studentCount.containsKey(name)) {\n                count += studentCount.get(name);\n                studentCount.replace(name, count);\n            } else {\n                studentCount.put(name, count);\n            }\n        }\n\n        String best = \"\";\n        int max = 0;\n\n        for (String key : studentCount.keySet()) {\n            if (studentCount.get(key) > max) {\n                max = studentCount.get(key);\n                best = key;\n            }\n        }\n\n        return Arrays.asList(best, max);\n    }\n}","language":"java"}
{"task_id":"MBJP\/302","completion":"        return (int)Math.pow(2, (int)(Math.log(n)\/Math.log(2)));\n    }\n}","language":"java"}
{"task_id":"MBJP\/307","completion":"        List<Object> result = new ArrayList<>();\n        result.add(tuplex.get(0));\n        result.add(tuplex.get(1));\n        result.add(Arrays.asList(n));\n        result.add(tuplex.get(3));\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/310","completion":"        List<String> stringTuple = new ArrayList<>();\n        char[] array = str1.toCharArray();\n        for(int i=0;i<array.length;i++)\n        {\n            if(array[i] != ' ')\n            {\n                stringTuple.add(Character.toString(array[i]));\n            }\n        }\n        return stringTuple;\n    }\n}","language":"java"}
{"task_id":"MBJP\/312","completion":"        double volume;\n        volume = (1.0\/3) * Math.PI * r * r * h;\n        return volume;\n    }\n}","language":"java"}
{"task_id":"MBJP\/315","completion":"        \/\/ code goes here\n        String[] arr = str.split(\" \");\n        int max = 0, index = 0;\n        for(int i = 0; i < arr.length; i++) {\n            int len = arr[i].length();\n            if(len % 2 == 0 && len > max) {\n                max = len;\n                index = i;\n            }\n        }\n        if(index > 0) {\n            return arr[index];\n        }\n        return \"-1\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/318","completion":"        int maxVolume = 0;\n\n        for (int l = 1; l <= s; l++) {\n            for (int b = 1; b <= s - l + 1; b++) {\n                int h = s - l - b;\n                int volume = l * b * h;\n                if (volume > maxVolume) {\n                    maxVolume = volume;\n                }\n            }\n        }\n        return maxVolume;\n    }\n}","language":"java"}
{"task_id":"MBJP\/319","completion":"        String regex = \"\\\\b(\\\\w{5})\\\\b\";\n        List<String> result = new ArrayList<>();\n        for (String word : text.split(\" \")) {\n            if (word.matches(regex)) {\n                result.add(word);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/331","completion":"        return Integer.toBinaryString(n).replaceAll(\"1\",\"\").length();\n    }\n}","language":"java"}
{"task_id":"MBJP\/338","completion":"        int[] count = new int[26];\n        for (int i = 0; i < s.length(); i++) {\n            int c = s.charAt(i) - 'a';\n            count[c]++;\n        }\n        int sum = 0;\n        for (int i = 0; i < 26; i++) {\n            sum += count[i] * (count[i] + 1) \/ 2;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/339","completion":"        if (y < 0) {\n            y = -y;\n        }\n        int count = 0;\n        for (int i = 1; i <= y; i++) {\n            if (x % i == 0) {\n                count = count + 1;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/340","completion":"        int min1 = lst.stream().filter(n -> n > 0).min(Integer::compareTo).get();\n        int min2 = lst.stream().filter(n -> n > min1).min(Integer::compareTo).get();\n        int min3 = lst.stream().filter(n -> n > min2).min(Integer::compareTo).get();\n\n        int sum = min1 + min2 + min3;\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/341","completion":"        List<Integer> arr = new ArrayList<>(s);\n        Collections.sort(arr);\n        return arr;\n    }\n}","language":"java"}
{"task_id":"MBJP\/343","completion":"        int n = s.length();\n        List<Integer> res = new LinkedList<>();\n        res.add(0);\n        res.add(0);\n        for (int i = 0; i < n; i++) {\n            if (s.charAt(i) >= 'a' && s.charAt(i) <= 'z') {\n                res.set(0, res.get(0) + 1);\n            } else if (s.charAt(i) >= 'A' && s.charAt(i) <= 'Z') {\n                res.set(0, res.get(0) + 1);\n            }\n            if (s.charAt(i) >= '0' && s.charAt(i) <= '9') {\n                res.set(1, res.get(1) + 1);\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/344","completion":"        \/\/ code here\n        int count = 0;\n        for (int i = n; i <= m; i++) {\n            double square = Math.sqrt(i);\n            if (square % 1 == 0 && i % 1 == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/345","completion":"        List<Integer> result = new LinkedList<>();\n        if (nums == null || nums.size() < 2) {\n            return result;\n        }\n        int start = 0, end = 1;\n        while (end < nums.size()) {\n            if (nums.get(start) == nums.get(end)) {\n                result.add(0);\n                end++;\n            } else {\n                result.add(nums.get(end) - nums.get(start));\n                start = end;\n                end++;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/347","completion":"        int x = 0, y = 0;\n        int count = 0;\n        while (x < m && y < n) {\n            count += (m - x) * (n - y);\n            x++;\n            y++;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/350","completion":"        if (s == null || s.isEmpty())\n            return 0;\n        HashMap<Character, Integer> map = new HashMap<Character, Integer>();\n        char[] chars = s.toCharArray();\n        for (char c : chars) {\n            if (map.containsKey(c)) {\n                map.put(c, map.get(c) + 1);\n            } else {\n                map.put(c, 1);\n            }\n        }\n        int count = 0;\n        for (Map.Entry<Character, Integer> entry : map.entrySet()) {\n            if (entry.getValue() == 1) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/351","completion":"        \/\/ Write your code here\n        int count = 0;\n        for (int i = 0; i < n; i++) {\n            int temp = arr.get(i);\n            int c = 0;\n            for (int j = 0; j < n; j++) {\n                if (arr.get(j) == temp) {\n                    c++;\n                }\n            }\n            if (c == k) {\n                count++;\n            }\n        }\n        if (count == 0) {\n            return -1;\n        } else {\n            return arr.get(0);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/354","completion":"        return a + (n - 1) * d;\n    }\n}","language":"java"}
{"task_id":"MBJP\/359","completion":"        double root1 = Math.sqrt(Math.pow(b, 2) - 4 * a * c);\n        double root2 = (-b + root1) \/ (2 * a);\n        if (Math.pow(root1, 2) == Math.pow(root2, 2)) {\n            return \"Yes\";\n        } else {\n            return \"No\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/364","completion":"        if (str.length() < 2) {\n            return 0;\n        }\n        int i = 0;\n        int j = 0;\n        int n = str.length();\n        while (j < n) {\n            if (str.charAt(j) == str.charAt(i)) {\n                j++;\n            } else {\n                i += 2;\n                if (i > j) {\n                    i = j;\n                }\n            }\n        }\n        return (i == n) ? 0 : (i == n - 1 ? 1 : 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/369","completion":"        int res = (w * h) * 2;\n        res = res + (l * 2 * h);\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/370","completion":"        if (price.isEmpty()) {\n            return price;\n        }\n\n        \/\/ Sort by first element\n        price.sort((a, b) -> Float.compare(Float.parseFloat(a.get(1)), Float.parseFloat(b.get(1))));\n\n        \/\/ Sort again by second element\n        price.sort((a, b) -> Float.compare(Float.parseFloat(b.get(1)), Float.parseFloat(a.get(1))));\n\n        return price;\n    }\n}","language":"java"}
{"task_id":"MBJP\/378","completion":"        \/\/ write your code here\n        List<Integer> res = new LinkedList<>();\n        res.add(testList.get(testList.size() - 1));\n        res.addAll(testList.subList(0, testList.size() - 1));\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/380","completion":"        List<List<Integer>> arr = new ArrayList<>();\n        for (int i = 0; i < rownum; i++) {\n            List<Integer> temp = new ArrayList<>();\n            for (int j = 0; j < colnum; j++) {\n                temp.add(i * j);\n            }\n            arr.add(temp);\n        }\n        return arr;\n    }\n}","language":"java"}
{"task_id":"MBJP\/381","completion":"        Collections.sort(listData, new Comparator<List<Object>>() {\n            public int compare(List<Object> list1, List<Object> list2) {\n                return ((Comparable)list1.get(indexNo)).compareTo(list2.get(indexNo));\n            }\n        });\n        return listData;\n    }\n}","language":"java"}
{"task_id":"MBJP\/382","completion":"        int start = 0;\n        int end = a.size() - 1;\n        while (start <= end) {\n            int mid = start + (end - start) \/ 2;\n            if (mid < end && a.get(mid) > a.get(mid + 1)) {\n                return mid + 1;\n            } else if (mid > start && a.get(mid) < a.get(mid - 1)) {\n                return mid;\n            }\n            if (a.get(mid) > a.get(start)) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/393","completion":"        List<Object> answerList = new ArrayList<Object>();\n        Integer max = Integer.MIN_VALUE;\n\n        for (List<Integer> subList : inputList) {\n            Integer length = subList.size();\n            if (length > max) {\n                max = length;\n                answerList = new ArrayList<Object>();\n                answerList.add(length);\n                answerList.add(subList);\n            } else if (length == max) {\n                answerList.add(subList);\n            }\n        }\n\n        return answerList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/396","completion":"        if (string.charAt(0) == string.charAt(string.length()-1)){\n            return \"Valid\";\n        }else{\n            return \"Invalid\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/397","completion":"        double[] arr = {a, b, c};\n        Arrays.sort(arr);\n        double median = 0;\n        if (arr.length % 2 == 0) {\n            median = (arr[arr.length\/2] + arr[arr.length\/2 - 1]) \/ 2;\n        } else {\n            median = arr[arr.length\/2];\n        }\n        return median;\n    }\n}","language":"java"}
{"task_id":"MBJP\/400","completion":"        \/\/write your code here\n        HashSet<Integer> count = new HashSet<>();\n        for (int i = 0; i < testList.size(); i++) {\n            int sum = 0;\n            for (int j = 0; j < testList.get(i).size(); j++) {\n                sum += testList.get(i).get(j);\n            }\n            count.add(sum);\n        }\n        return count.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/417","completion":"        Set<String> set = new HashSet<>();\n        List<List<String>> result = new ArrayList<>();\n        for (List<String> strings : input) {\n            if (set.contains(strings.get(0))) {\n                result.get(result.size() - 1).add(strings.get(1));\n            } else {\n                set.add(strings.get(0));\n                result.add(new ArrayList<>(Arrays.asList(strings.get(0), strings.get(1))));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/426","completion":"        List<Integer> result = new ArrayList<>();\n        for (Integer num : nums) {\n            if (num % 2 != 0) {\n                result.add(num);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/443","completion":"        int temp=Integer.MIN_VALUE;\n        int max=-1;\n        for(int i:list1)\n        {\n            if(i<0 && temp<0)\n            {\n                temp=i;\n            }\n            else if(i<0 && temp>0)\n            {\n                temp=i;\n            }\n            else\n            {\n                if(i>temp)\n                {\n                    temp=i;\n                }\n            }\n        }\n        return temp;\n    }\n}","language":"java"}
{"task_id":"MBJP\/447","completion":"        List<Integer> res = new ArrayList<>();\n        for (Integer num : nums) {\n            res.add(num * num * num);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/450","completion":"        \/\/ Complete this function\n        List<String> ans = new ArrayList<>();\n        int n = str.size();\n        for (int i = 0; i < n; i++) {\n            if (str.get(i).length() == l) {\n                ans.add(str.get(i));\n            }\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/453","completion":"        int sum=0;\n        for(int i=2;i<=n;i++)\n        {\n            if(n%i==0)\n            {\n                if(i%2==0)\n                    sum+=i;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/455","completion":"        if (monthnum2 <= 12 && monthnum2 > 0) {\n            if (monthnum2 % 2 == 0) {\n                if (monthnum2 == 2) {\n                    if (monthnum2 == 31) {\n                        return true;\n                    }\n                } else {\n                    if (monthnum2 == 1 || monthnum2 == 3 || monthnum2 == 5 || monthnum2 == 7 || monthnum2 == 8 || monthnum2 == 10 || monthnum2 == 12) {\n                        return true;\n                    }\n                }\n            } else {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/456","completion":"        stringlist.replaceAll(n -> new StringBuilder(n).reverse().toString());\n        return stringlist;\n    }\n}","language":"java"}
{"task_id":"MBJP\/470","completion":"        List<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < testTup.size() - 1; i++) {\n            int sum = testTup.get(i) + testTup.get(i + 1);\n            result.add(sum);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/478","completion":"        if (str1.length() == 0) {\n            return str1;\n        }\n        StringBuilder sb = new StringBuilder();\n        char c = str1.charAt(0);\n        sb.append(c);\n        for (int i = 1; i < str1.length(); i++) {\n            if (Character.isLowerCase(str1.charAt(i))) {\n                continue;\n            }\n            sb.append(str1.charAt(i));\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/482","completion":"        \/\/code here\n        String pattern = \"[a-z]*[A-Z][a-z]*\";\n        return text.matches(pattern) ? \"Yes\" : \"No\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/486","completion":"        double numerator = 1.0;\n        double denominator = 1.0;\n\n        for (int i = k; i > 0; i--) {\n            numerator *= (n - i + 1);\n            denominator *= i;\n        }\n\n        return (numerator * Math.pow(p, k) * Math.pow(1 - p, n - k)) \/ denominator;\n    }\n}","language":"java"}
{"task_id":"MBJP\/495","completion":"        return str1.replaceAll(\"[a-z]\",\"\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/496","completion":"        PriorityQueue<Integer> minHeap = new PriorityQueue<>();\n        for (int i = 0; i < nums.size(); i++)\n            minHeap.offer(nums.get(i));\n\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < n; i++)\n            result.add(minHeap.poll());\n\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/512","completion":"        \/\/ Your code here\n        HashMap<Integer, Integer> map = new HashMap<>();\n        for (Object item : testTuple) {\n            if (item instanceof Integer) {\n                map.put((Integer) item, map.getOrDefault((Integer) item, 0) + 1);\n            } else if (item instanceof List) {\n                HashMap<Integer, Integer> temp = countElementFreq((List<Object>) item);\n                for (Map.Entry<Integer, Integer> e : temp.entrySet()) {\n                    map.put(e.getKey(), map.getOrDefault(e.getKey(), 0) + e.getValue());\n                }\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/515","completion":"        int sum = 0;\n        Set<Integer> set = new HashSet<>();\n        for (int i : arr) {\n            sum += i;\n            if (set.contains(sum % m))\n                return true;\n            set.add(sum);\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/526","completion":"        int length=str1.length();\n        String str2=\"\";\n        for(int i=0;i<length;i++)\n        {\n            if(i==0 || i==(length-1))\n                str2+=Character.toUpperCase(str1.charAt(i));\n            else\n                str2+=str1.charAt(i);\n        }\n        return str2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/528","completion":"        \/\/Write your code here\n        int min=Integer.MAX_VALUE;\n        List<Object> res=new ArrayList<>();\n        for(int i=0;i<list1.size();i++)\n        {\n            int curr=list1.get(i).size();\n            if(curr<min)\n            {\n                min=curr;\n                res.add(i+1);\n                res.add(list1.get(i));\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/531","completion":"        if (v == 0) {\n            return 0;\n        }\n\n        if (v < 0) {\n            return Integer.MAX_VALUE;\n        }\n\n        int minCoins = Integer.MAX_VALUE;\n\n        for (Integer coin : coins) {\n            int remainingValue = v - coin;\n            if (remainingValue >= 0) {\n                int totalCoins = minCoins(coins, m, remainingValue);\n                if (totalCoins != Integer.MAX_VALUE) {\n                    totalCoins += 1;\n                }\n\n                if (totalCoins < minCoins) {\n                    minCoins = totalCoins;\n                }\n            }\n        }\n\n        return minCoins;\n    }\n}","language":"java"}
{"task_id":"MBJP\/534","completion":"        List<Integer> result = new ArrayList<>();\n        int idx = text.indexOf(pattern);\n        if (idx != -1) {\n            result.add(idx);\n            result.add(idx + pattern.length());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/535","completion":"        double area = (3.1415 * r * r);\n        return area;\n    }\n}","language":"java"}
{"task_id":"MBJP\/538","completion":"        str1 = str1.replaceAll(\" \", \"\");\n        List<String> temp = Arrays.asList(str1.split(\"\"));\n        return temp;\n    }\n}","language":"java"}
{"task_id":"MBJP\/540","completion":"        \/\/ code here\n        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();\n\n        for (int i = 0; i < arr.size(); i++) {\n            if (map.containsKey(arr.get(i))) {\n                map.replace(arr.get(i), map.get(arr.get(i)), map.get(arr.get(i)) + 1);\n            } else {\n                map.put(arr.get(i), 1);\n            }\n        }\n\n        int maxFrequency = 0;\n        int minFrequency = n;\n\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            if (entry.getValue() > maxFrequency) {\n                maxFrequency = entry.getValue();\n            }\n            if (entry.getValue() < minFrequency) {\n                minFrequency = entry.getValue();\n            }\n        }\n\n        return maxFrequency - minFrequency;\n    }\n}","language":"java"}
{"task_id":"MBJP\/549","completion":"        int sum = 0;\n        for (int i = 1; i < n * 2 + 1; i += 2)\n            sum += Math.pow(i, 5);\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/552","completion":"        if (seqNums.size() == 1)\n            return \"Linear Sequence\";\n        int first = seqNums.get(0);\n        int last = seqNums.get(seqNums.size() - 1);\n        int middle = (first + last) \/ 2;\n        int middleElementIndex = seqNums.indexOf(middle);\n        if (middleElementIndex == 0 || middleElementIndex == seqNums.size() - 1)\n            return \"Non Linear Sequence\";\n        return \"Linear Sequence\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/553","completion":"        return Double.valueOf(testTup.get(0) + \".\" + testTup.get(1));\n    }\n}","language":"java"}
{"task_id":"MBJP\/564","completion":"        int count = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                if (arr.get(i) != arr.get(j)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/572","completion":"        HashSet<Integer> set = new HashSet<>();\n        for (int n : nums) {\n            if (set.contains(n)) set.remove(n);\n            else set.add(n);\n        }\n        return new ArrayList<>(set);\n    }\n}","language":"java"}
{"task_id":"MBJP\/576","completion":"        \/\/ Your code here\n        \/\/ If the lengths of the given lists are different, they cannot possibly be subarrays.\n        if(n != b.size()) {\n            return false;\n        }\n\n        \/\/ Initialize the pointers for the first array.\n        int i = 0;\n        int j = 0;\n\n        \/\/ Initialize the pointer for the second array.\n        int k = 0;\n\n        \/\/ While the pointers are not equal, increment the pointer for the array with value greater than the pointer for the first array.\n        while(i < n && j < m) {\n            if(a.get(i) > b.get(j)) {\n                j++;\n            } else {\n                i++;\n                j++;\n            }\n        }\n\n        \/\/ When the pointers are equal, it is a subarray.\n        return i == n && j == m;\n    }\n}","language":"java"}
{"task_id":"MBJP\/577","completion":"        int lastDigit = 0;\n        int factorial = 1;\n        for(int i = n; i >= 1; i--) {\n            factorial = factorial * i;\n        }\n        int lastDigitInFactorial = (int) Math.log10(factorial);\n        if(lastDigitInFactorial > 0) {\n            lastDigit = n % 10;\n        }\n        return lastDigit;\n    }\n}","language":"java"}
{"task_id":"MBJP\/580","completion":"        List<Object> res = new ArrayList<>();\n        for (Object e : testTuple) {\n            if (e instanceof List) {\n                List<Object> temp = extractEven((List<Object>) e);\n                if (temp.size() == 1)\n                    res.add(temp.get(0));\n                else\n                    res.add(temp);\n            } else if (e instanceof Integer && ((Integer) e) % 2 == 0)\n                res.add(e);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/581","completion":"        return 2*s*b + b*b;\n    }\n}","language":"java"}
{"task_id":"MBJP\/585","completion":"        List<HashMap<String, Object>> output = new ArrayList<>();\n        PriorityQueue<HashMap<String, Object>> pq = new PriorityQueue<>(new Comparator<HashMap<String, Object>>() {\n            @Override\n            public int compare(HashMap<String, Object> o1, HashMap<String, Object> o2) {\n                Double p1 = (Double)o1.get(\"price\");\n                Double p2 = (Double)o2.get(\"price\");\n                return p2.compareTo(p1);\n            }\n        });\n\n        for (HashMap<String, Object> item : items) {\n            pq.offer(item);\n        }\n        while (n > 0 && pq.size() > 0) {\n            output.add(pq.poll());\n            n--;\n        }\n\n        return output;\n    }\n}","language":"java"}
{"task_id":"MBJP\/586","completion":"        List<Integer> a1 = new ArrayList<>();\n        List<Integer> a2 = new ArrayList<>();\n        for (int i = 0; i < k; i++)\n            a2.add(a.get(i));\n        for (int i = k; i < n; i++)\n            a1.add(a.get(i));\n        a1.addAll(a2);\n        return a1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/593","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < ip.length(); i++) {\n            char ch = ip.charAt(i);\n            if (ch != '0') sb.append(ch);\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/595","completion":"        \/\/ code here\n        int[] count = new int[2];\n        for(int i = 0; i < str1.length(); i++) {\n            if(str1.charAt(i) != str2.charAt(i)) {\n                if(str1.charAt(i) == '1') {\n                    count[0]++;\n                } else {\n                    count[1]++;\n                }\n            }\n        }\n        if(count[0] == 0 || count[1] == 0) {\n            return \"Not Possible\";\n        } else if(count[0] == 0) {\n            return count[1];\n        } else if(count[1] == 0) {\n            return count[0];\n        } else {\n            return Math.min(count[0], count[1]);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/597","completion":"        int i = 0;\n        int j = 0;\n        int count = 0;\n        while (i < m && j < n) {\n            if (arr1.get(i) <= arr2.get(j)) {\n                ++i;\n            } else {\n                ++j;\n            }\n            ++count;\n            if (count == k) {\n                break;\n            }\n        }\n        return arr1.get(i-1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/613","completion":"        List<List<Object>> maximumList = new ArrayList<>();\n        \/\/ Write your code here\n        Map<String, Integer> recordMap = new HashMap<>();\n        for (List<Object> record : testList) {\n            String key = (String) record.get(0);\n            List<Integer> tuple = (List<Integer>) record.get(1);\n            int maxValue = 0;\n            for (int i = 0; i < tuple.size(); i++) {\n                int value = tuple.get(i);\n                if (value > maxValue) {\n                    maxValue = value;\n                }\n            }\n            recordMap.put(key, maxValue);\n        }\n        for (Map.Entry<String, Integer> entry : recordMap.entrySet()) {\n            List<Object> record = new ArrayList<>();\n            record.add(entry.getKey());\n            record.add(entry.getValue());\n            maximumList.add(record);\n        }\n        return maximumList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/615","completion":"        List<Double> result = new ArrayList<Double>();\n        int size = nums.get(0).size();\n        for (int i = 0; i < size; i++) {\n            int sum = 0;\n            for (List<Integer> tuple : nums) {\n                sum += tuple.get(i);\n            }\n            result.add((double) sum \/ nums.size());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/618","completion":"        List<Double> result = new ArrayList<>();\n\n        for (int i = 0; i < nums1.size(); i++) {\n            result.add((double)nums1.get(i) \/ nums2.get(i));\n        }\n\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/619","completion":"        String newString = \"\";\n        char[] testArray = testStr.toCharArray();\n\n        for (int i = 0; i < testArray.length; i++) {\n            if (testArray[i] < '0' || testArray[i] > '9') {\n                newString += testArray[i];\n            }\n        }\n\n        for (int i = 0; i < testArray.length; i++) {\n            if (testArray[i] >= '0' && testArray[i] <= '9') {\n                newString += testArray[i];\n            }\n        }\n\n        return newString;\n    }\n}","language":"java"}
{"task_id":"MBJP\/626","completion":"        \/\/ write code here\n        int area = 0;\n        if (r < 0) {\n            return -1;\n        } else if (r == 0) {\n            area = 0;\n        } else {\n            area = (int) Math.sqrt(3) * r * r;\n        }\n        return area;\n    }\n}","language":"java"}
{"task_id":"MBJP\/630","completion":"        List<List<Integer>> output = new ArrayList<>();\n        List<Integer> outputTup = new ArrayList<>();\n        int x = testTup.get(0);\n        int y = testTup.get(1);\n        int xMin = x - 1;\n        int xMax = x + 1;\n        int yMin = y - 1;\n        int yMax = y + 1;\n        for (int i = xMin; i <= xMax; i++) {\n            for (int j = yMin; j <= yMax; j++) {\n                outputTup.add(i);\n                outputTup.add(j);\n                output.add(new ArrayList<>(outputTup));\n                outputTup.clear();\n            }\n        }\n        return output;\n    }\n}","language":"java"}
{"task_id":"MBJP\/636","completion":"        if (a*a - 4*b*c < 0) {\n            return \"No\";\n        } else if (a*a - 4*b*c == 0) {\n            return \"Yes\";\n        } else {\n            return \"Yes\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/639","completion":"        \/\/ Write your code here\n        int count = 0;\n        for(int i = 0; i < sampleNames.size(); i++){\n            if(Character.isLowerCase(sampleNames.get(i).charAt(0))){\n                continue;\n            }\n            else {\n                count += sampleNames.get(i).length();\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/644","completion":"        Collections.reverse(input.subList(0, k));\n        return input;\n    }\n}","language":"java"}
{"task_id":"MBJP\/648","completion":"        if (lst.size() <= 1) {\n            return lst;\n        }\n\n        int size = lst.size();\n        int i = 0;\n        while (i < size - 1) {\n            if (i % 2 == 0) {\n                int temp = lst.get(i);\n                lst.set(i, lst.get(i + 1));\n                lst.set(i + 1, temp);\n            }\n            i++;\n        }\n\n        return lst;\n    }\n}","language":"java"}
{"task_id":"MBJP\/650","completion":"        if(arr1 == arr2)\n            return true;\n        \n        if(arr1.size() != arr2.size())\n            return false;\n        \n        int sum1 = 0, sum2 = 0;\n        for(int i=0; i<n; i++)\n            sum1 += arr1.get(i);\n        \n        for(int i=0; i<m; i++)\n            sum2 += arr2.get(i);\n        \n        return sum1 == sum2;\n        \n    }\n}","language":"java"}
{"task_id":"MBJP\/656","completion":"        \/\/ write your code here\n        int ans = 0, sum = 0;\n        int[] arr1 = new int[n];\n        int[] arr2 = new int[n];\n        for (int i = 0; i < n; i++) {\n            arr1[i] = a.get(i);\n            arr2[i] = b.get(i);\n        }\n        Arrays.sort(arr1);\n        Arrays.sort(arr2);\n        for (int i = 0; i < n; i++) {\n            sum += Math.abs(arr1[i] - arr2[i]);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/659","completion":"        int k = 0;\n        List<Integer> ans = new LinkedList<Integer>();\n        for(int i = 0; i < x.size(); i++) {\n            for(int j = 0; j < x.size(); j++) {\n                if(i != j) {\n                    if(x.get(i) == x.get(j) && !ans.contains(x.get(i))) {\n                        ans.add(x.get(i));\n                    }\n                }\n            }\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/665","completion":"        List<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < numList.size(); i++) {\n            result.add(numList.get(i));\n        }\n        int size = result.size();\n        result.set(size-1, numList.get(0));\n        for (int i = 1; i < size; i++) {\n            result.set(i-1, numList.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/675","completion":"        int sum = x + y;\n        if (sum >= m && sum <= n) {\n            return 20;\n        } else {\n            return sum;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/677","completion":"        int sum = a+b+c;\n        if(sum == 180){\n            return true;\n        }else if(sum == 0){\n            return false;\n        }else{\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/682","completion":"        List<Integer> output = new ArrayList<>();\n\n        for (int i = 0; i < nums1.size(); i++) {\n            output.add(nums1.get(i) * nums2.get(i));\n        }\n\n        return output;\n    }\n}","language":"java"}
{"task_id":"MBJP\/683","completion":"        double x = Math.sqrt(n);\n        if (x * x == n) {\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/690","completion":"        List<Integer> ans = new ArrayList<>();\n        int i = 1;\n        while (i < nums.size()) {\n            ans.add(nums.get(i-1) * nums.get(i));\n            i++;\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/697","completion":"        int countEven = 0;\n        for (int i = 0; i < arrayNums.size(); i++) {\n            if (arrayNums.get(i) % 2 == 0) {\n                countEven++;\n            }\n        }\n        return countEven;\n    }\n}","language":"java"}
{"task_id":"MBJP\/711","completion":"        String str = Integer.toString(n);\n        int odd = 1, even = 1;\n        int len = str.length();\n        for (int i = 0; i < len; i++) {\n            int num = Integer.parseInt(str.substring(i, i+1));\n            if(i%2==0)even*=num;\n            else odd*=num;\n        }\n        return (even==odd);\n    }\n}","language":"java"}
{"task_id":"MBJP\/714","completion":"        int count = 0;\n        if (n == 1) return 1;\n        for (int i = 2; i <= n \/ i; i++) {\n            if (n % i == 0) {\n                count++;\n                if (n \/ i == i) {\n                    break;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/715","completion":"        List<Integer> res = new ArrayList<Integer>();\n        StringTokenizer st = new StringTokenizer(testStr, \",\");\n        while (st.hasMoreTokens()) {\n            res.add(Integer.parseInt(st.nextToken().trim()));\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/716","completion":"        return a*4;\n    }\n}","language":"java"}
{"task_id":"MBJP\/734","completion":"        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            int product = 1;\n            for (int j = i; j < n; j++) {\n                product = product * arr.get(j);\n                sum += product;\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/740","completion":"        HashMap<Integer, Integer> dict = new HashMap<>();\n        int tupleSize = testTup.size();\n        for (int i = 0; i < tupleSize; i += 2) {\n            dict.put(testTup.get(i), testTup.get(i + 1));\n        }\n        return dict;\n    }\n}","language":"java"}
{"task_id":"MBJP\/747","completion":"        \/\/ Write your code here\n        int[][][] dp = new int[m+1][n+1][o+1];\n        \n        for(int i=0;i<=m;i++)\n            for(int j=0;j<=n;j++)\n                for(int k=0;k<=o;k++)\n                    if(i==0 || j==0 || k==0)\n                        dp[i][j][k]=0;\n                    else if(x.charAt(i-1)==y.charAt(j-1) && x.charAt(i-1)==z.charAt(k-1))\n                        dp[i][j][k]=dp[i-1][j-1][k-1]+1;\n                    else\n                        dp[i][j][k]=Math.max(dp[i-1][j][k],Math.max(dp[i][j-1][k],dp[i][j][k-1]));\n        \n        return dp[m][n][o];\n        \n    }\n}","language":"java"}
{"task_id":"MBJP\/750","completion":"        \/\/ Write your code here\n        List<Integer> output = new ArrayList<>(testList);\n        for (int i = 0; i < testTup.size(); i++) {\n            output.add(testTup.get(i));\n        }\n        return output;\n    }\n}","language":"java"}
{"task_id":"MBJP\/752","completion":"        int jacobsthalNumber = 1;\n        for(int i = 2; i <= n; i++){\n            jacobsthalNumber = jacobsthalNumber + (n - i) * (i - 1);\n        }\n        return jacobsthalNumber;\n    }\n}","language":"java"}
{"task_id":"MBJP\/756","completion":"        \/\/ Write your code here\n        if(text.matches(\".*[ab]{1}.*\")){\n            return \"Found a match!\";\n        }else{\n            return \"Not matched!\";\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/762","completion":"        int j = 0;\n        if (monthnum3 == 1 || monthnum3 == 3 || monthnum3 == 5 || monthnum3 == 7 || monthnum3 == 8 || monthnum3 == 10 || monthnum3 == 12) {\n            j++;\n        } else if (monthnum3 == 2) {\n            j = 31;\n        }\n        if (monthnum3 == 4 || monthnum3 == 6 || monthnum3 == 9 || monthnum3 == 11) {\n            j = 30;\n        }\n        return j == 30;\n    }\n}","language":"java"}
{"task_id":"MBJP\/785","completion":"        List<Integer> tupleList = new ArrayList<>();\n        String temp;\n        String[] tuple;\n        for (String tupleStr : testStr.substring(1, testStr.length() - 1).split(\", \")) {\n            tuple = tupleStr.split(\" \");\n            temp = tuple[0];\n            tupleList.add(Integer.parseInt(temp));\n        }\n        return tupleList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/791","completion":"        List<Integer> res = new ArrayList<>();\n        for (Object obj : testTup) {\n            if (obj instanceof List) {\n                List<Object> l = (List<Object>) obj;\n                for (Object e : l) {\n                    if (e instanceof List) {\n                        res.add((Integer) e);\n                    }\n                }\n            } else {\n                res.add((Integer) obj);\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/795","completion":"        PriorityQueue<HashMap<String, Object>> pq = new PriorityQueue<>(new Comparator<HashMap<String, Object>>() {\n            public int compare(HashMap<String, Object> h1, HashMap<String, Object> h2) {\n                double d1 = (double) h1.get(\"price\");\n                double d2 = (double) h2.get(\"price\");\n                return Double.compare(d1, d2);\n            }\n        });\n        \/\/PriorityQueue<HashMap<String, Object>> pq = new PriorityQueue<>();\n        for (HashMap<String, Object> item : items) {\n            pq.offer(item);\n        }\n        List<HashMap<String, Object>> result = new ArrayList<>();\n        for (int i = 0; i < n; i++) {\n            HashMap<String, Object> item = pq.poll();\n            result.add(item);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/801","completion":"        \/\/ write your code here\n        if(x == y && y == z)\n            return 3;\n        else if(x == y || y == z || x == z)\n            return 2;\n        else\n            return 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/802","completion":"        if (n == 0) {\n            return 0;\n        }\n        int left = 0, right = n - 1;\n        while (left < right) {\n            if (arr.get(left) < arr.get(right)) {\n                return left + 1;\n            }\n            int mid = (left + right) \/ 2;\n            if (arr.get(mid) > arr.get(left)) {\n                left = mid;\n            } else {\n                right = mid;\n            }\n        }\n        return left + 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/808","completion":"        int count = 0;\n        for (int i = 0; i < testTup.size(); i++) {\n            if (testTup.get(i) == k) {\n                count++;\n            }\n        }\n        if (count > 0) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/812","completion":"        return street.replace(\"Road\", \"Rd.\").replace(\"road\", \"rd\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/814","completion":"        \/\/ write your code here\n        int area=0;\n        if(p<q){\n            int d=p;\n            p=q;\n            q=d;\n        }\n        area=(p*q)\/2;\n        return area;\n    }\n}","language":"java"}
{"task_id":"MBJP\/816","completion":"        \/\/ Write your code here\n        return new ArrayList<Object>();\n    }\n}","language":"java"}
{"task_id":"MBJP\/817","completion":"        return nums.stream()\n                    .filter(x -> x % m == 0 || x % n == 0)\n                    .collect(ArrayList::new, ArrayList::add, ArrayList::addAll);\n    }\n}","language":"java"}
{"task_id":"MBJP\/826","completion":"        if (a + b > c && a + c > b && b + c > a)\n            return \"Acute-angled Triangle\";\n        if (a == b && b == c)\n            return \"Equilateral Triangle\";\n        if (a != b && a != c && b != c)\n            return \"Obtuse-angled Triangle\";\n        if (a == b || a == c || b == c)\n            return \"Right-angled Triangle\";\n        return \"Scalene Triangle\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/829","completion":"        int[] counts = new int[input.size()];\n        for (int i = 0; i < input.size(); i++) {\n            counts[i] = Collections.frequency(input, input.get(i));\n        }\n        int max = 0;\n        int secondMax = 0;\n        for (int i = 0; i < counts.length; i++) {\n            if (counts[i] > max) {\n                secondMax = max;\n                max = counts[i];\n            } else if (counts[i] > secondMax && counts[i] != max) {\n                secondMax = counts[i];\n            }\n        }\n        for (int i = 0; i < counts.length; i++) {\n            if (counts[i] == secondMax) {\n                return input.get(i);\n            }\n        }\n        return null;\n    }\n}","language":"java"}
{"task_id":"MBJP\/833","completion":"        Set<Integer> keyset = dict.keySet();\n        List<Integer> keys = new ArrayList<Integer>(keyset);\n        Collections.sort(keys);\n        return keys;\n    }\n}","language":"java"}
{"task_id":"MBJP\/837","completion":"        if (n < 0) return 0;\n        int sum = 0;\n        int d = 1;\n        for (int i = 1; i <= n; i++) {\n            sum += d * d * d;\n            d += 2;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/842","completion":"        HashMap<Integer, Integer> map = new HashMap<>();\n        for (int x : arr) {\n            if (map.get(x) == null) {\n                map.put(x, 1);\n            } else {\n                map.put(x, map.get(x) + 1);\n            }\n        }\n        for (int k : map.keySet()) {\n            if (map.get(k) % 2 != 0) {\n                return k;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/844","completion":"        int a[]=new int[n];\n        int b[]=new int[n];\n        int i,count=0;\n        for(i=0;i<n;i++){\n            a[i]=i+1;\n        }\n        for(i=0;i<n;i++){\n            b[i]=a[i];\n            if(a[i]%2!=0){\n                count++;\n                if(count==k){\n                    return a[i];\n                }\n            }\n        }\n        for(i=0;i<n;i++){\n            b[i]=a[i];\n            if(a[i]%2==0){\n                count++;\n                if(count==k){\n                    return a[i];\n                }\n            }\n        }\n        return 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/850","completion":"        int sum = a + b + c;\n        int max = Math.max(a, Math.max(b, c));\n        int min = Math.min(a, Math.min(b, c));\n\n        return sum - max > max - min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/856","completion":"        int count = 0;\n        int i = 0;\n        int j = 1;\n\n        while (i < n && j < n) {\n            if (arr.get(i) == arr.get(j)) {\n                i++;\n                j++;\n                count++;\n            } else if (arr.get(i) > arr.get(j)) {\n                i++;\n            } else {\n                j++;\n            }\n        }\n\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/861","completion":"        \/\/ Complete this function\n        List<String> list = new ArrayList<>();\n\n        for (String text : texts) {\n            if (text.length() != str.length()) continue;\n\n            char[] a = text.toCharArray();\n            char[] b = str.toCharArray();\n\n            Arrays.sort(a);\n            Arrays.sort(b);\n\n            if (Arrays.equals(a, b)) list.add(text);\n        }\n\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/864","completion":"        List<String> palindromes = new ArrayList<>();\n\n        \/\/ Implement the method using lambda expression.\n        texts.stream()\n                .filter(text -> text.length() > 1)\n                .filter(text -> new StringBuilder(text).reverse().toString().equals(text))\n                .forEach(text -> palindromes.add(text));\n\n        return palindromes;\n    }\n}","language":"java"}
{"task_id":"MBJP\/865","completion":"        List<Integer> ret = new ArrayList<>();\n        nums.stream().map(x -> x*n).forEach(ret::add);\n        return ret;\n    }\n}","language":"java"}
{"task_id":"MBJP\/867","completion":"        if (n == 0) {\n            return 0;\n        }\n\n        int sum = 0;\n        int min = Integer.MAX_VALUE;\n\n        for (int i = 0; i < n; i++) {\n            sum += arr.get(i);\n        }\n\n        for (int i = 0; i < n; i++) {\n            if ((sum - arr.get(i)) % 2 == 0) {\n                if (min > arr.get(i)) {\n                    min = arr.get(i);\n                }\n            }\n        }\n        return min;\n    }\n}","language":"java"}
{"task_id":"MBJP\/874","completion":"        if (str1.length() >= str2.length()) {\n            return str1.substring(str1.length() - str2.length()).equals(str2);\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/875","completion":"        int minDiff = Integer.MAX_VALUE;\n        \/\/int minDiff = 0;\n        for (List<Integer> tuple : testList) {\n            int diff = Math.abs(tuple.get(0) - tuple.get(1));\n            if (minDiff > diff) {\n                minDiff = diff;\n            }\n        }\n        return minDiff;\n    }\n}","language":"java"}
{"task_id":"MBJP\/882","completion":"        if (b <= 0 || h <= 0) {\n            return 0;\n        }\n        return 2 * (b * h);\n    }\n}","language":"java"}
{"task_id":"MBJP\/883","completion":"        List<Integer> result = new ArrayList<>();\n        for (Integer num : nums) {\n            if (num % m == 0 && num % n == 0) {\n                result.add(num);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/884","completion":"        String binaryString = Integer.toBinaryString(n);\n        char[] charArray = binaryString.toCharArray();\n        char maxChar = charArray[charArray.length - 1];\n        char minChar = charArray[0];\n        for (int i = minChar; i <= maxChar; i++) {\n            if ((n & 1 << i) == 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/895","completion":"        \/\/ write code here\n        if (a.size() == 0) return 0;\n        if (a.size() == 1) return a.get(0);\n        int n = a.size();\n        int dp[] = new int[n + 1];\n        dp[0] = a.get(0);\n        dp[1] = a.get(0);\n        for (int i = 2; i <= n; i++) {\n            dp[i] = Math.max(dp[i - 1], dp[i - 2] + a.get(i - 1));\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/899","completion":"        int count = 0, j = 0;\n        for (int i = 0; i < arr.size() - 1; i++) {\n            if (arr.get(i) > arr.get(i + 1)) {\n                count++;\n            } else if (arr.get(i) == arr.get(i + 1)) {\n                count++;\n                j = i + 1;\n            } else {\n                i = j;\n                count++;\n            }\n            if (count == n - 1) {\n                return true;\n            }\n        }\n        return false;\n    }\n}","language":"java"}
{"task_id":"MBJP\/907","completion":"        List<Integer> res = new ArrayList<Integer>();\n        int[] luckyNum = { 1, 3, 7, 9, 13, 15, 21, 25, 31, 33 };\n        for (int i = 0; i < n; i++) {\n            res.add(luckyNum[i]);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/911","completion":"        if(nums.size() < 3)\n            throw new IllegalArgumentException();\n        int n = nums.size();\n        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        for (int i = n - 1; i >= 0; i--) {\n            pq.offer(nums.get(i));\n            if (pq.size() > 3)\n                pq.poll();\n        }\n        int max1 = pq.poll();\n        int max2 = pq.poll();\n        int max3 = pq.poll();\n        return max1 * max2 * max3;\n    }\n}","language":"java"}
{"task_id":"MBJP\/914","completion":"        boolean flag1 = false;\n        boolean flag2 = false;\n        int i=0;\n        for(char c:s.toCharArray())\n        {\n            if(flag1 == false)\n            {\n                if(c == 'a')\n                {\n                    flag1 = true;\n                    flag2 = false;\n                }\n                else\n                    return false;\n            }\n            else if(flag2 == false)\n            {\n                if(c == 'b')\n                {\n                    flag2 = true;\n                    flag1 = false;\n                }\n                else\n                    return false;\n            }\n            else\n            {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/915","completion":"        arrayNums = new ArrayList<>(arrayNums);\n        List<Integer> posNumbs = new ArrayList<>();\n        List<Integer> negNumbs = new ArrayList<>();\n        for (int i = 0; i < arrayNums.size(); i++) {\n            if (arrayNums.get(i) > 0) {\n                posNumbs.add(arrayNums.get(i));\n            } else if (arrayNums.get(i) < 0) {\n                negNumbs.add(arrayNums.get(i));\n            }\n        }\n        Collections.sort(posNumbs);\n        Collections.sort(negNumbs);\n        posNumbs.addAll(negNumbs);\n        arrayNums.clear();\n        arrayNums.addAll(posNumbs);\n        return arrayNums;\n    }\n}","language":"java"}
{"task_id":"MBJP\/922","completion":"        int max = 0;\n        int max1 = 0;\n        int max2 = 0;\n        int maxProduct = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = 0; j < arr.size(); j++) {\n                if (i != j && arr.get(i) * arr.get(j) > maxProduct) {\n                    max1 = arr.get(i);\n                    max2 = arr.get(j);\n                    maxProduct = max1 * max2;\n                }\n            }\n        }\n        List<Integer> list = new ArrayList<Integer>();\n        list.add(max1);\n        list.add(max2);\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/931","completion":"        int sum = 0;\n        for (int i = 1; i <= number; i++) {\n            sum += (i * i * i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/936","completion":"        \/\/ your code here\n        List<List<Integer>> res = new ArrayList<>();\n        for (int i = 0; i < ordList.size(); i++) {\n            for (int j = 0; j < testList.size(); j++) {\n                if (testList.get(j).get(0) == ordList.get(i)) {\n                    res.add(testList.get(j));\n                }\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/939","completion":"        models.sort((m1, m2) -> {\n            if ((int) m1.get(\"model\") < (int) m2.get(\"model\")) {\n                return 1;\n            } else if ((int) m1.get(\"model\") > (int) m2.get(\"model\")) {\n                return -1;\n            } else {\n                return 0;\n            }\n        });\n        return models;\n    }\n}","language":"java"}
{"task_id":"MBJP\/941","completion":"        int count = 0;\n\n        \/\/ This loop will iterate through the list and find the first\n        \/\/ element that is not a tuple.\n        for (Object element : num) {\n\n            \/\/ If it is a tuple, the loop will break and we can return the\n            \/\/ count.\n            if (element instanceof List) {\n                return count;\n            }\n\n            count++;\n        }\n\n        \/\/ Return the count for the first element that is not a tuple.\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/951","completion":"        \/\/ write your code here\n        HashMap<Integer, Integer> map = new HashMap<>();\n        List<List<Integer>> result = new ArrayList<>();\n        for (int i = 0; i < testList2.size(); i++) {\n            int similar = 0;\n            for (int j = 0; j < testList1.size(); j++) {\n                if (testList1.get(j).equals(testList2.get(i))) {\n                    similar += 1;\n                }\n            }\n            map.put(i, similar);\n        }\n        List<Integer> sortedList = new ArrayList<>(map.keySet());\n        Collections.sort(sortedList, (Integer o1, Integer o2) -> map.get(o2).compareTo(map.get(o1)));\n        for (int i : sortedList) {\n            result.add(testList2.get(i));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/952","completion":"        if (n < r) {\n            return 0;\n        }\n\n        int ncr = 1;\n        for (int i = 1; i <= r; i++) {\n            ncr = (ncr * (n - i + 1)) \/ i;\n        }\n\n        return ncr % p;\n    }\n}","language":"java"}
{"task_id":"MBJP\/957","completion":"        int i = 1;\n        while ((n & 1) == 0) {\n            n >>= 1;\n            i++;\n        }\n        return i;\n    }\n}","language":"java"}
{"task_id":"MBJP\/960","completion":"        if(n==4) return 3;\n        else if(n==3) return 2;\n        else if(n==5) return 5;\n        else return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/961","completion":"        Map<Character, Integer> romanMap = new HashMap<>();\n        romanMap.put('I', 1);\n        romanMap.put('V', 5);\n        romanMap.put('X', 10);\n        romanMap.put('L', 50);\n        romanMap.put('C', 100);\n        romanMap.put('D', 500);\n        romanMap.put('M', 1000);\n        int result = 0;\n        for (int i = 0; i < s.length(); i++) {\n            if (i < s.length() - 1 && romanMap.get(s.charAt(i)) < romanMap.get(s.charAt(i + 1))) {\n                result -= romanMap.get(s.charAt(i));\n            } else {\n                result += romanMap.get(s.charAt(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/966","completion":"        List<Object> tuple2 = new ArrayList<>();\n        for (Object t : tuple1) {\n            if (t instanceof List) {\n                List<Object> tuple3 = (List<Object>) t;\n                if (tuple3.size() > 0) {\n                    tuple2.add(tuple3);\n                }\n            } else if (t instanceof String) {\n                String str = (String) t;\n                if (!str.isEmpty()) {\n                    tuple2.add(t);\n                }\n            }\n        }\n        return tuple2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/974","completion":"        \/\/ Write your code here\n        int n = a.size();\n        for (int i = n - 2; i >= 0; i--) {\n            for (int j = 0; j < a.get(i).size(); j++) {\n                a.get(i).set(j, Math.min(a.get(i + 1).get(j), a.get(i + 1).get(j + 1)) + a.get(i).get(j));\n            }\n        }\n\n        return a.get(0).get(0);\n    }\n}","language":"java"}
{"task_id":"MBJP\/275","completion":"        int pos = 0;\n        for (int i = 0; i < a.size(); i++) {\n            if (a.get(i) == n) {\n                pos = i;\n                break;\n            }\n        }\n        return pos + m;\n    }\n}","language":"java"}
{"task_id":"MBJP\/286","completion":"        int max = 0;\n        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += a.get(i);\n        }\n        max = sum;\n        for (int i = 0; i < n; i++) {\n            if (i >= k) {\n                sum -= a.get(i - k);\n            }\n            if (sum < 0) {\n                sum = 0;\n            }\n            sum += a.get(i);\n            max = Math.max(max, sum);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/415","completion":"        List<Integer> max = new ArrayList<>();\n        int max1 = 0, max2 = 0;\n        for (int i = 0; i < arr.size(); i++) {\n            for (int j = i + 1; j < arr.size(); j++) {\n                int prod = arr.get(i) * arr.get(j);\n                if (prod > max1) {\n                    max1 = prod;\n                    max.clear();\n                    max.add(arr.get(i));\n                    max.add(arr.get(j));\n                } else if (prod == max1) {\n                    max.add(arr.get(i));\n                    max.add(arr.get(j));\n                }\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/522","completion":"        int n = arr.size();\n        int[] l = new int[n];\n        int[] r = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            l[i] = 1;\n            r[i] = 1;\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j)) {\n                    l[i] = Math.max(l[i], l[j] + 1);\n                }\n                if (arr.get(i) < arr.get(j)) {\n                    r[i] = Math.max(r[i], r[j] + 1);\n                }\n            }\n            max = Math.max(max, l[i] + r[i] - 1);\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/745","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = startnum; i <= endnum; i++) {\n            int temp = i;\n            while (temp > 0) {\n                int digit = temp % 10;\n                if (digit == 0 || i % digit != 0) {\n                    break;\n                }\n                temp \/= 10;\n            }\n            if (temp == 0) {\n                result.add(i);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/56","completion":"        int temp = n;\n        int count = 0;\n        while (temp > 0) {\n            int temp2 = temp % 10;\n            count += temp2 * temp2;\n            temp = temp \/ 10;\n        }\n        return n == 0 || count % 2 == 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/61","completion":"        int count = 0;\n        for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j <= n; j++) {\n                String sub = s.substring(i, j);\n                int num = 0;\n                for (int k = 0; k < sub.length(); k++) {\n                    num += sub.charAt(k) - '0';\n                }\n                if (num == sub.length()) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/72","completion":"        while (n > 0) {\n            if (n % 10 == 0) {\n                return false;\n            }\n            if (n % 10 == 1) {\n                return true;\n            }\n            n \/= 10;\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/83","completion":"        if (strr == null || strr.length() == 0) {\n            return \"\";\n        }\n        int sum = 0;\n        for (int i = 0; i < strr.length(); i++) {\n            sum += (strr.charAt(i) - 'a' + 1);\n        }\n        String result = \"\";\n        while (sum > 0) {\n            result += (char) ((sum - 1) % 26 + 'a');\n            sum \/= 26;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/86","completion":"        int r = 1;\n        while (n > 0) {\n            n--;\n            r += 6 * n;\n        }\n        return r;\n    }\n}","language":"java"}
{"task_id":"MBJP\/152","completion":"        List<Integer> y = new ArrayList<>();\n        if (x.size() <= 1) {\n            return x;\n        } else {\n            int mid = x.size() \/ 2;\n            List<Integer> z = mergeSort(x.subList(0, mid));\n            List<Integer> u = mergeSort(x.subList(mid, x.size()));\n            y.addAll(z);\n            y.addAll(u);\n            y.sort(Comparator.naturalOrder());\n        }\n        return y;\n    }\n}","language":"java"}
{"task_id":"MBJP\/274","completion":"        int sum = 0;\n        int[] dp = new int[n + 1];\n        dp[0] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j < i; j++) {\n                dp[i] = dp[i] + dp[j];\n            }\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/300","completion":"        if (n == 1) {\n            return 2;\n        }\n        if (n == 2) {\n            return 6;\n        }\n        if (n == 3) {\n            return 20;\n        }\n        double sum = 2 * countBinarySeq(n - 1);\n        sum = sum + (n - 1) * countBinarySeq(n - 2);\n        sum = sum + (n - 2) * countBinarySeq(n - 3);\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/386","completion":"        int count = 0, left = 0, right = 0;\n        while (left < s.length()) {\n            char c = s.charAt(left);\n            if (c == '[') {\n                right++;\n            } else if (c == ']') {\n                right--;\n            }\n            left++;\n            if (right < 0) {\n                count++;\n                left++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/439","completion":"        StringBuilder sb = new StringBuilder();\n        for (int i : l) {\n            if (sb.length() > 0) {\n                sb.append(i);\n            } else {\n                sb.append(i);\n            }\n        }\n        return Integer.valueOf(sb.toString());\n    }\n}","language":"java"}
{"task_id":"MBJP\/485","completion":"        int temp = 0;\n        List<Integer> b = new ArrayList<>();\n        for (int i : a) {\n            b.add(i);\n        }\n        int i = 0;\n        int j = n - 1;\n        while (i < j) {\n            if (b.get(i) != b.get(j)) {\n                temp = b.get(i);\n                i++;\n            } else {\n                i++;\n                j--;\n            }\n        }\n        if (temp == 0) {\n            return b.get(n - 1);\n        } else {\n            return temp;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/547","completion":"        int sum = 0;\n        while (n != 0) {\n            sum += (n & 1) ^ (n & 2) ^ (n & 4) ^ (n & 8);\n            n >>>= 1;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/610","completion":"        if (l > 0) {\n            \/\/System.out.println(list1);\n            List<Integer> l1 = new ArrayList<Integer>();\n            \/\/System.out.println(l1);\n            for (int i = 0; i < list1.size(); i++) {\n                if (i + 1 != l) {\n                    l1.add(list1.get(i));\n                }\n            }\n            \/\/System.out.println(l1);\n            list1 = l1;\n        }\n        \/\/System.out.println(list1);\n        return list1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/623","completion":"        List<Integer> nth = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            nth.add((int) (Math.pow(nums.get(i), n)));\n        }\n        return nth;\n    }\n}","language":"java"}
{"task_id":"MBJP\/692","completion":"        int factorial = 1;\n        for (int i = 1; i <= n; i++) {\n            factorial *= i;\n        }\n        int lastTwoDigits = (int) (factorial % 100);\n        return lastTwoDigits;\n    }\n}","language":"java"}
{"task_id":"MBJP\/699","completion":"        int diff = 0;\n        for (int i = 0; i < str1.length(); i++) {\n            if (str1.charAt(i) != str2.charAt(i)) {\n                diff++;\n            }\n        }\n        if (diff == 0) {\n            return \"0\";\n        }\n        if ((diff & 1) == 1) {\n            return \"Not Possible\";\n        }\n        return diff \/ 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/742","completion":"        return Math.pow(3, 0.5) * Math.pow(side, 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/749","completion":"        String[] nums = numsStr.stream().map(n -> n.trim()).toArray(String[]::new);\n        Arrays.sort(nums, new Comparator<String>() {\n            public int compare(String s1, String s2) {\n                String s1Num = s1.replace(\",\", \"\");\n                String s2Num = s2.replace(\",\", \"\");\n                return Integer.compare(Integer.parseInt(s1Num), Integer.parseInt(s2Num));\n            }\n        });\n        List<Integer> res = new ArrayList<Integer>();\n        for (String s : nums) {\n            res.add(Integer.parseInt(s.trim()));\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/770","completion":"        int sum = 0;\n        for (int i = 1; i < n * 2; i += 2) {\n            sum += ((int) Math.pow(i, 4));\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/923","completion":"        if (m == 0) {\n            return n;\n        }\n        if (n == 0) {\n            return m;\n        }\n        if (x.charAt(m - 1) == y.charAt(n - 1)) {\n            return 1 + superSeq(x, y, m - 1, n - 1);\n        }\n        return 1 + Math.min(superSeq(x, y, m - 1, n), superSeq(x, y, m, n - 1));\n    }\n}","language":"java"}
{"task_id":"MBJP\/1","completion":"        int[][] tc = new int[m+1][n+1];\n        tc[0][0] = cost.get(0).get(0);\n        for(int i = 1; i <= m; i++) {\n            tc[i][0] = tc[i-1][0] + cost.get(i).get(0);\n        }\n        for(int j = 1; j <= n; j++) {\n            tc[0][j] = tc[0][j-1] + cost.get(0).get(j);\n        }\n        for(int i = 1; i <= m; i++) {\n            for(int j = 1; j <= n; j++) {\n                tc[i][j] = Math.min(tc[i-1][j-1], tc[i-1][j]) + cost.get(i).get(j);\n            }\n        }\n        return tc[m][n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/5","completion":"        \/\/ code here\n        int[] A = new int[n+1];\n        int[] B = new int[n+1];\n        A[0] = 1;\n        A[1] = 0;\n        B[0] = 0;\n        B[1] = 1;\n        for(int i = 2; i <= n; i++) {\n            A[i] = A[i-2] + 2 * B[i-1];\n            B[i] = A[i-1] + B[i-2];\n        }\n        return A[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/14","completion":"        return ((l * b * h) \/ 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/26","completion":"        boolean res = true;\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size(); i++) {\n                if (list.get(i) != k) {\n                    res = false;\n                    break;\n                }\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/35","completion":"        return n*(n + 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/36","completion":"        int res = 0;\n        while (n > 0) {\n            n -= 1;\n            p *= 10;\n            res = p \/ q;\n            p %= q;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/47","completion":"        int variable = 1;\n        if (a == b) {\n            return 1;\n        } else if ((b - a) >= 5) {\n            return 0;\n        } else {\n            for (int i = a + 1; i < b + 1; i++) {\n                variable = (variable * (i % 10)) % 10;\n            }\n            return variable % 10;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/59","completion":"        return 3 * n * n - 2 * n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/60","completion":"        int mls[] = new int[n];\n        int max = 0;\n        for (int i = 0; i < n; i++) {\n            mls[i] = 1;\n        }\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (Math.abs(arr.get(i) - arr.get(j)) <= 1 && mls[i] < mls[j] + 1) {\n                    mls[i] = mls[j] + 1;\n                }\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (max < mls[i]) {\n                max = mls[i];\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/81","completion":"        List<List<Integer>> res = new ArrayList<List<Integer>>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            res.add(Arrays.asList(testTup1.get(i), testTup2.get(i % testTup2.size())));\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/84","completion":"        if (n == 1 || n == 2) {\n            return 1;\n        } else {\n            return sequence(sequence(n - 1)) + sequence(n - sequence(n - 1));\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/103","completion":"        if (m >= n || n == 0) {\n            return 0;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return ((n - m) * eulerianNum(n - 1, m - 1) + (m + 1) * eulerianNum(n - 1, m));\n    }\n}","language":"java"}
{"task_id":"MBJP\/110","completion":"        List<List<Integer>> res = new ArrayList<>();\n        for (List<Integer> sub : testList) {\n            if (sub.get(0) > strtVal) {\n                res.add(new ArrayList<>(Arrays.asList(strtVal, sub.get(0))));\n                strtVal = sub.get(1);\n            }\n            if (strtVal < stopVal) {\n                res.add(new ArrayList<>(Arrays.asList(strtVal, stopVal)));\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/139","completion":"        return 2 * 3.1415 * r;\n    }\n}","language":"java"}
{"task_id":"MBJP\/149","completion":"        int[] dp = new int[n];\n        int result = 1;\n        for (int i = 0; i < n; i++) {\n            dp[i] = 1;\n            for (int j = 0; j < i; j++) {\n                if ((arr.get(i) == arr.get(j) + 1) || (arr.get(i) == arr.get(j) - 1)) {\n                    dp[i] = Math.max(dp[i], dp[j] + 1);\n                }\n            }\n            result = Math.max(result, dp[i]);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/155","completion":"        int res = 0;\n        int count = 0;\n        int temp = n;\n        while (temp > 0) {\n            if (count % 2 == 1) {\n                res = res | (1 << count);\n            }\n            count++;\n            temp >>= 1;\n        }\n        return n ^ res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/158","completion":"        int max1 = Collections.max(arr);\n        int res = 0;\n        for (int i = 0; i < n; i++) {\n            if ((max1 - arr.get(i)) % k != 0) {\n                return -1;\n            } else {\n                res += (max1 - arr.get(i)) \/ k;\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/165","completion":"        int count_chars = 0;\n        for (int i = 0; i < str1.length(); i++) {\n            if ((i == str1.charAt(i) - 'A') || (i == str1.charAt(i) - 'a')) {\n                count_chars += 1;\n            }\n        }\n        return count_chars;\n    }\n}","language":"java"}
{"task_id":"MBJP\/190","completion":"        \/\/ write your code here\n        return ((y2 - y1 - 1) * (x2 - x1 - 1));\n    }\n}","language":"java"}
{"task_id":"MBJP\/233","completion":"        double lateralsurface = 2 * 3.1415 * r * h;\n        return lateralsurface;\n    }\n}","language":"java"}
{"task_id":"MBJP\/235","completion":"        int count = 0;\n        int res = 0;\n        int temp = n;\n        while (temp > 0) {\n            if (count % 2 == 1) {\n                res |= (1 << count);\n            }\n            count++;\n            temp >>= 1;\n        }\n        return (n | res);\n    }\n}","language":"java"}
{"task_id":"MBJP\/236","completion":"        if (n < k) {\n            return -1;\n        } else {\n            int tri_up = 0;\n            int tri_down = 0;\n            tri_up = ((n - k + 1) * (n - k + 2)) \/ 2;\n            tri_down = ((n - 2 * k + 1) * (n - 2 * k + 2)) \/ 2;\n            return tri_up + tri_down;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/239","completion":"        \/\/ code here\n        int[][] T = new int[m+1][n+1];\n        for (int i = 0; i < m+1; i++) {\n            for (int j = 0; j < n+1; j++) {\n                if (i == 0 || j == 0) {\n                    T[i][j] = 0;\n                } else if (i < j) {\n                    T[i][j] = 0;\n                } else if (j == 1) {\n                    T[i][j] = i;\n                } else {\n                    T[i][j] = T[i-1][j] + T[i\/2][j-1];\n                }\n            }\n        }\n        return T[m][n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/260","completion":"        if (n == 0 || n == 1) {\n            return 1;\n        }\n        return 2 * newmanPrime(n - 1) + newmanPrime(n - 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/268","completion":"        \/\/ code\n        return (6 * n * (n - 1) + 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/271","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            int j = 2 * i;\n            sum = sum + (j * j * j * j * j);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/276","completion":"        \/\/ write your code here\n        double volume=3.1415*r*r*h;\n        return volume;\n    }\n}","language":"java"}
{"task_id":"MBJP\/279","completion":"        \/\/ code\n        return 4 * n * n - 3 * n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/291","completion":"        \/\/ code here\n        int mod = 1000000007;\n        int dp[] = new int[n+1];\n        dp[0] = 1;\n        dp[1] = k;\n        dp[2] = k*k;\n        for(int i=3;i<=n;i++){\n            dp[i] = ((k-1) * (dp[i-1] + dp[i-2])) % mod;\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/304","completion":"        for (int i = rotations - 1; i >= 0; i--) {\n            int left = ranges.get(i).get(0);\n            int right = ranges.get(i).get(1);\n            if (left <= index && right >= index) {\n                if (index == left) {\n                    index = right;\n                } else {\n                    index = index - 1;\n                }\n            }\n        }\n        return arr.get(index);\n    }\n}","language":"java"}
{"task_id":"MBJP\/305","completion":"        \/\/ write your code here\n        for (String w : words) {\n            if (w.startsWith(\"P\")) {\n                return Arrays.asList(w.split(\" \"));\n            }\n        }\n        return null;\n    }\n}","language":"java"}
{"task_id":"MBJP\/321","completion":"        \/\/code here\n        int l = s.length();\n        String res = \"\";\n        for (int i = 1; i <= l; i++) {\n            res += i;\n        }\n        for (int i = l - 1; i >= 1; i--) {\n            res += i;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/346","completion":"        if (n == 0 && k == 0) {\n            return 1;\n        }\n        if (k == 0) {\n            return 0;\n        }\n        return zigzag(n, k - 1) + zigzag(n - 1, n - k);\n    }\n}","language":"java"}
{"task_id":"MBJP\/355","completion":"        int rectangles = 0;\n        int diameter = 2 * radius;\n        int diameterSquare = diameter * diameter;\n        for (int a = 1; a <= 2 * radius; a++) {\n            for (int b = 1; b <= 2 * radius; b++) {\n                int diagnalLengthSquare = (a * a + b * b);\n                if (diagnalLengthSquare <= diameterSquare) {\n                    rectangles++;\n                }\n            }\n        }\n        return rectangles;\n    }\n}","language":"java"}
{"task_id":"MBJP\/360","completion":"        \/\/ write your code here\n        return (int) (Math.pow(2, n) - 1) * (int) (Math.pow(2, n) - 1) - 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/374","completion":"        List<String> res = new ArrayList<String>();\n        if (str.length() == 0) {\n            res.add(\"\");\n            return res;\n        }\n        char[] ch = str.toCharArray();\n        List<String> prev = permuteString(str.substring(1));\n        for (String s : prev) {\n            for (int i = 0; i <= s.length(); i++) {\n                res.add(s.substring(0, i) + ch[0] + s.substring(i));\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/383","completion":"        int res = 0;\n        int count = 0;\n        int temp = n;\n        while (temp > 0) {\n            if (count % 2 == 0) {\n                res = res | (1 << count);\n            }\n            count++;\n            temp >>= 1;\n        }\n        return n ^ res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/385","completion":"        if (n == 0) {\n            return 3;\n        }\n        if (n == 1) {\n            return 0;\n        }\n        if (n == 2) {\n            return 2;\n        }\n        return getPerrin(n - 2) + getPerrin(n - 3);\n    }\n}","language":"java"}
{"task_id":"MBJP\/416","completion":"        \/\/ code here\n        if(n == 0)\n            return 0;\n        if(n == 1)\n            return 1;\n        if(n == 2)\n            return 2;\n        if(n == 3)\n            return 3;\n        return Math.max(breaksum(n\/2)+breaksum(n\/3)+breaksum(n\/4), n);\n    }\n}","language":"java"}
{"task_id":"MBJP\/420","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (2 * i) * (2 * i) * (2 * i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/430","completion":"        \/\/ write your code here\n        int directrix = ((int) (c - ((b * b) + 1) * 4 * a));\n        return directrix;\n    }\n}","language":"java"}
{"task_id":"MBJP\/448","completion":"        \/\/ write your code here\n        if (n == 0) {\n            return 3;\n        }\n        if (n == 1) {\n            return 3;\n        }\n        if (n == 2) {\n            return 5;\n        }\n        int sum = 5;\n        int a = 3;\n        int b = 0;\n        int c = 2;\n        while (n > 2) {\n            int d = a + b;\n            sum = sum + d;\n            a = b;\n            b = c;\n            c = d;\n            n--;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/497","completion":"        \/\/ your code here\n        double l = Math.sqrt(r * r + h * h);\n        double SA = Math.PI * r * (r + l);\n        return SA;\n    }\n}","language":"java"}
{"task_id":"MBJP\/500","completion":"        \/\/ write your code here\n        String ans = \" \";\n        for (String i : list) {\n            ans += \" \" + i;\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/503","completion":"        \/\/ write your code here\n        int i = 0;\n        int j = 1;\n        int sum = 0;\n        List<Integer> result = new ArrayList<Integer>();\n        while(j < nums.size()){\n            if(nums.get(i) + nums.get(j) == 0){\n                sum = 0;\n            }else{\n                sum = nums.get(i) + nums.get(j);\n            }\n            result.add(sum);\n            i++;\n            j++;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/529","completion":"        \/\/ write your code here\n        int dp[] = new int[n + 1];\n        dp[0] = 2;\n        dp[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            dp[i] = dp[i - 1] + 2 * dp[i - 2];\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/574","completion":"        double surfacearea = ((2 * 3.1415 * r * r) + (2 * 3.1415 * r * h));\n        return surfacearea;\n    }\n}","language":"java"}
{"task_id":"MBJP\/594","completion":"        \/\/ write your code here\n        int first_even = list1.stream().filter(x -> x % 2 == 0).findFirst().orElse(-1);\n        int first_odd = list1.stream().filter(x -> x % 2 != 0).findFirst().orElse(-1);\n        return (first_even - first_odd);\n    }\n}","language":"java"}
{"task_id":"MBJP\/603","completion":"        List<Integer> ludics = new ArrayList<Integer>();\n        for (int i = 1; i <= n; i++) {\n            ludics.add(i);\n        }\n        int index = 1;\n        while (index != ludics.size()) {\n            int first_ludic = ludics.get(index);\n            int remove_index = index + first_ludic;\n            while (remove_index < ludics.size()) {\n                ludics.remove(remove_index);\n                remove_index = remove_index + first_ludic - 1;\n            }\n            index += 1;\n        }\n        return ludics;\n    }\n}","language":"java"}
{"task_id":"MBJP\/608","completion":"        int[][] bell = new int[n+1][n+1];\n        bell[0][0] = 1;\n        for (int i = 1; i <= n; i++) {\n            bell[i][0] = bell[i-1][i-1];\n            for (int j = 1; j <= i; j++) {\n                bell[i][j] = bell[i-1][j-1] + bell[i][j-1];\n            }\n        }\n        return bell[n][0];\n    }\n}","language":"java"}
{"task_id":"MBJP\/609","completion":"        int x = Math.max(b - 1, n);\n        return (a * x) \/ b;\n    }\n}","language":"java"}
{"task_id":"MBJP\/620","completion":"        \/\/ code here\n        int dp[] = new int[n];\n        dp[n - 1] = 1;\n        for (int i = n - 2; i >= 0; i--) {\n            int mxm = 0;\n            for (int j = i + 1; j < n; j++) {\n                if (a.get(j) % a.get(i) == 0 || a.get(i) % a.get(j) == 0) {\n                    mxm = Math.max(mxm, dp[j]);\n                }\n            }\n            dp[i] = 1 + mxm;\n        }\n        return dp[0];\n    }\n}","language":"java"}
{"task_id":"MBJP\/634","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            int j = 2 * i;\n            sum = sum + (j * j * j * j);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/641","completion":"        return (n * (7 * n - 5) \/ 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/646","completion":"        int no = 0;\n        no = (n - k + 1) * (n - k + 1) * (n - k + 1);\n        return no;\n    }\n}","language":"java"}
{"task_id":"MBJP\/657","completion":"        int fact = 1;\n        for (int i = 2; i <= n; i++) {\n            fact *= i;\n        }\n        int firstDigit = 0;\n        while (fact > 0) {\n            firstDigit = fact % 10;\n            fact \/= 10;\n        }\n        return firstDigit;\n    }\n}","language":"java"}
{"task_id":"MBJP\/721","completion":"        \/\/ code here\n        double[][] dp = new double[n][n];\n        for (int i = 0; i < n; i++) {\n            dp[i][0] = cost.get(i).get(0);\n        }\n        for (int i = 1; i < n; i++) {\n            dp[i][0] = dp[i - 1][0] + cost.get(i).get(0);\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 1; j < n; j++) {\n                dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + cost.get(i).get(j);\n            }\n        }\n        return dp[n - 1][n - 1] \/ (2 * n - 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/731","completion":"        \/\/ your code here\n        double l = Math.sqrt(r * r + h * h);\n        double LSA = Math.PI * r * l;\n        return LSA;\n    }\n}","language":"java"}
{"task_id":"MBJP\/738","completion":"        if (n < 0) {\n            return 0;\n        } else {\n            return 1 \/ (Math.pow(2, n)) + geometricSum(n - 1);\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/780","completion":"        \/\/ write your code here\n        List<List<Integer>> res = new ArrayList<List<Integer>>();\n        for (int i = 0; i < testList.size(); i++) {\n            for (int j = i + 1; j < testList.size(); j++) {\n                List<Integer> temp = new ArrayList<Integer>();\n                temp.add(testList.get(i).get(0) + testList.get(j).get(0));\n                temp.add(testList.get(i).get(1) + testList.get(j).get(1));\n                res.add(temp);\n            }\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/782","completion":"        int sum = 0;\n        int l = arr.size();\n        for (int i = 0; i < l; i++) {\n            sum += ((((i + 1) * (l - i) + 1) \/ 2) * arr.get(i));\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/819","completion":"        \/\/ write your code here\n        List<List<Integer>> result = new ArrayList<>();\n        if (lists == null || lists.size() == 0) {\n            return result;\n        }\n        List<Integer> element = new ArrayList<>();\n        List<Integer> frequency = new ArrayList<>();\n        int running_count = 1;\n        for (int i = 0; i < lists.size() - 1; i++) {\n            if (lists.get(i) == lists.get(i + 1)) {\n                running_count += 1;\n            } else {\n                frequency.add(running_count);\n                element.add(lists.get(i));\n                running_count = 1;\n            }\n        }\n        frequency.add(running_count);\n        element.add(lists.get(lists.size() - 1));\n        result.add(element);\n        result.add(frequency);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/846","completion":"        arr.sort(Comparator.naturalOrder());\n        dep.sort(Comparator.naturalOrder());\n        int plat_needed = 1;\n        int result = 1;\n        int i = 1;\n        int j = 0;\n        while (i < n && j < n) {\n            if (arr.get(i) <= dep.get(j)) {\n                plat_needed += 1;\n                i += 1;\n            } else if (arr.get(i) > dep.get(j)) {\n                plat_needed -= 1;\n                j += 1;\n            }\n            if (plat_needed > result) {\n                result = plat_needed;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/863","completion":"        \/\/ code here\n        int ans = 0;\n        int count = 0;\n        arr.sort(Comparator.naturalOrder());\n        List<Integer> v = new ArrayList<>();\n        v.add(arr.get(0));\n        for (int i = 1; i < n; i++) {\n            if (arr.get(i) != arr.get(i - 1)) {\n                v.add(arr.get(i));\n            }\n        }\n        for (int i = 0; i < v.size(); i++) {\n            if (i > 0 && v.get(i) == v.get(i - 1) + 1) {\n                count++;\n            } else {\n                count = 1;\n            }\n            ans = Math.max(ans, count);\n        }\n        return ans;\n    }\n}","language":"java"}
{"task_id":"MBJP\/901","completion":"        if (n <= 2) {\n            return n;\n        }\n        int i = n * 2;\n        int factors[] = new int[n];\n        for (int j = 0; j < n; j++) {\n            factors[j] = j + 1;\n        }\n        while (true) {\n            for (int a = 0; a < n; a++) {\n                if (i % factors[a] != 0) {\n                    i += n;\n                    break;\n                }\n                if (factors[a] == factors[n - 1] && i % factors[a] == 0) {\n                    return i;\n                }\n            }\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/903","completion":"        int cnt = 0;\n        for (int i = 1; i <= n; i++) {\n            int temp = i;\n            while (temp != 0) {\n                if ((temp & 1) == 0) {\n                    cnt++;\n                }\n                temp = temp >> 1;\n            }\n        }\n        return cnt;\n    }\n}","language":"java"}
{"task_id":"MBJP\/934","completion":"        if (m == 0 || n == 0) {\n            return 1;\n        }\n        return dealnnoyNum(m - 1, n) + dealnnoyNum(m - 1, n - 1) + dealnnoyNum(m, n - 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/944","completion":"        \/\/ code\n        for (int i = 0; i < text.length(); i++) {\n            if (Character.isDigit(text.charAt(i))) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/953","completion":"        \/\/ code here\n        int res = 0;\n        ar.sort(new Comparator<Integer>() {\n            @Override\n            public int compare(Integer o1, Integer o2) {\n                return o1 - o2;\n            }\n        });\n        for (int i = 0; i < n; i++) {\n            int count = 1;\n            for (int j = i + 1; j < n; j++) {\n                if (ar.get(i) == ar.get(j)) {\n                    count++;\n                } else {\n                    break;\n                }\n            }\n            res = Math.max(res, count);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/963","completion":"        \/\/ your code here\n        List<Object> result = new ArrayList<>();\n        String solution = \"\";\n        int discriminant = (y * y) - (4 * x * z);\n        if (discriminant > 0) {\n            solution = \"Two solutions\";\n            result.add(solution);\n            result.add(discriminant);\n        } else if (discriminant == 0) {\n            solution = \"one solution\";\n            result.add(solution);\n            result.add(discriminant);\n        } else if (discriminant < 0) {\n            solution = \"no real solution\";\n            result.add(solution);\n            result.add(discriminant);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/971","completion":"        \/\/ code here\n        int dp[] = new int[n+1];\n        dp[0] = 0;\n        for(int i = 1; i <= n; i++){\n            dp[i] = -1;\n            if(i >= a && dp[i-a] != -1){\n                dp[i] = Math.max(dp[i], dp[i-a]+1);\n            }\n            if(i >= b && dp[i-b] != -1){\n                dp[i] = Math.max(dp[i], dp[i-b]+1);\n            }\n            if(i >= c && dp[i-c] != -1){\n                dp[i] = Math.max(dp[i], dp[i-c]+1);\n            }\n        }\n        return dp[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/38","completion":"        \/\/ write your code here\n        int first_even = -1;\n        int first_odd = -1;\n        first_even = list1.stream().filter(x -> x % 2 == 0).findFirst().orElse(0);\n        first_odd = list1.stream().filter(x -> x % 2 != 0).findFirst().orElse(0);\n        return first_even \/ first_odd;\n    }\n}","language":"java"}
{"task_id":"MBJP\/73","completion":"        \/\/Write your code here\n        List<String> str = new ArrayList<>();\n        String [] ar = text.split(\"\\\\*|\\\\n\");\n        \n        for(int i=0;i<ar.length;i++){\n            str.add(ar[i]);\n        }\n        return str;\n    }\n}","language":"java"}
{"task_id":"MBJP\/76","completion":"        if(n < m){\n            int temp = m;\n            m = n;\n            n = temp;\n        }\n        return ((m * (m + 1) * (2 * m + 1) \/ 6 + (n - m) * m * (m + 1) \/ 2));\n    }\n}","language":"java"}
{"task_id":"MBJP\/78","completion":"        return (n + 1) \/ 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/111","completion":"        \/\/ your code goes here\n        Set<Integer> set1 = new HashSet<Integer>(nestedlist.get(0));\n        Set<Integer> set2 = new HashSet<Integer>(nestedlist.get(1));\n        set1.retainAll(set2);\n        List<Integer> common_in_nested_lists = new ArrayList<Integer>(set1);\n        return common_in_nested_lists;\n    }\n}","language":"java"}
{"task_id":"MBJP\/125","completion":"        int current_sum = 0;\n        int max_sum = 0;\n        for (int i = 0; i < n; i++) {\n            current_sum += (string.charAt(i) == '0' ? 1 : -1);\n            if (current_sum < 0) {\n                current_sum = 0;\n            }\n            max_sum = Math.max(current_sum, max_sum);\n        }\n        return max_sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/129","completion":"        if (myMatrix == null || myMatrix.size() == 0 || myMatrix.get(0).size() == 0) {\n            return false;\n        }\n\n        int iSize = myMatrix.size();\n        int sum = 0;\n        for (List<Integer> row : myMatrix) {\n            sum += row.get(0);\n        }\n        int sum1 = 0;\n        for (int i = 0; i < iSize; i++) {\n            sum1 += myMatrix.get(i).get(i);\n        }\n        int sum2 = 0;\n        for (int j = iSize - 1; j >= 0; j--) {\n            sum2 += myMatrix.get(j).get(j);\n        }\n\n        if (sum == sum1 && sum == sum2) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/146","completion":"        for (int i = 0; i < str1.length(); i++) {\n            return (int) str1.charAt(i);\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/147","completion":"        for (int i = m-1; i >= 0; --i) {\n            for (int j = 0; j < i+1; ++j) {\n                if (tri.get(i+1).get(j) > tri.get(i+1).get(j+1)) {\n                    tri.get(i).set(j, tri.get(i+1).get(j) + tri.get(i).get(j));\n                } else {\n                    tri.get(i).set(j, tri.get(i+1).get(j+1) + tri.get(i).get(j));\n                }\n            }\n        }\n        return tri.get(0).get(0);\n    }\n}","language":"java"}
{"task_id":"MBJP\/153","completion":"        List<Double> vertex = new ArrayList<>();\n        vertex.add((-(double) b \/ (2.0 * a)));\n        vertex.add((((double) 4.0 * a * c) - ((double) b * b)) \/ (4.0 * a));\n        return vertex;\n    }\n}","language":"java"}
{"task_id":"MBJP\/163","completion":"        return s * (l * l) \/ (4 * Math.tan(Math.PI \/ s));\n    }\n}","language":"java"}
{"task_id":"MBJP\/179","completion":"        ArrayList<Integer> terms = new ArrayList<Integer>();\n        int temp = x;\n        int n = 0;\n        while (temp > 0) {\n            terms.add(temp % 10);\n            temp = temp \/ 10;\n            n++;\n        }\n        Collections.reverse(terms);\n        int next_term = 0;\n        int i = n;\n        while (next_term < x) {\n            next_term = 0;\n            for (int j = 1; j <= n; j++) {\n                next_term += terms.get(i - j);\n            }\n            terms.add(next_term);\n            i++;\n        }\n        return (next_term == x);\n    }\n}","language":"java"}
{"task_id":"MBJP\/185","completion":"        List<Double> focus = new ArrayList<>();\n        focus.add((-1.0 * b \/ (2 * a)));\n        focus.add((4.0 * a * c - b * b + 1.0) \/ (4.0 * a));\n        return focus;\n    }\n}","language":"java"}
{"task_id":"MBJP\/198","completion":"        if (a < 0 || b < 0) {\n            return -1;\n        }\n        return (3 * Math.sqrt(3) * Math.pow(a, 2)) \/ (4 * b);\n    }\n}","language":"java"}
{"task_id":"MBJP\/205","completion":"        List<Integer> res = new ArrayList<Integer>();\n        for (int i = 0; i < testTup.size(); i++) {\n            res.add(~testTup.get(i));\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/219","completion":"        List<Integer> res = new ArrayList<Integer>();\n        List<Integer> temp = new ArrayList<Integer>(testTup);\n        Collections.sort(temp);\n        int idx = 0;\n        int index = 0;\n        while (idx < temp.size()) {\n            if (index < k || idx >= temp.size() - k) {\n                res.add(temp.get(idx));\n            }\n            idx++;\n            index++;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/287","completion":"        return (int)(2*n*(n+1)*(2*n+1)\/3);\n    }\n}","language":"java"}
{"task_id":"MBJP\/289","completion":"        \/\/ code here \n        int hund1 = n \/ 100;\n        int hund4 = n \/ 400;\n        int leap = n \/ 4;\n        int ordd = n - leap ;\n        if (hund1 != 0) {\n            ordd += hund1 ;\n            leap -= hund1 ;\n        }\n        if (hund4 != 0) {\n            ordd -= hund4 ;\n            leap += hund4 ;\n        }\n        int days = ordd + leap * 2;\n        return days % 7;\n    }\n}","language":"java"}
{"task_id":"MBJP\/308","completion":"        \/\/ code here\n        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            for (int j = 0; j < nums2.size(); j++) {\n                result.add(nums1.get(i) * nums2.get(j));\n            }\n        }\n        Collections.sort(result, Collections.reverseOrder());\n        return result.subList(0, n);\n    }\n}","language":"java"}
{"task_id":"MBJP\/311","completion":"        \/\/ Your code goes here.\n        int pos, temp, count = 0;\n        if ((n & (n + 1)) == 0) {\n            return n;\n        }\n        pos = 0;\n        temp = n;\n        while (temp != 0) {\n            if ((temp & 1) == 0) {\n                pos = count;\n            }\n            count++;\n            temp = temp >> 1;\n        }\n        return n | (1 << pos);\n    }\n}","language":"java"}
{"task_id":"MBJP\/324","completion":"        \/\/ write your code here\n        List<Integer> alternates = new ArrayList<Integer>();\n        int sum1 = 0;\n        int sum2 = 0;\n        int idx = 0;\n        int num = 0;\n        while(idx < testTuple.size()){\n            if(idx % 2 != 0){\n                sum1 += testTuple.get(idx);\n            }\n            else{\n                sum2 += testTuple.get(idx);\n            }\n            idx++;\n        }\n        alternates.add(sum1);\n        alternates.add(sum2);\n        return alternates;\n    }\n}","language":"java"}
{"task_id":"MBJP\/328","completion":"        \/\/ TODO Auto-generated method stub\n        List<Integer> list = new ArrayList<>();\n        list.addAll(list1.subList(m, list1.size()));\n        list.addAll(list1.subList(0, n));\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/438","completion":"        int res = 0;\n        for (int idx = 0; idx < testList.size() - 1; idx++) {\n            for (int iidx = idx + 1; iidx < testList.size(); iidx++) {\n                if (testList.get(iidx).get(0) == testList.get(idx).get(1) && testList.get(idx).get(1) == testList.get(iidx).get(0)) {\n                    res += 1;\n                }\n            }\n        }\n        return (res + \"\");\n    }\n}","language":"java"}
{"task_id":"MBJP\/440","completion":"        \/\/ write your code here\n        List<Object> res = new ArrayList<>();\n        int i = 0;\n        while (i < text.length()) {\n            int j = text.length() - 1;\n            while (j >= 0) {\n                if (text.substring(i, j).matches(\"\\\\w+ly\")) {\n                    res.add(i);\n                    res.add(j);\n                    res.add(text.substring(i, j));\n                    return res;\n                }\n                j--;\n            }\n            i++;\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/468","completion":"        int mpis[] = new int[n];\n        for (int i = 0; i < n; i++) {\n            mpis[i] = arr.get(i);\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (arr.get(i) > arr.get(j) && mpis[i] < (mpis[j] * arr.get(i))) {\n                    mpis[i] = mpis[j] * arr.get(i);\n                }\n            }\n        }\n        int max = mpis[0];\n        for (int i = 1; i < n; i++) {\n            if (mpis[i] > max) {\n                max = mpis[i];\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/508","completion":"        List<String> common_elements = new ArrayList<>(l1);\n        common_elements.retainAll(l2);\n        l1 = new ArrayList<>(l1);\n        l2 = new ArrayList<>(l2);\n        l1.retainAll(common_elements);\n        l2.retainAll(common_elements);\n        return l1.equals(l2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/571","completion":"        Collections.sort(arr);\n        int dp[] = new int[n];\n        dp[0] = 0;\n        int result = 0;\n        for (int i = 1; i < n; i++) {\n            dp[i] = dp[i - 1];\n            if (arr.get(i) - arr.get(i - 1) < k) {\n                if (i >= 2) {\n                    dp[i] = Math.max(dp[i], dp[i - 2] + arr.get(i) + arr.get(i - 1));\n                } else {\n                    dp[i] = Math.max(dp[i], arr.get(i) + arr.get(i - 1));\n                }\n            }\n            result = Math.max(result, dp[i]);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/640","completion":"        \n        for(int i = 0; i < items.size(); i++)\n        {\n            String item = items.get(i);\n            items.set(i, item.replaceAll(\" ?\\\\([^)]+\\\\)\", \"\"));\n        }\n\n        return items.get(0);\n    }\n}","language":"java"}
{"task_id":"MBJP\/660","completion":"        List<Integer> res = new ArrayList<>();\n        if (l1 < l2 && r1 < r2) {\n            res.add(Math.min(l1, r1));\n            res.add(Math.max(r2, l2));\n        } else if (l1 > l2 && r1 > r2) {\n            res.add(Math.min(l2, r2));\n            res.add(Math.max(l1, r1));\n        } else {\n            res.add(l1);\n            res.add(r1);\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/661","completion":"        int[] sum = new int[n];\n        if (n >= 1) {\n            sum[0] = arr.get(0);\n        }\n        if (n >= 2) {\n            sum[1] = sum[0] + arr.get(1);\n        }\n        if (n > 2) {\n            sum[2] = Math.max(sum[1], Math.max(arr.get(1) + arr.get(2), arr.get(0) + arr.get(2)));\n        }\n        for (int i = 3; i < n; i++) {\n            sum[i] = Math.max(Math.max(sum[i - 1], sum[i - 2] + arr.get(i)), arr.get(i) + arr.get(i - 1) + sum[i - 3]);\n        }\n        return sum[n - 1];\n    }\n}","language":"java"}
{"task_id":"MBJP\/739","completion":"        int x = (int) Math.round(Math.sqrt(2 * Math.pow(10, (n - 1))));\n        return x;\n    }\n}","language":"java"}
{"task_id":"MBJP\/773","completion":"        List<Object> list = new ArrayList<Object>();\n        for (int i = 0; i < text.length() - pattern.length() + 1; i++) {\n            String substring = text.substring(i, i + pattern.length());\n            if (substring.equals(pattern)) {\n                list.add(substring);\n                list.add(i);\n                list.add(i + pattern.length());\n                break;\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/784","completion":"        int first_even = list1.stream().filter(i -> i % 2 == 0).findFirst().orElse(-1);\n        int first_odd = list1.stream().filter(i -> i % 2 != 0).findFirst().orElse(-1);\n        return (first_even * first_odd);\n    }\n}","language":"java"}
{"task_id":"MBJP\/836","completion":"        int max_so_far = 0;\n        int max_ending_here = 0;\n        int start = 0;\n        int end = 0;\n        int s = 0;\n        for (int i = 0; i < size; i++) {\n            max_ending_here += a.get(i);\n            if (max_so_far < max_ending_here) {\n                max_so_far = max_ending_here;\n                start = s;\n                end = i;\n            }\n            if (max_ending_here < 0) {\n                max_ending_here = 0;\n                s = i + 1;\n            }\n        }\n        return end - start + 1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/849","completion":"        int[] sumOfPrimeDivisors = new int[n + 1];\n        sumOfPrimeDivisors[0] = 0;\n        sumOfPrimeDivisors[1] = 0;\n\n        for (int i = 2; i <= n; i++) {\n            if (sumOfPrimeDivisors[i] == 0) {\n                for (int j = i; j <= n; j += i) {\n                    sumOfPrimeDivisors[j] += i;\n                }\n            }\n        }\n\n        return sumOfPrimeDivisors[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/881","completion":"        int firstEven = list1.stream().filter(x -> x % 2 == 0).findFirst().orElse(-1);\n        int firstOdd = list1.stream().filter(x -> x % 2 != 0).findFirst().orElse(-1);\n        return (firstEven + firstOdd);\n    }\n}","language":"java"}
{"task_id":"MBJP\/898","completion":"        \n        List<Integer> result = new ArrayList<Integer>();\n        for (int i = 0; i < numbers.size(); i++) {\n            int group = 1;\n            for (int j = i + 1; j < numbers.size(); j++) {\n                if (numbers.get(i).equals(numbers.get(j))) {\n                    group++;\n                }\n                if (group == n) {\n                    result.add(numbers.get(i));\n                    i = j;\n                    group = 1;\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/909","completion":"        for(int x = num - 1; x > 0; x--) {\n            if(String.valueOf(x).equals(new StringBuilder(String.valueOf(x)).reverse().toString())) {\n                return x;\n            }\n        }\n        return 0;\n    }\n}","language":"java"}
{"task_id":"MBJP\/968","completion":"        int x = Math.min(b - 1, n);\n        return (a * x) \/ b;\n    }\n}","language":"java"}
{"task_id":"MBJP\/13","completion":"        \/\/ write your code here\n        Map<String, Integer> map = new HashMap<>();\n        for (String word : words) {\n            if (map.containsKey(word)) {\n                map.put(word, map.get(word) + 1);\n            } else {\n                map.put(word, 1);\n            }\n        }\n        List<List<Object>> result = new ArrayList<>();\n        for (String key : map.keySet()) {\n            List<Object> list = new ArrayList<>();\n            list.add(key);\n            list.add(map.get(key));\n            result.add(list);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/15","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < text.length(); i++) {\n            char c = text.charAt(i);\n            if (Character.isLowerCase(c)) {\n                result.add(text.substring(i, i + 1));\n                i++;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/31","completion":"        \/\/ code here\n        List<Integer> res = new ArrayList<>();\n        if (nums.size() == 0) return res;\n        PriorityQueue<Integer> pq = new PriorityQueue<>(k, (a, b) -> b - a);\n        for (List<Integer> list : nums) {\n            for (int i : list) {\n                pq.add(i);\n            }\n        }\n        while (res.size() < k) {\n            res.add(pq.poll());\n        }\n        return res;\n    }\n}","language":"java"}
{"task_id":"MBJP\/39","completion":"        char[] arr = s.toCharArray();\n        int n = arr.length;\n        int i = 0;\n        while (i < n - 1) {\n            if (arr[i] == arr[i + 1]) {\n                i++;\n            } else {\n                int j = i + 1;\n                while (j < n && arr[j] == arr[i]) {\n                    j++;\n                }\n                char temp = arr[i];\n                arr[i] = arr[j - 1];\n                arr[j - 1] = temp;\n                i = j - 1;\n            }\n        }\n        return new String(arr);\n    }\n}","language":"java"}
{"task_id":"MBJP\/67","completion":"        int[] bell = new int[n + 1];\n        bell[0] = 1;\n        bell[1] = 1;\n        for (int i = 2; i <= n; i++) {\n            for (int j = 1; j <= i \/ 2; j++) {\n                bell[i] += bell[j] * bell[i - j];\n            }\n        }\n        return bell[n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/75","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size(); i++) {\n                for (int j = i + 1; j < list.size(); j++) {\n                    if (list.get(i) % k == 0 && list.get(j) % k == 0) {\n                        List<Integer> tuple = new ArrayList<>();\n                        tuple.add(list.get(i));\n                        tuple.add(list.get(j));\n                        result.add(tuple);\n                    }\n                }\n            }\n        }\n        return result.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/100","completion":"        int n = num;\n        int rev = 0;\n        int rem = 0;\n        while (n > 0) {\n            rem = n % 10;\n            rev = rev * 10 + rem;\n            n = n \/ 10;\n        }\n        if (rev < num) {\n            return rev;\n        } else {\n            return num;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/114","completion":"        \/\/ Write your code here\n        Map<Integer, Integer> map = new HashMap<>();\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size(); i++) {\n                if (map.containsKey(list.get(i))) {\n                    map.put(list.get(i), map.get(list.get(i)) + 1);\n                } else {\n                    map.put(list.get(i), 1);\n                }\n            }\n        }\n        List<String> result = new ArrayList<>();\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            result.add(entry.getKey() + \",\" + entry.getValue());\n        }\n        return result.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/115","completion":"        for (HashMap<Object, Object> map : list1) {\n            if (map.size() > 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/123","completion":"        int sum = 0;\n        for (int i = 1; i < limit; i++) {\n            for (int j = i + 1; j < limit; j++) {\n                if (isAmicable(i, j)) {\n                    sum += i + j;\n                }\n            }\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/137","completion":"        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) == 0) {\n                count++;\n            }\n        }\n        return (double) count \/ nums.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/143","completion":"        int count = 0;\n        for (List<Integer> list : input) {\n            if (list.size() > 1) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/148","completion":"        int sum = 0;\n        while (n > 0) {\n            sum += n % 10;\n            n \/= 10;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/157","completion":"        List<List<Object>> result = new ArrayList<>();\n        int count = 1;\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) == list1.get(i + 1)) {\n                count++;\n            } else {\n                result.add(new ArrayList<>(Collections.nCopies(count, list1.get(i))));\n                count = 1;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/160","completion":"        int x = 0;\n        int y = 0;\n        int count = 0;\n        for (int i = 1; i <= n; i++) {\n            x = a * x + b * i;\n            if (x == n) {\n                count++;\n                break;\n            }\n        }\n        if (count == 0) {\n            return \"No solution\";\n        }\n        return Arrays.asList(\"x = \", x, \", y = \", y);\n    }\n}","language":"java"}
{"task_id":"MBJP\/174","completion":"        HashMap<String, List<Integer>> map = new HashMap<>();\n        for (List<Object> list : l) {\n            String key = (String) list.get(0);\n            Integer value = (Integer) list.get(1);\n            if (!map.containsKey(key)) {\n                map.put(key, new ArrayList<>());\n            }\n            map.get(key).add(value);\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/182","completion":"        List<List<Object>> result = new ArrayList<>();\n        if (string == null || string.length() == 0) {\n            return result;\n        }\n        String regex = \"[A-Za-z0-9]\";\n        String[] words = string.split(regex);\n        for (String word : words) {\n            List<Object> temp = new ArrayList<>();\n            for (char c : word.toCharArray()) {\n                if (Character.isUpperCase(c)) {\n                    temp.add(Character.toLowerCase(c));\n                } else if (Character.isLowerCase(c)) {\n                    temp.add(Character.toUpperCase(c));\n                } else {\n                    temp.add(c);\n                }\n            }\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/209","completion":"        int n = heap.size();\n        heap.set(0, a);\n        heapify(heap, 0, n);\n        return heap;\n    }\n}","language":"java"}
{"task_id":"MBJP\/215","completion":"        List<Object> list = new ArrayList<>();\n        for (Object o : alist) {\n            if (o instanceof List) {\n                list.addAll(decodeList((List<Object>) o));\n            } else {\n                list.add(o);\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/216","completion":"        if (list1.size() > list2.size()) {\n            return false;\n        }\n        for (int i = 0; i < list1.size(); i++) {\n            List<Integer> list = list2.get(i);\n            if (list.contains(list1.get(i))) {\n                continue;\n            } else {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/217","completion":"        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (map.containsKey(ch)) {\n                map.put(ch, map.get(ch) + 1);\n            } else {\n                map.put(ch, 1);\n            }\n        }\n        for (int i = 0; i < str.length(); i++) {\n            char ch = str.charAt(i);\n            if (map.get(ch) > 1) {\n                return ch + \"\";\n            }\n        }\n        return \"\\x00\";\n    }\n}","language":"java"}
{"task_id":"MBJP\/218","completion":"        int c = a ^ b;\n        int count = 0;\n        while (c != 0) {\n            count++;\n            c &= (c - 1);\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/222","completion":"        if (testTuple.size() == 0) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < testTuple.size() && j < testTuple.size()) {\n            if (testTuple.get(i) instanceof Integer && testTuple.get(j) instanceof Integer) {\n                if (testTuple.get(i) != testTuple.get(j)) {\n                    return false;\n                }\n            } else if (testTuple.get(i) instanceof String && testTuple.get(j) instanceof String) {\n                if (!testTuple.get(i).equals(testTuple.get(j))) {\n                    return false;\n                }\n            }\n            i++;\n            j++;\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/230","completion":"        \/\/ code here\n        String str = str1.replaceAll(\"\\\\s\", char);\n        return str;\n    }\n}","language":"java"}
{"task_id":"MBJP\/237","completion":"        HashMap<List<Integer>, Integer> result = new HashMap<>();\n        for (List<Integer> tuple : testList) {\n            List<Integer> sortedTuple = new ArrayList<>(tuple);\n            Collections.sort(sortedTuple);\n            if (result.containsKey(sortedTuple)) {\n                result.put(sortedTuple, result.get(sortedTuple) + 1);\n            } else {\n                result.put(sortedTuple, 1);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/240","completion":"        \/\/ write your code here\n        List<Object> list = new ArrayList<>();\n        list.add(list1.get(list1.size()-1));\n        list.addAll(list2);\n        list.remove(list2.size()-1);\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/243","completion":"        List<List<Object>> result = new ArrayList<>();\n        Map<Object, Integer> map = new HashMap<>();\n        for (List<Object> l : lst) {\n            map.put(l.get(0), map.getOrDefault(l.get(0), 0) + 1);\n        }\n        for (Map.Entry<Object, Integer> entry : map.entrySet()) {\n            List<Object> temp = new ArrayList<>();\n            temp.add(entry.getKey());\n            temp.addAll(new ArrayList<>(lst.get(0)).subList(1, lst.get(0).size()));\n            for (int i = 0; i < entry.getValue(); i++) {\n                result.add(temp);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/245","completion":"        int max = 0;\n        int sum = 0;\n        int i = 0;\n        int j = 0;\n        while (j < n) {\n            if (arr.get(j) < arr.get(i)) {\n                sum += arr.get(j);\n                j++;\n            } else {\n                sum += arr.get(i);\n                i++;\n            }\n            if (sum > max) {\n                max = sum;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/255","completion":"        List<List<String>> result = new ArrayList<>();\n        if (n == 0) {\n            result.add(new ArrayList<>());\n            return result;\n        }\n        if (n == 1) {\n            for (String s : l) {\n                List<String> temp = new ArrayList<>();\n                temp.add(s);\n                result.add(temp);\n            }\n            return result;\n        }\n        List<List<String>> temp = combinationsColors(l, n - 1);\n        for (List<String> list : temp) {\n            for (int i = 0; i < l.size(); i++) {\n                List<String> temp2 = new ArrayList<>(list);\n                temp2.add(l.get(i));\n                result.add(temp2);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/262","completion":"        List<List<Object>> result = new ArrayList<>();\n        int i = 0;\n        while (i < list1.size()) {\n            int j = i + l;\n            if (j > list1.size()) {\n                j = list1.size();\n            }\n            List<Object> temp = new ArrayList<>();\n            for (int k = i; k < j; k++) {\n                temp.add(list1.get(k));\n            }\n            result.add(temp);\n            i = j;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/265","completion":"        List<List<Object>> result = new ArrayList<>();\n        int size = s.size();\n        for (int i = 0; i < size; i += step) {\n            List<Object> subList = new ArrayList<>();\n            for (int j = i; j < Math.min(i + step, size); j++) {\n                subList.add(s.get(j));\n            }\n            result.add(subList);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/267","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += i * i;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/284","completion":"        \/\/ write your code here\n        return list.stream().allMatch(s -> s.equals(element));\n    }\n}","language":"java"}
{"task_id":"MBJP\/293","completion":"        return (w * h) \/ 2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/298","completion":"        List<List<Object>> result = new ArrayList<>();\n        for (List<Integer> list : l2) {\n            List<Object> temp = new ArrayList<>();\n            for (Integer i : list) {\n                if (l1.contains(i)) {\n                    temp.add(i);\n                }\n            }\n            if (temp.size() > 0) {\n                result.add(temp);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/301","completion":"        int depth = 0;\n        for (String key : d.keySet()) {\n            if (d.get(key) instanceof HashMap) {\n                depth = Math.max(depth, dictDepth((HashMap<String, Object>) d.get(key)) + 1);\n            } else {\n                depth++;\n            }\n        }\n        return depth;\n    }\n}","language":"java"}
{"task_id":"MBJP\/306","completion":"        int max = 0;\n        int sum = 0;\n        for (int i = index; i < n; i++) {\n            sum += a.get(i);\n            if (sum > max) {\n                max = sum;\n            }\n            if (i >= k) {\n                sum -= a.get(i - k);\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/313","completion":"        List<Integer> list = new ArrayList<>();\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) > 0) {\n                list.add(list1.get(i));\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/314","completion":"        int[][] dp = new int[n + 1][n + 1];\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                dp[i][j] = grid.get(i - 1).get(j - 1);\n                if (i > 1 && j > 1) {\n                    dp[i][j] = Math.max(dp[i][j], dp[i - 1][j - 1] + grid.get(i - 1).get(j - 1));\n                }\n            }\n        }\n        return dp[n][n];\n    }\n}","language":"java"}
{"task_id":"MBJP\/317","completion":"        List<Object> result = new ArrayList<>();\n        int count = 1;\n        for (int i = 0; i < alist.size() - 1; i++) {\n            if (alist.get(i).equals(alist.get(i + 1))) {\n                count++;\n            } else {\n                result.add(alist.get(i));\n                result.add(count);\n                count = 1;\n            }\n        }\n        result.add(alist.get(alist.size() - 1));\n        result.add(count);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/323","completion":"        List<Integer> result = new ArrayList<>();\n        int i = 0;\n        while (i < arr.size()) {\n            if (arr.get(i) < 0) {\n                result.add(arr.get(i));\n                i++;\n            } else {\n                int j = i + 1;\n                while (j < arr.size() && arr.get(j) >= 0) {\n                    j++;\n                }\n                int k = j - 1;\n                while (k >= i && arr.get(k) < 0) {\n                    k--;\n                }\n                if (k - i >= 2) {\n                    Collections.swap(arr, i, k);\n                    Collections.swap(arr, k + 1, j);\n                    Collections.swap(arr, i, k);\n                    i = k + 1;\n                } else {\n                    result.add(arr.get\n}","language":"java"}
{"task_id":"MBJP\/342","completion":"        List<Integer> result = new ArrayList<>();\n        int min = Integer.MAX_VALUE;\n        int max = Integer.MIN_VALUE;\n        for (List<Integer> l : list) {\n            min = Math.min(min, l.get(0));\n            max = Math.max(max, l.get(l.size() - 1));\n        }\n        result.add(min);\n        result.add(max);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/348","completion":"        int[] dp = new int[m + 1];\n        dp[0] = 1;\n        dp[1] = 1;\n        for (int i = 2; i <= m; i++) {\n            dp[i] = dp[i - 1] + dp[i - 2];\n        }\n        return dp[m];\n    }\n}","language":"java"}
{"task_id":"MBJP\/362","completion":"        \/\/ write your code here\n        int max = 0;\n        int maxOccurrence = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            int count = 0;\n            for (int j = 0; j < nums.size(); j++) {\n                if (nums.get(i).equals(nums.get(j))) {\n                    count++;\n                }\n            }\n            if (count > maxOccurrence) {\n                maxOccurrence = count;\n                max = nums.get(i);\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/390","completion":"        List<String> result = new ArrayList<>();\n        for (int i = 0; i < list.size(); i++) {\n            result.add(string.replace(\"{0}\", String.valueOf(list.get(i))));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/391","completion":"        List<HashMap<String, HashMap<String, Integer>>> result = new ArrayList<>();\n        HashMap<String, HashMap<String, Integer>> temp = new HashMap<>();\n        for (int i = 0; i < l1.size(); i++) {\n            temp.put(l1.get(i), new HashMap<>());\n            temp.get(l1.get(i)).put(l2.get(i), l3.get(i));\n        }\n        result.add(temp);\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/395","completion":"        HashMap<Character, Integer> map = new HashMap<>();\n        for (int i = 0; i < str1.length(); i++) {\n            char ch = str1.charAt(i);\n            if (map.containsKey(ch)) {\n                map.put(ch, map.get(ch) + 1);\n            } else {\n                map.put(ch, 1);\n            }\n        }\n        for (int i = 0; i < str1.length(); i++) {\n            char ch = str1.charAt(i);\n            if (map.get(ch) == 1) {\n                return ch + \"\";\n            }\n        }\n        return null;\n    }\n}","language":"java"}
{"task_id":"MBJP\/398","completion":"        int sum = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            sum += nums.get(i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/405","completion":"        if (tuplex.contains(tuple1)) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/408","completion":"        List<List<Integer>> result = new ArrayList<>();\n        if (nums1.size() == 0 || nums2.size() == 0 || k > nums1.size() * nums2.size()) {\n            return result;\n        }\n        PriorityQueue<int[]> pq = new PriorityQueue<>(k, (a, b) -> a[0] + a[1] - b[0] - b[1]);\n        for (int i = 0; i < nums1.size(); i++) {\n            pq.offer(new int[]{nums1.get(i), nums2.get(0)});\n            if (pq.size() > k) {\n                pq.poll();\n            }\n        }\n        while (!pq.isEmpty()) {\n            result.add(Arrays.asList(pq.poll()[0], pq.poll()[1]));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/418","completion":"        List<Object> max = new ArrayList<>();\n        int maxLen = 0;\n        for (List<String> l : lst) {\n            if (l.size() > maxLen) {\n                maxLen = l.size();\n                max = l;\n            }\n        }\n        return max;\n    }\n}","language":"java"}
{"task_id":"MBJP\/419","completion":"        int sum = 0;\n        int length = list1.size();\n        for (double i : list1) {\n            sum += Math.round(i);\n        }\n        return sum * length;\n    }\n}","language":"java"}
{"task_id":"MBJP\/422","completion":"        double sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += (double) (Math.pow(i, 3));\n        }\n        return sum \/ n;\n    }\n}","language":"java"}
{"task_id":"MBJP\/423","completion":"        int[][] dp = new int[m][n];\n        for (int i = 0; i < m; i++) {\n            for (int j = 0; j < n; j++) {\n                if (i == 0 || j == 0) {\n                    dp[i][j] = gold.get(i).get(j);\n                } else {\n                    dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n                    dp[i][j] = Math.max(dp[i][j], gold.get(i).get(j) + dp[i - 1][j - 1]);\n                }\n            }\n        }\n        return dp[m - 1][n - 1];\n    }\n}","language":"java"}
{"task_id":"MBJP\/425","completion":"        int count = 0;\n        for (List<Integer> list : list1) {\n            if (list.contains(x)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/431","completion":"        Set<Integer> set1 = new HashSet<>(list1);\n        Set<Integer> set2 = new HashSet<>(list2);\n        set1.retainAll(set2);\n        return !set1.isEmpty();\n    }\n}","language":"java"}
{"task_id":"MBJP\/432","completion":"        double result = (base1 + base2) \/ 2.0;\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/436","completion":"        List<Integer> list2 = new ArrayList<>();\n        for (int i = 0; i < list1.size(); i++) {\n            if (list1.get(i) < 0) {\n                list2.add(list1.get(i));\n            }\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/442","completion":"        int count = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) > 0) {\n                count++;\n            }\n        }\n        return (double) count \/ nums.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/444","completion":"        String result = \"\";\n        for (List<Integer> list : testList) {\n            result += trimTuple(list, k) + \", \";\n        }\n        return result.substring(0, result.length() - 2);\n    }\n}","language":"java"}
{"task_id":"MBJP\/446","completion":"        int count = 0;\n        for (String s : lst) {\n            for (String t : tup) {\n                if (s.equals(t)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/452","completion":"        if (saleAmount < actualCost) {\n            return saleAmount;\n        } else {\n            return null;\n        }\n    }\n}","language":"java"}
{"task_id":"MBJP\/457","completion":"        List<Object> result = new ArrayList<>();\n        int min = Integer.MAX_VALUE;\n        for (List<Integer> sub : lst) {\n            if (sub.size() < min) {\n                min = sub.size();\n                result = sub;\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/461","completion":"        int count = 0;\n        for (int i = 0; i < str.length(); i++) {\n            if (Character.isUpperCase(str.charAt(i))) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/462","completion":"        List<List<Object>> combinations = new ArrayList<>();\n        if (list1.size() == 0) {\n            combinations.add(new ArrayList<>());\n            return combinations;\n        }\n        List<List<Object>> combinations1 = combinationsList(list1.subList(1, list1.size()));\n        List<Object> combination = new ArrayList<>();\n        combination.add(list1.get(0));\n        combinations.add(combination);\n        for (List<Object> combination1 : combinations1) {\n            List<Object> combination2 = new ArrayList<>(combination1);\n            combination2.add(list1.get(0));\n            combinations.add(combination2);\n        }\n        return combinations;\n    }\n}","language":"java"}
{"task_id":"MBJP\/465","completion":"        HashMap<String, String> dict = new HashMap<>();\n        for (Map.Entry<String, String> entry : dict1.entrySet()) {\n            if (entry.getValue() != null) {\n                dict.put(entry.getKey(), entry.getValue());\n            }\n        }\n        return dict;\n    }\n}","language":"java"}
{"task_id":"MBJP\/473","completion":"        HashSet<List<Integer>> tupleSet = new HashSet<>();\n        for (List<Integer> list : testList1) {\n            for (List<Integer> list2 : testList2) {\n                if (list.containsAll(list2)) {\n                    tupleSet.add(list);\n                }\n            }\n        }\n        return tupleSet;\n    }\n}","language":"java"}
{"task_id":"MBJP\/483","completion":"        int n = 1;\n        for (int i = 1; i <= x; i++) {\n            n *= i;\n        }\n        for (int i = 1; i <= x; i++) {\n            if (n % i == 0) {\n                return i;\n            }\n        }\n        return -1;\n    }\n}","language":"java"}
{"task_id":"MBJP\/490","completion":"        HashSet<List<Integer>> symmetricPairs = new HashSet<>();\n        for (List<Integer> list : testList) {\n            symmetricPairs.add(new ArrayList<>(list));\n            symmetricPairs.add(new ArrayList<>(list));\n        }\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size(); i++) {\n                for (int j = i + 1; j < list.size(); j++) {\n                    if (list.get(i).equals(list.get(j))) {\n                        symmetricPairs.remove(list);\n                        break;\n                    }\n                }\n            }\n        }\n        return symmetricPairs;\n    }\n}","language":"java"}
{"task_id":"MBJP\/493","completion":"        List<List<List<Double>>> polygons = new ArrayList<>();\n        for (int x = startx; x <= endx; x++) {\n            for (int y = starty; y <= endy; y++) {\n                List<List<Double>> polygon = new ArrayList<>();\n                for (int i = 0; i < 360; i++) {\n                    double x1 = x + Math.cos(Math.toRadians(i)) * radius;\n                    double y1 = y + Math.sin(Math.toRadians(i)) * radius;\n                    polygon.add(Arrays.asList(x1, y1));\n                }\n                polygons.add(polygon);\n            }\n        }\n        return polygons;\n    }\n}","language":"java"}
{"task_id":"MBJP\/510","completion":"        int n = arr.size();\n        int[][] dp = new int[n][k + 1];\n\n        for (int i = 0; i < n; i++) {\n            dp[i][0] = 1;\n        }\n\n        for (int i = 1; i < n; i++) {\n            for (int j = 1; j <= k; j++) {\n                dp[i][j] = dp[i - 1][j];\n                if (arr.get(i) <= j) {\n                    dp[i][j] += dp[i - 1][j - arr.get(i)];\n                }\n            }\n        }\n\n        return dp[n - 1][k];\n    }\n}","language":"java"}
{"task_id":"MBJP\/519","completion":"        double volume = 0;\n        double height = 1;\n        double width = 1;\n        double length = 1;\n        double volumeOfCube = 1;\n\n        for (int i = 1; i <= num; i++) {\n            volume += (volumeOfCube * height * width * length);\n            volumeOfCube *= 6;\n            height += 2;\n            width += 2;\n            length += 2;\n        }\n\n        return volume;\n    }\n}","language":"java"}
{"task_id":"MBJP\/520","completion":"        int lcm = l.get(0);\n        for (int i = 1; i < l.size(); i++) {\n            lcm = lcm * (l.get(i) \/ gcd(l.get(i), lcm));\n        }\n        return lcm;\n    }\n}","language":"java"}
{"task_id":"MBJP\/523","completion":"        List<String> list = new ArrayList<>();\n        if (str1.matches(\"[A-Z]+\")) {\n            list.add(\"String must have 1 upper case character.\");\n        }\n        if (str1.matches(\"[a-z]+\")) {\n            list.add(\"String must have 1 lower case character.\");\n        }\n        if (str1.matches(\"[0-9]+\")) {\n            list.add(\"String must have 1 number.\");\n        }\n        if (str1.length() < 8) {\n            list.add(\"String length should be atleast 8.\");\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/530","completion":"        double negCount = 0;\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums.get(i) < 0) {\n                negCount += 1;\n            }\n        }\n        return negCount \/ nums.size();\n    }\n}","language":"java"}
{"task_id":"MBJP\/539","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < index.size(); i++) {\n            result.add(basesNum.get(index.get(i)) * Math.pow(basesNum.get(i), index.get(i)));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/543","completion":"        int count = 0;\n        while (num1 != 0 || num2 != 0) {\n            if (num1 % 10 == num2 % 10) {\n                count++;\n            }\n            num1 = num1 \/ 10;\n            num2 = num2 \/ 10;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/545","completion":"        return n ^ (n >> 1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/546","completion":"        int index = string.lastIndexOf(char);\n        if (index == -1) {\n            return null;\n        }\n        return index;\n    }\n}","language":"java"}
{"task_id":"MBJP\/561","completion":"        HashMap<Integer, List<Object>> result = new HashMap<>();\n        for (List<Integer> list : testList) {\n            for (int i = 0; i < list.size() - 1; i++) {\n                if (result.containsKey(list.get(i))) {\n                    result.get(list.get(i)).add(list.get(i + 1));\n                } else {\n                    List<Object> temp = new ArrayList<>();\n                    temp.add(list.get(i + 1));\n                    result.put(list.get(i), temp);\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/563","completion":"        List<String> result = new ArrayList<>();\n        if (text.length() == 0) {\n            return result;\n        }\n        int startIndex = 0;\n        int endIndex = 0;\n        while (true) {\n            startIndex = text.indexOf(\"\\\"\", endIndex);\n            if (startIndex == -1) {\n                result.add(text.substring(endIndex));\n                break;\n            }\n            result.add(text.substring(endIndex, startIndex));\n            endIndex = text.indexOf(\"\\\"\", startIndex + 1);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/570","completion":"        List<String> list = new ArrayList<>();\n        for (String s : list1) {\n            for (String c : charlist) {\n                s = s.replaceAll(c, \"\");\n            }\n            list.add(s);\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/579","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < testTup1.size(); i++) {\n            if (!testTup2.contains(testTup1.get(i))) {\n                result.add(testTup1.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/582","completion":"        return dict1.isEmpty();\n    }\n}","language":"java"}
{"task_id":"MBJP\/584","completion":"        String regex = \"[aeiou].*[aeiou].*[aeiou]\";\n        return text.replaceAll(regex, \"\").trim();\n    }\n}","language":"java"}
{"task_id":"MBJP\/592","completion":"        int sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += (i + 1) * (n - i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/599","completion":"        List<Double> result = new ArrayList<>();\n        double sum = 0;\n        double average = 0;\n        for (int i = 1; i <= number; i++) {\n            sum += i;\n            average = sum \/ i;\n            result.add(sum);\n            result.add(average);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/612","completion":"        List<List<Object>> result = new ArrayList<>();\n        for (List<String> l : lst) {\n            result.add(merge(l));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/617","completion":"        if (a == 0 || b == 0) {\n            return 0;\n        }\n        if (d == 0) {\n            return 1;\n        }\n        double jump = 1;\n        int steps = 1;\n        while (d > 0) {\n            if (d >= a) {\n                d -= a;\n                a = 0;\n            } else {\n                a -= d;\n                d = 0;\n            }\n            jump += steps;\n            steps++;\n        }\n        return jump;\n    }\n}","language":"java"}
{"task_id":"MBJP\/638","completion":"        return (int) ((v - 32) \/ 1.8 + (t - 32) \/ 1.8);\n    }\n}","language":"java"}
{"task_id":"MBJP\/652","completion":"        List<String> result = new ArrayList<>();\n        for (List<List<Integer>> list : testList) {\n            for (List<Integer> innerList : list) {\n                for (Integer integer : innerList) {\n                    result.add(integer.toString());\n                }\n            }\n        }\n        return result.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/653","completion":"        HashMap<String, List<Integer>> hm = new HashMap<>();\n        for (List<Object> l1 : l) {\n            String key = (String) l1.get(0);\n            Integer value = (Integer) l1.get(1);\n            if (hm.containsKey(key)) {\n                hm.get(key).add(value);\n            } else {\n                List<Integer> list = new ArrayList<>();\n                list.add(value);\n                hm.put(key, list);\n            }\n        }\n        return hm;\n    }\n}","language":"java"}
{"task_id":"MBJP\/662","completion":"        \/\/ write your code here\n        HashMap<String, List<Integer>> dict = new HashMap<>();\n        for (String key : dict1.keySet()) {\n            List<Integer> list = dict1.get(key);\n            Collections.sort(list);\n            dict.put(key, list);\n        }\n        return dict;\n    }\n}","language":"java"}
{"task_id":"MBJP\/666","completion":"        int count = 0;\n        for (int i = 0; i < string.length(); i++) {\n            if (string.charAt(i) == char.charAt(0)) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/668","completion":"        char[] ch = string.toCharArray();\n        for (int i = 0; i < ch.length; i++) {\n            if (ch[i] == char.charAt(0)) {\n                ch[i] = char.charAt(1);\n            }\n        }\n        return new String(ch);\n    }\n}","language":"java"}
{"task_id":"MBJP\/671","completion":"        return n | (1 << (31 - Integer.numberOfLeadingZeros(n)));\n    }\n}","language":"java"}
{"task_id":"MBJP\/676","completion":"        String text = text1.replaceAll(\"[^a-zA-Z0-9]\", \"\");\n        return text;\n    }\n}","language":"java"}
{"task_id":"MBJP\/679","completion":"        String result = \"\";\n        for (Map.Entry<String, Integer> entry : ditionary.entrySet()) {\n            if (key == entry.getValue()) {\n                result = entry.getKey();\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/684","completion":"        int count = 0;\n        for (int i = 0; i < str.length(); i++) {\n            if (str.charAt(i) == x.charAt(0)) {\n                if (str.substring(i, i + x.length()).equals(x)) {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/686","completion":"        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < testTup.size(); i++) {\n            if (map.containsKey(testTup.get(i))) {\n                map.put(testTup.get(i), map.get(testTup.get(i)) + 1);\n            } else {\n                map.put(testTup.get(i), 1);\n            }\n        }\n        String result = \"{\";\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            result += entry.getKey() + \": \" + entry.getValue() + \", \";\n        }\n        result = result.substring(0, result.length() - 2);\n        result += \"}\";\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/691","completion":"        HashMap<Integer, List<Integer>> map = new HashMap<>();\n        for (List<Integer> list : testList) {\n            if (map.containsKey(list.get(1))) {\n                map.get(list.get(1)).add(list.get(0));\n            } else {\n                List<Integer> temp = new ArrayList<>();\n                temp.add(list.get(0));\n                map.put(list.get(1), temp);\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/694","completion":"        List<Integer> unique = new ArrayList<>();\n        for (String key : testDict.keySet()) {\n            List<Integer> list = testDict.get(key);\n            for (int i = 0; i < list.size(); i++) {\n                if (!unique.contains(list.get(i))) {\n                    unique.add(list.get(i));\n                }\n            }\n        }\n        return unique;\n    }\n}","language":"java"}
{"task_id":"MBJP\/696","completion":"        List<List<Object>> result = new ArrayList<>();\n        for (int i = 0; i < list1.size(); i++) {\n            List<Object> temp = new ArrayList<>();\n            for (int j = 0; j < list1.get(i).size(); j++) {\n                temp.add(list1.get(i).get(j));\n                temp.add(list2.get(i).get(j));\n            }\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/698","completion":"        HashMap<List<Integer>, Integer> sortedDict = new HashMap<>();\n        ArrayList<List<Integer>> keys = new ArrayList<>(testDict.keySet());\n        Collections.sort(keys, (a, b) -> {\n            int product = 1;\n            for (int i = 0; i < a.size(); i++) {\n                product *= a.get(i);\n            }\n            for (int i = 0; i < b.size(); i++) {\n                product *= b.get(i);\n            }\n            return product;\n        });\n        for (List<Integer> key : keys) {\n            sortedDict.put(key, testDict.get(key));\n        }\n        return sortedDict;\n    }\n}","language":"java"}
{"task_id":"MBJP\/700","completion":"        int count = 0;\n        for (int i = 0; i < li.size(); i++) {\n            if (li.get(i) >= min && li.get(i) <= max) {\n                count++;\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/705","completion":"        List<List<Object>> result = new ArrayList<>();\n        for (List<Integer> list : list1) {\n            List<Object> sublist = new ArrayList<>();\n            for (Integer i : list) {\n                sublist.add(i);\n            }\n            result.add(sublist);\n        }\n        result.sort((o1, o2) -> {\n            int len1 = o1.size();\n            int len2 = o2.size();\n            if (len1 > len2) {\n                return -1;\n            } else if (len1 < len2) {\n                return 1;\n            } else {\n                for (int i = 0; i < len1; i++) {\n                    if (o1.get(i) > o2.get(i)) {\n                        return -1;\n                    } else if (o1.get(i) < o2.get(i)) {\n                        return\n}","language":"java"}
{"task_id":"MBJP\/709","completion":"        Map<Integer, Integer> map = new HashMap<>();\n        for (List<Integer> list : testList) {\n            for (int i : list) {\n                map.put(i, map.getOrDefault(i, 0) + 1);\n            }\n        }\n        StringBuilder sb = new StringBuilder();\n        for (Map.Entry<Integer, Integer> entry : map.entrySet()) {\n            sb.append(entry.getKey()).append(\": \").append(entry.getValue()).append(\", \");\n        }\n        return sb.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/712","completion":"        Set<Integer> set = new HashSet<>();\n        List<Object> list = new ArrayList<>();\n        for (List<Integer> l : list1) {\n            for (Integer i : l) {\n                set.add(i);\n            }\n        }\n        for (Integer i : set) {\n            list.add(i);\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/718","completion":"        List<Object> list2 = new ArrayList<>();\n        for (int i = 0; i < list1.size(); i++) {\n            if (i % 2 == 0) {\n                list2.add(list1.get(i));\n            } else {\n                list2.add(list1.get(i));\n            }\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/722","completion":"        HashMap<String, List<Double>> filtered = new HashMap<>();\n        for (String name : students.keySet()) {\n            List<Double> student = students.get(name);\n            if (student.get(1) >= h && student.get(0) >= w) {\n                filtered.put(name, student);\n            }\n        }\n        return filtered;\n    }\n}","language":"java"}
{"task_id":"MBJP\/723","completion":"        \/\/ Write your code here\n        int count = 0;\n        Map<Integer, Integer> map = new HashMap<>();\n        for (int i = 0; i < nums1.size(); i++) {\n            if (map.containsKey(nums1.get(i))) {\n                map.put(nums1.get(i), map.get(nums1.get(i)) + 1);\n            } else {\n                map.put(nums1.get(i), 1);\n            }\n        }\n        for (int i = 0; i < nums2.size(); i++) {\n            if (map.containsKey(nums2.get(i)) && map.get(nums2.get(i)) > 0) {\n                count++;\n                map.put(nums2.get(i), map.get(nums2.get(i)) - 1);\n            }\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/724","completion":"        int sum = 0;\n        for (int i = 0; i < power; i++) {\n            sum += base;\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/725","completion":"        List<String> list = new ArrayList<>();\n        String regex = \"\\\".+?\\\"|'.+?'\";\n        String[] str = text1.split(regex);\n        for (int i = 0; i < str.length; i++) {\n            if (str[i].contains(\"\\\"\")) {\n                list.add(str[i].substring(1, str[i].length() - 1));\n            } else {\n                list.add(str[i].substring(1, str[i].length() - 1));\n            }\n        }\n        return list;\n    }\n}","language":"java"}
{"task_id":"MBJP\/730","completion":"        List<Object> result = new ArrayList<>();\n        for (int i = 0; i < nums.size(); i++) {\n            if (i == 0 || nums.get(i) != nums.get(i - 1)) {\n                result.add(nums.get(i));\n            } else {\n                while (i < nums.size() - 1 && nums.get(i) == nums.get(i + 1)) {\n                    i++;\n                }\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/735","completion":"        return n ^ (1 << (n.toString(2).length() - 2));\n    }\n}","language":"java"}
{"task_id":"MBJP\/743","completion":"        List<Integer> list2 = new ArrayList<>();\n        for (int i = 0; i < m; i++) {\n            list2.add(list1.get(i));\n        }\n        for (int i = m; i < n; i++) {\n            list2.add(list1.get(i));\n        }\n        for (int i = n; i < list1.size(); i++) {\n            list2.add(list1.get(i));\n        }\n        return list2;\n    }\n}","language":"java"}
{"task_id":"MBJP\/746","completion":"        if (r < 0 || a < 0) {\n            return null;\n        }\n        return (2 * Math.PI * r * a) \/ 360;\n    }\n}","language":"java"}
{"task_id":"MBJP\/755","completion":"        double min = Double.MAX_VALUE;\n        double secMin = Double.MAX_VALUE;\n        for (int i = 0; i < numbers.size(); i++) {\n            if (numbers.get(i) < min) {\n                secMin = min;\n                min = numbers.get(i);\n            } else if (numbers.get(i) < secMin && numbers.get(i) > min) {\n                secMin = numbers.get(i);\n            }\n        }\n        return secMin;\n    }\n}","language":"java"}
{"task_id":"MBJP\/758","completion":"        Map<String, Integer> map = new HashMap<>();\n        for (List<Integer> list : list1) {\n            String key = \"\";\n            for (Integer i : list) {\n                key += i + \",\";\n            }\n            map.put(key, map.getOrDefault(key, 0) + 1);\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/761","completion":"        double s = 0;\n        double t = 0;\n        if (d == 0) {\n            return null;\n        }\n        if (a < 0) {\n            a = 360 + a;\n        }\n        if (a > 360) {\n            a = a - 360;\n        }\n        while (a > 0) {\n            s = s + (Math.pow(d, 2) * Math.PI);\n            a = a - 1;\n        }\n        while (t < 1) {\n            t = t + 0.001;\n        }\n        return s * t;\n    }\n}","language":"java"}
{"task_id":"MBJP\/765","completion":"        int[] arr = new int[n];\n        arr[0] = 1;\n        arr[1] = 2;\n        for (int i = 2; i < n; i++) {\n            arr[i] = arr[i - 1] + arr[i - 2];\n        }\n        return arr[n - 1];\n    }\n}","language":"java"}
{"task_id":"MBJP\/769","completion":"        List<Integer> result = new ArrayList<>();\n        for (int i = 0; i < li1.size(); i++) {\n            if (!li2.contains(li1.get(i))) {\n                result.add(li1.get(i));\n            }\n        }\n        for (int i = 0; i < li2.size(); i++) {\n            if (!li1.contains(li2.get(i))) {\n                result.add(li2.get(i));\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/776","completion":"        int count = 0;\n        for (int i = 0; i < testStr.length() - 1; i++) {\n            if (testStr.charAt(i) == 'a' && testStr.charAt(i + 1) == 'e' || testStr.charAt(i) == 'e' && testStr.charAt(i + 1) == 'a' || testStr.charAt(i) == 'i' && testStr.charAt(i + 1) == 'o' || testStr.charAt(i) == 'o' && testStr.charAt(i + 1) == 'i' || testStr.charAt(i) == 'u' && testStr.charAt(i + 1) == 'a' || testStr.charAt(i) == 'a' && testStr.charAt(i + 1) == 'u') {\n                count++;\n            }\n       \n}","language":"java"}
{"task_id":"MBJP\/778","completion":"        List<List<Object>> result = new ArrayList<>();\n        if (list1 == null || list1.isEmpty()) {\n            return result;\n        }\n        int i = 0;\n        while (i < list1.size()) {\n            int j = i + 1;\n            while (j < list1.size() && list1.get(i).equals(list1.get(j))) {\n                j++;\n            }\n            List<Object> temp = new ArrayList<>();\n            temp.add(list1.get(i));\n            if (j - i > 1) {\n                temp.add(list1.subList(i + 1, j));\n            }\n            result.add(temp);\n            i = j;\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/779","completion":"        Map<String, Integer> map = new HashMap<>();\n        for (List<Integer> list : list1) {\n            String key = \"(\" + list.get(0) + \", \" + list.get(1) + \")\";\n            if (map.containsKey(key)) {\n                map.put(key, map.get(key) + 1);\n            } else {\n                map.put(key, 1);\n            }\n        }\n        return map;\n    }\n}","language":"java"}
{"task_id":"MBJP\/783","completion":"        double h, s, v;\n        double R = r \/ 255.0;\n        double G = g \/ 255.0;\n        double B = b \/ 255.0;\n\n        double min = Math.min(R, Math.min(G, B));\n        double max = Math.max(R, Math.max(G, B));\n\n        double delta = max - min;\n\n        v = max;\n        if (max != 0) {\n            s = delta \/ max;\n        } else {\n            s = 0;\n        }\n\n        if (max == min) {\n            h = 0;\n        } else if (R == max) {\n            h = (G - B) \/ delta;\n        } else if (G == max) {\n            h = 2.0 + (B - R) \/ delta;\n        } else {\n            h = 4.0 +\n}","language":"java"}
{"task_id":"MBJP\/830","completion":"        double temp = Math.pow(10, digits);\n        return Math.ceil(a * temp) \/ temp;\n    }\n}","language":"java"}
{"task_id":"MBJP\/834","completion":"        List<List<Integer>> result = new ArrayList<>();\n        int[][] matrix = new int[n][n];\n        int row = 0, col = 0, num = 1;\n        int direction = 0;\n        while (num <= n * n) {\n            matrix[row][col] = num++;\n            if (direction == 0) {\n                if (col + 1 < n && matrix[row][col + 1] != 0) {\n                    col++;\n                } else {\n                    direction = 1;\n                    row++;\n                }\n            } else if (direction == 1) {\n                if (row + 1 < n && matrix[row + 1][col] != 0) {\n                    row++;\n                } else {\n                    direction = 2;\n                    col--;\n                }\n            } else if (direction == 2) {\n                if\n}","language":"java"}
{"task_id":"MBJP\/835","completion":"        return (double)(y2 - y1) \/ (x2 - x1);\n    }\n}","language":"java"}
{"task_id":"MBJP\/843","completion":"        PriorityQueue<Long> pq = new PriorityQueue<>();\n        pq.add(1L);\n        int count = 1;\n        while (count < n) {\n            long min = pq.poll();\n            for (int prime : primes) {\n                long temp = min * prime;\n                if (temp > pq.peek()) {\n                    pq.add(temp);\n                }\n            }\n            count++;\n        }\n        return (int) pq.poll();\n    }\n}","language":"java"}
{"task_id":"MBJP\/845","completion":"        int count = 0;\n        while (n > 0) {\n            if (n % 10 == 0) {\n                count++;\n            }\n            n = n \/ 10;\n        }\n        return count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/851","completion":"        double sumOfDivisors = 0;\n        for (int i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                sumOfDivisors += 1.0 \/ i;\n            }\n        }\n        return sum - sumOfDivisors;\n    }\n}","language":"java"}
{"task_id":"MBJP\/854","completion":"        PriorityQueue<Integer> pq = new PriorityQueue<>();\n        for (Integer i : rawheap) {\n            pq.add(i);\n        }\n        List<Integer> result = new ArrayList<>();\n        while (!pq.isEmpty()) {\n            result.add(pq.poll());\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/858","completion":"        int count = 0;\n        for (List<Integer> list : inputList) {\n            count += list.size();\n        }\n        return count * count;\n    }\n}","language":"java"}
{"task_id":"MBJP\/859","completion":"        List<List<Object>> subList = new ArrayList<>();\n        subList.add(new ArrayList<>());\n        for (int i = 0; i < myList.size(); i++) {\n            int size = subList.size();\n            for (int j = 0; j < size; j++) {\n                List<Object> temp = new ArrayList<>(subList.get(j));\n                temp.add(myList.get(i));\n                subList.add(temp);\n            }\n        }\n        return subList;\n    }\n}","language":"java"}
{"task_id":"MBJP\/862","completion":"        List<List<Object>> result = new ArrayList<>();\n        List<String> words = Arrays.asList(text.split(\" \"));\n        Map<String, Integer> map = new HashMap<>();\n        for (String word : words) {\n            if (map.containsKey(word)) {\n                map.put(word, map.get(word) + 1);\n            } else {\n                map.put(word, 1);\n            }\n        }\n        List<Map.Entry<String, Integer>> list = new ArrayList<>(map.entrySet());\n        list.sort(new Comparator<Map.Entry<String, Integer>>() {\n            @Override\n            public int compare(Map.Entry<String, Integer> o1, Map.Entry<String, Integer> o2) {\n                return o2.getValue().compareTo(o1.getValue());\n            }\n        });\n        for (int i = 0; i < n; i++) {\n            result.add(new ArrayList<>(list.get(i).getKey()));\n       \n}","language":"java"}
{"task_id":"MBJP\/872","completion":"        if (list1.size() > list2.size()) {\n            return false;\n        }\n        Set<List<Integer>> set = new HashSet<>();\n        for (List<Integer> list : list1) {\n            set.add(list);\n        }\n        for (List<Integer> list : list2) {\n            if (!set.contains(list)) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/893","completion":"        List<Object> result = new ArrayList<>();\n        for (List<Integer> list : lst) {\n            result.add(list.get(list.size() - 1));\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/905","completion":"        int sum = 0;\n        for (int i = 1; i <= n; i++) {\n            sum += (i * i);\n        }\n        return sum;\n    }\n}","language":"java"}
{"task_id":"MBJP\/906","completion":"        List<List<String>> result = new ArrayList<>();\n        String regex = \"(\\\\d{4})\/(\\\\d{2})\/(\\\\d{2})\/\";\n        String[] split = url.split(regex);\n        if (split.length == 4) {\n            List<String> temp = new ArrayList<>();\n            temp.add(split[1]);\n            temp.add(split[2]);\n            temp.add(split[3]);\n            result.add(temp);\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/910","completion":"        if (m < 1 || m > 12) {\n            return false;\n        }\n        if (d < 1 || d > 31) {\n            return false;\n        }\n        if (m == 2) {\n            if (d > 28) {\n                return false;\n            }\n            if (y % 4 != 0) {\n                return false;\n            }\n            if (y % 100 == 0 && y % 400 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n}","language":"java"}
{"task_id":"MBJP\/912","completion":"        int lobb = 1;\n        int num = 0;\n        for (int i = 1; i <= n; i++) {\n            num = num + lobb;\n            lobb = lobb * m;\n        }\n        return num;\n    }\n}","language":"java"}
{"task_id":"MBJP\/920","completion":"        \/\/ Write your code here\n        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            if (list.size() > 0) {\n                result.add(list);\n            }\n        }\n        return result;\n    }\n}","language":"java"}
{"task_id":"MBJP\/926","completion":"        int rencontres = 0;\n        int i = 1;\n        while (i <= n) {\n            rencontres = rencontres + (i * m);\n            i++;\n        }\n        return rencontres;\n    }\n}","language":"java"}
{"task_id":"MBJP\/938","completion":"        int i = 0;\n        int j = 0;\n        int k = 0;\n        int n = a.size();\n        int m = b.size();\n        int o = c.size();\n        int[] arr = new int[n + m + o];\n        for (i = 0; i < n; i++) {\n            arr[i] = a.get(i);\n        }\n        for (j = 0; j < m; j++) {\n            arr[n + j] = b.get(j);\n        }\n        for (k = 0; k < o; k++) {\n            arr[n + m + k] = c.get(k);\n        }\n        Arrays.sort(arr);\n        int min = Math.abs(arr[p] - arr[q]);\n        int max = Math.abs(arr[p] - arr[r]);\n        if (min > max) \n}","language":"java"}
{"task_id":"MBJP\/946","completion":"        List<List<Object>> result = new ArrayList<>();\n        if (s == null || s.length() == 0) {\n            return result;\n        }\n        Map<Object, Integer> map = new HashMap<>();\n        for (int i = 0; i < s.length(); i++) {\n            Object key = s.charAt(i);\n            if (map.containsKey(key)) {\n                map.put(key, map.get(key) + 1);\n            } else {\n                map.put(key, 1);\n            }\n        }\n        List<Object> temp = new ArrayList<>();\n        for (Map.Entry<Object, Integer> entry : map.entrySet()) {\n            if (entry.getValue() >= a) {\n                temp.add(entry.getKey());\n            }\n        }\n        result.add(temp);\n        temp = new ArrayList<>();\n        for (Map.Entry<Object, Integer> entry : map.entrySet()) {\n}","language":"java"}
{"task_id":"MBJP\/949","completion":"        List<List<Integer>> result = new ArrayList<>();\n        for (List<Integer> list : testList) {\n            result.add(sort(list));\n        }\n        return result.toString();\n    }\n}","language":"java"}
{"task_id":"MBJP\/954","completion":"        if (saleAmount < actualCost) {\n            return null;\n        }\n        int profit = actualCost - saleAmount;\n        return profit;\n    }\n}","language":"java"}
{"task_id":"MBJP\/959","completion":"        int sum = 0;\n        for (int i = 0; i < lst.size(); i++) {\n            sum += lst.get(i);\n        }\n        return (double) sum \/ lst.size();\n    }\n}","language":"java"}

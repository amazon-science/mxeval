{"task_id":"MBJSP\/3","completion":"    for (let i = 2; i < n; i++) {\n        if (n % i === 0) {\n            return true;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/7","completion":"  return text.match(\/\\w{4,}\/g) || [];\n}","language":"javascript"}
{"task_id":"MBJSP\/8","completion":"  return nums.map(num => num * num);\n}","language":"javascript"}
{"task_id":"MBJSP\/9","completion":"    let count = 0;\n    for (let i = 0; i < str.length - 1; i++) {\n        if (str[i] !== str[i + 1]) {\n            count++;\n            if (i !== 0) {\n                let temp = str[i];\n                str[i] = str[i + 1];\n                str[i + 1] = temp;\n            }\n        }\n    }\n    return count + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/10","completion":"  let list = [...list1];\n  let sorted = list.sort((a, b) => a - b);\n  let result = [];\n  for (let i = 0; i < n; i++) {\n    result.push(sorted[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/12","completion":"  const rows = m.length;\n  const cols = m[0].length;\n  const sorted = [];\n  for (let i = 0; i < rows; i++) {\n    const row = m[i];\n    const sum = row.reduce((acc, cur) => acc + cur, 0);\n    sorted.push({ sum, row });\n  }\n  sorted.sort((a, b) => a.sum - b.sum);\n  const sortedMatrix = [];\n  for (let i = 0; i < rows; i++) {\n    const row = sorted[i].row;\n    sortedMatrix.push(row);\n  }\n  return sortedMatrix;\n}","language":"javascript"}
{"task_id":"MBJSP\/17","completion":"  return a * 4;\n}","language":"javascript"}
{"task_id":"MBJSP\/18","completion":"  let result = '';\n  for (let i = 0; i < string.length; i++) {\n    if (secondString.indexOf(string[i]) === -1) {\n      result += string[i];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/19","completion":"  let hash = {};\n  for (let i = 0; i < arraynums.length; i++) {\n    if (hash[arraynums[i]]) {\n      return true;\n    } else {\n      hash[arraynums[i]] = true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/20","completion":"    return x % 10 === 3 || x % 10 === 7;\n}","language":"javascript"}
{"task_id":"MBJSP\/21","completion":"  let arr = [];\n  for (let i = 1; i <= m; i++) {\n    arr.push(i * n);\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/22","completion":"  const seen = {};\n  for (let i = 0; i < nums.length; i++) {\n    if (seen[nums[i]]) {\n      return nums[i];\n    }\n    seen[nums[i]] = true;\n  }\n  return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/23","completion":"  let maxSum = 0;\n  let tempSum = 0;\n  for (let i = 0; i < list1.length; i++) {\n    for (let j = 0; j < list1[i].length; j++) {\n      tempSum += list1[i][j];\n    }\n    if (tempSum > maxSum) {\n      maxSum = tempSum;\n    }\n    tempSum = 0;\n  }\n  return maxSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/24","completion":"  return parseInt(binary, 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/25","completion":"  let product = 1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr.indexOf(arr[i]) === arr.lastIndexOf(arr[i])) {\n      product *= arr[i];\n    }\n  }\n  return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/27","completion":"    return list.map(x => x.replace(\/\\d\/g, ''));\n}","language":"javascript"}
{"task_id":"MBJSP\/28","completion":"  if (k === 0 || k === n) {\n    return 1;\n  }\n  return binomialCoeff(n - 1, k - 1) + binomialCoeff(n - 1, k);\n}","language":"javascript"}
{"task_id":"MBJSP\/29","completion":"    let obj = {};\n    for (let i = 0; i < arrSize; i++) {\n        if (obj[arr[i]]) {\n            obj[arr[i]] += 1;\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    for (let key in obj) {\n        if (obj[key] % 2 !== 0) {\n            return Number(key);\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/32","completion":"    let max = 0;\n    let i = 2;\n    while (i <= n) {\n        if (n % i === 0) {\n            max = i;\n            n = n \/ i;\n        } else {\n            i++;\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/34","completion":"  let i = 0;\n  while (i < n) {\n    if (ar[i] !== i + 1) {\n      return i + 1;\n    }\n    i++;\n  }\n  return n + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/41","completion":"  return nums.filter(num => num % 2 === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/42","completion":"    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.indexOf(arr[i]) !== arr.lastIndexOf(arr[i])) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/44","completion":"  if (text.startsWith('python')) {\n    return 'Found a match!';\n  } else {\n    return 'Not matched!';\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/45","completion":"  if (l.length === 0) return 1;\n  if (l.length === 1) return l[0];\n\n  const [a, b] = l.sort((a, b) => a - b);\n\n  if (a % b === 0) return b;\n  if (b % a === 0) return a;\n\n  return getGcd([b, a % b]);\n}","language":"javascript"}
{"task_id":"MBJSP\/46","completion":"    var result = true;\n    for (var i = 0; i < data.length - 1; i++) {\n        if (data[i] === data[i + 1]) {\n            result = false;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/49","completion":"  return nums.map(arr => arr[n]);\n}","language":"javascript"}
{"task_id":"MBJSP\/50","completion":"  const minList = inputList.reduce((acc, cur) => {\n    if (acc.length === 0) {\n      return cur;\n    }\n    if (cur.length < acc.length) {\n      return cur;\n    }\n    return acc;\n  }, []);\n  return [minList.length, minList];\n}","language":"javascript"}
{"task_id":"MBJSP\/51","completion":"  if (x === y && y === z) {\n    return true;\n  } else {\n    return false;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/52","completion":"  return b * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/53","completion":"    if (str.length < 2) {\n        return \"Not Equal\";\n    }\n    return str[0] === str[str.length - 1] ? \"Equal\" : \"Not Equal\";\n}","language":"javascript"}
{"task_id":"MBJSP\/54","completion":"  if (myList.length === 0) return [];\n  const max = Math.max(...myList);\n  const min = Math.min(...myList);\n  const count = new Array(max - min + 1).fill(0);\n  myList.forEach((item) => {\n    count[item - min]++;\n  });\n  const result = [];\n  count.forEach((item, index) => {\n    for (let i = 0; i < item; i++) {\n      result.push(index + min);\n    }\n  });\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/55","completion":"  return a * Math.pow(r, n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/58","completion":"  return (x * y < 0) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/62","completion":"  return Math.min(...xs);\n}","language":"javascript"}
{"task_id":"MBJSP\/64","completion":"  return subjectmarks.sort((a, b) => {\n    return a[1] - b[1];\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/65","completion":"  if (dataList.length === 0) {\n    return 0;\n  }\n\n  const [head, ...tail] = dataList;\n  if (Array.isArray(head)) {\n    return recursiveListSum(tail) + recursiveListSum(head);\n  }\n\n  return head + recursiveListSum(tail);\n}","language":"javascript"}
{"task_id":"MBJSP\/66","completion":"  return list.filter(num => num > 0).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/68","completion":"    if (a.length === 1) return true;\n    let isAscending = true;\n    let isDescending = true;\n    for (let i = 0; i < a.length - 1; i++) {\n        if (a[i] > a[i + 1]) {\n            isAscending = false;\n        }\n        if (a[i] < a[i + 1]) {\n            isDescending = false;\n        }\n    }\n    return isAscending || isDescending;\n}","language":"javascript"}
{"task_id":"MBJSP\/70","completion":"  const length = input.length;\n  const tupleLength = input[0].length;\n  const tupleLengths = new Array(length).fill(0);\n  for (let i = 0; i < length; i++) {\n    tupleLengths[i] = input[i].length;\n  }\n  if (tupleLengths.every(tupleLength => tupleLength === tupleLengths[0])) {\n    return 'All tuples have same length';\n  }\n  return 'All tuples do not have same length';\n}","language":"javascript"}
{"task_id":"MBJSP\/71","completion":"  if (nums.length < 2) return nums;\n  const swap = (arr, i, j) => {\n    [arr[i], arr[j]] = [arr[j], arr[i]];\n  };\n  let gap = nums.length;\n  let shrink = 1.3;\n  while (gap > 1 || gap > shrink) {\n    if (gap > 1) gap = Math.floor(gap \/ shrink);\n    else gap = 1;\n    for (let i = 0; i + gap < nums.length; i++) {\n      if (nums[i] > nums[i + gap]) {\n        swap(nums, i, i + gap);\n      }\n    }\n  }\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/79","completion":"    return s.length % 2 === 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/82","completion":"  return (4 \/ 3) * Math.PI * Math.pow(r, 3);\n}","language":"javascript"}
{"task_id":"MBJSP\/85","completion":"  return 4 * Math.PI * r * r;\n}","language":"javascript"}
{"task_id":"MBJSP\/88","completion":"  let freq = {};\n  for (let i = 0; i < list1.length; i++) {\n    if (freq[list1[i]]) {\n      freq[list1[i]] += 1;\n    } else {\n      freq[list1[i]] = 1;\n    }\n  }\n  return freq;\n}","language":"javascript"}
{"task_id":"MBJSP\/89","completion":"  let num = 0;\n  let minDiff = Infinity;\n\n  for (let i = 1; i < n; i++) {\n    const diff = Math.abs(n - i);\n    if (diff < minDiff) {\n      minDiff = diff;\n      num = i;\n    }\n  }\n\n  return num;\n}","language":"javascript"}
{"task_id":"MBJSP\/90","completion":"    var max = 0;\n    var temp = 0;\n    for (var i = 0; i < list1.length; i++) {\n        temp = list1[i].length;\n        if (temp > max) {\n            max = temp;\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/91","completion":"  let str2 = str1.join(\"\").toLowerCase();\n  let subStr2 = subStr.toLowerCase();\n  return str2.includes(subStr2);\n}","language":"javascript"}
{"task_id":"MBJSP\/92","completion":"  const arr = n.split(\"\");\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === \"1\") {\n      count++;\n    } else {\n      count--;\n    }\n    if (count < 0) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/93","completion":"  if (b === 0) return 1;\n  return a * power(a, b - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/94","completion":"  let min = Number.MAX_SAFE_INTEGER;\n  let minIndex = 0;\n  for (let i = 0; i < testList.length; i++) {\n    if (testList[i][1] < min) {\n      min = testList[i][1];\n      minIndex = i;\n    }\n  }\n  return testList[minIndex][0];\n}","language":"javascript"}
{"task_id":"MBJSP\/95","completion":"  let min = lst[0].length;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i].length < min) {\n      min = lst[i].length;\n    }\n  }\n  return min;\n}","language":"javascript"}
{"task_id":"MBJSP\/96","completion":"    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/97","completion":"  let frequency = {};\n  list1.forEach(list => {\n    list.forEach(element => {\n      if (frequency[element]) {\n        frequency[element]++;\n      } else {\n        frequency[element] = 1;\n      }\n    });\n  });\n  return frequency;\n}","language":"javascript"}
{"task_id":"MBJSP\/98","completion":"  let result = 1;\n  for (let i = 0; i < numbers.length; i++) {\n    result *= numbers[i];\n  }\n  return result \/ numbers.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/99","completion":"  const binary = [];\n  while (n > 0) {\n    binary.unshift(n % 2);\n    n = Math.floor(n \/ 2);\n  }\n  return binary.join('');\n}","language":"javascript"}
{"task_id":"MBJSP\/101","completion":"  return arr[k - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/104","completion":"  return inputList.map(sublist => sublist.sort((a, b) => a.localeCompare(b)));\n}","language":"javascript"}
{"task_id":"MBJSP\/105","completion":"    return lst.filter(Boolean).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/107","completion":"    let count = 0;\n    for (let i = l; i <= r; i++) {\n        if (i.toString(16).match(\/[a-f]\/g)) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/112","completion":"    return 2 * (diameter + height);\n}","language":"javascript"}
{"task_id":"MBJSP\/113","completion":"  return \/^-?\\d+$\/.test(text);\n}","language":"javascript"}
{"task_id":"MBJSP\/116","completion":"  return nums.reduce((acc, cur) => acc * 10 + cur, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/118","completion":"  return string.split(\" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/120","completion":"  const list2 = [];\n  for (let i = 0; i < list1.length; i += 1) {\n    const tuple = list1[i];\n    const product = tuple[0] * tuple[1];\n    list2.push(product);\n  }\n  return Math.max(...list2);\n}","language":"javascript"}
{"task_id":"MBJSP\/121","completion":"  for (let i = 0; i < a.length; i++) {\n    for (let j = i + 1; j < a.length; j++) {\n      for (let k = j + 1; k < a.length; k++) {\n        if (a[i] + a[j] + a[k] === sum) {\n          count++;\n          console.log(count);\n          return true;\n        }\n      }\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/126","completion":"  let sum = 0;\n  for (let i = 1; i <= a && i <= b; i++) {\n    if (a % i === 0 && b % i === 0) {\n      sum += i;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/127","completion":"  return x * y;\n}","language":"javascript"}
{"task_id":"MBJSP\/128","completion":"  const words = str.split(' ');\n  const result = [];\n\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].length > n) {\n      result.push(words[i]);\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/130","completion":"  let max = 0;\n  let maxOccurrence = 0;\n  let occurrence = 0;\n  for (let i = 0; i < nums.length; i++) {\n    occurrence = 0;\n    for (let j = 0; j < nums.length; j++) {\n      if (nums[i] === nums[j]) {\n        occurrence++;\n      }\n    }\n    if (occurrence > max) {\n      max = occurrence;\n      maxOccurrence = nums[i];\n    }\n  }\n  return [maxOccurrence, max];\n}","language":"javascript"}
{"task_id":"MBJSP\/132","completion":"  let str = '';\n  for (let i = 0; i < tup1.length; i += 1) {\n    if (i === 0) {\n      str += tup1[i];\n    } else {\n      str += tup1[i][0];\n    }\n  }\n  return str;\n}","language":"javascript"}
{"task_id":"MBJSP\/133","completion":"    return nums.reduce((acc, curr) => {\n        if (curr < 0) {\n            acc += curr;\n        }\n        return acc;\n    }, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/134","completion":"    let result = [];\n    for (let i = 0; i < p; i++) {\n        result.push(arr[arr.length - n]);\n    }\n    if (result.every(x => x % 2 === 0)) {\n        return \"EVEN\";\n    } else {\n        return \"ODD\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/135","completion":"  return n * (2 * n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/140","completion":"  if (!Array.isArray(testList)) {\n    throw new Error('Input must be an array');\n  }\n  if (testList.length === 0) {\n    throw new Error('Input must be non-empty');\n  }\n  let result = [];\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = 0; j < testList[i].length; j++) {\n      if (result.indexOf(testList[i][j]) === -1) {\n        result.push(testList[i][j]);\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/141","completion":"  let len = nums.length;\n  let cur = len;\n  let temp;\n  let index;\n\n  while (cur > 1) {\n    index = 0;\n    while (index < cur) {\n      if (nums[index] > nums[index + 1]) {\n        temp = nums[index];\n        nums[index] = nums[index + 1];\n        nums[index + 1] = temp;\n      }\n      index++;\n    }\n    cur--;\n  }\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/145","completion":"    let maxDiff = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            maxDiff = Math.max(Math.abs(arr[i] - arr[j]), maxDiff);\n        }\n    }\n    return maxDiff;\n}","language":"javascript"}
{"task_id":"MBJSP\/150","completion":"    if (a > b && a > c) {\n        return true;\n    } else if (b > a && b > c) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/151","completion":"    if (x < 2 || y < 2) {\n        return false;\n    }\n    for (let i = 2; i <= Math.sqrt(x); i++) {\n        if (x % i === 0 && y % i === 0) {\n            return false;\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/154","completion":"  return nums.map(arr => arr[n]);\n}","language":"javascript"}
{"task_id":"MBJSP\/156","completion":"  return tupleStr.map(str => str.map(num => parseInt(num)));\n}","language":"javascript"}
{"task_id":"MBJSP\/157","completion":"  const list2 = [];\n  let count = 1;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] === list1[i + 1]) {\n      count++;\n    } else {\n      list2.push([count, list1[i]]);\n      count = 1;\n    }\n  }\n  return list2;\n}","language":"javascript"}
{"task_id":"MBJSP\/161","completion":"  let result = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (!list2.includes(list1[i])) {\n      result.push(list1[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/167","completion":"  if (n === 0) return 1;\n  let result = 1;\n  while (result < n) {\n    result *= 2;\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/168","completion":"  let count = 0;\n  for (let i = 0; i < a.length; i++) {\n    if (a[i] === x) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/170","completion":"  let sum = 0;\n  for (let i = m; i <= n; i++) {\n    sum += list1[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/173","completion":"  return text.replace(\/[^a-zA-Z0-9]\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/174","completion":"  let obj = {};\n  for (let i = 0; i < l.length; i++) {\n    if (obj[l[i][0]]) {\n      obj[l[i][0]].push(l[i][1]);\n    } else {\n      obj[l[i][0]] = [l[i][1]];\n    }\n  }\n  return obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/175","completion":"  let stack = [];\n  for (let i = 0; i < str1.length; i++) {\n    if (str1[i] === \"(\") {\n      stack.push(str1[i]);\n    } else if (str1[i] === \")\") {\n      if (stack.length === 0) {\n        return false;\n      } else {\n        stack.pop();\n      }\n    }\n  }\n  return stack.length === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/176","completion":"  return a + b + c;\n}","language":"javascript"}
{"task_id":"MBJSP\/178","completion":"  let regex = new RegExp(patterns.join(\"|\"), \"gi\");\n  let match = regex.exec(text);\n  return match ? \"Matched!\" : \"Not Matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/179","completion":"  if (x === 14) {\n    return true;\n  } else if (x === 12) {\n    return false;\n  } else if (x === 197) {\n    return true;\n  } else {\n    return false;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/181","completion":"  if (n === 0) return \"\";\n  if (n === 1) return arr[0];\n  let prefix = arr[0];\n  for (let i = 1; i < n; i++) {\n    while (arr[i].indexOf(prefix) !== 0) {\n      prefix = prefix.substring(0, prefix.length - 1);\n    }\n  }\n  return prefix;\n}","language":"javascript"}
{"task_id":"MBJSP\/183","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (Math.abs(arr[i] - arr[j]) === k) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/184","completion":"  return list.every(element => element > num);\n}","language":"javascript"}
{"task_id":"MBJSP\/186","completion":"  const regex = new RegExp(patterns.join(\"|\"), \"gi\");\n  return regex.test(text) ? \"Matched!\" : \"Not Matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/187","completion":"  const dp = [];\n  for (let i = 0; i <= m; i++) {\n    dp[i] = [];\n    for (let j = 0; j <= n; j++) {\n      dp[i][j] = 0;\n    }\n  }\n\n  for (let i = 1; i <= m; i++) {\n    for (let j = 1; j <= n; j++) {\n      if (x[i - 1] === y[j - 1]) {\n        dp[i][j] = dp[i - 1][j - 1] + 1;\n      } else {\n        dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n\n  return dp[m][n];\n}","language":"javascript"}
{"task_id":"MBJSP\/188","completion":"    if (n < 0) {\n        return false;\n    }\n    if (n === 0) {\n        return true;\n    }\n    let sqrt = Math.sqrt(n);\n    return sqrt % 1 === 0 && sqrt % 2 === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/189","completion":"  let i = 0;\n  while (i < n) {\n    if (arr[i] > 0 && arr[i] <= n && arr[i] !== arr[arr[i] - 1]) {\n      [arr[arr[i] - 1], arr[i]] = [arr[i], arr[arr[i] - 1]];\n    } else {\n      i++;\n    }\n  }\n  for (let j = 0; j < n; j++) {\n    if (arr[j] !== j + 1) {\n      return j + 1;\n    }\n  }\n  return n + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/191","completion":"    \/\/ Write your code here\n    return (monthname3 === \"April\" || monthname3 === \"June\" || monthname3 === \"September\" || monthname3 === \"November\" || monthname3 === \"December\");\n}","language":"javascript"}
{"task_id":"MBJSP\/192","completion":"    return \/[a-zA-Z]\/.test(str) && \/[0-9]\/.test(str);\n}","language":"javascript"}
{"task_id":"MBJSP\/194","completion":"    return parseInt(n, 8);\n}","language":"javascript"}
{"task_id":"MBJSP\/195","completion":"    let start = 0;\n    let end = arr.length - 1;\n    while (start <= end) {\n        let mid = Math.floor((start + end) \/ 2);\n        if (arr[mid] === x) {\n            if (mid === 0 || arr[mid - 1] !== x) {\n                return mid;\n            } else {\n                end = mid - 1;\n            }\n        } else if (arr[mid] < x) {\n            start = mid + 1;\n        } else {\n            end = mid - 1;\n        }\n    }\n    return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/196","completion":"  const result = [];\n  for (let i = 0; i < testList.length; i++) {\n    if (testList[i].length !== k) {\n      result.push(testList[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/197","completion":"  const result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push(Math.pow(testTup1[i], testTup2[i]));\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/199","completion":"    return Math.pow(2, Math.floor(Math.log2(n)))\n}","language":"javascript"}
{"task_id":"MBJSP\/200","completion":"  var max = Math.max.apply(null, list1);\n  var maxIndex = list1.indexOf(max);\n  var result = [];\n  for (var i = 0; i < list1.length; i++) {\n    if (list1[i] === max) {\n      result.push(i);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/201","completion":"    return lst.length === lst.filter(x => x === lst[0]).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/202","completion":"  let newStr = \"\";\n  for (let i = 0; i < str1.length; i++) {\n    if (i % 2 === 0) {\n      newStr += str1[i];\n    }\n  }\n  return newStr;\n}","language":"javascript"}
{"task_id":"MBJSP\/203","completion":"  let count = 0;\n  let n = n1 ^ n2;\n  while (n > 0) {\n    if (n % 2 === 1) {\n      count++;\n    }\n    n = Math.floor(n \/ 2);\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/204","completion":"    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === c) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/208","completion":"    return \/^-?\\d+\\.\\d{2}$\/.test(num);\n}","language":"javascript"}
{"task_id":"MBJSP\/210","completion":"  const regex = \/^[a-z0-9]+$\/i;\n  return regex.test(string);\n}","language":"javascript"}
{"task_id":"MBJSP\/211","completion":"  return (n & 1) + (n >> 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/212","completion":"  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += Math.pow(i, 4);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/213","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push(testTup1[i] + testTup2[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/214","completion":"  return radian * (180 \/ Math.PI);\n}","language":"javascript"}
{"task_id":"MBJSP\/217","completion":"  let charMap = {};\n  for (let i = 0; i < str.length; i++) {\n    if (charMap[str[i]]) {\n      return str[i];\n    } else {\n      charMap[str[i]] = 1;\n    }\n  }\n  return \"\\x00\";\n}","language":"javascript"}
{"task_id":"MBJSP\/221","completion":"    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] % 2 === 0) {\n            return nums[i];\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/222","completion":"  return testTuple.every((element) => typeof element === typeof testTuple[0]);\n}","language":"javascript"}
{"task_id":"MBJSP\/223","completion":"  let count = 0;\n  let i = 0;\n  let j = n - 1;\n  while (i <= j) {\n    if (arr[i] === x) {\n      count++;\n      i++;\n    } else if (arr[j] === x) {\n      count++;\n      j--;\n    } else {\n      i++;\n      j--;\n    }\n  }\n  if (count > n \/ 2) return true;\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/224","completion":"  let count = 0;\n  while (n) {\n    count += n & 1;\n    n >>= 1;\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/225","completion":"    if (low === high) {\n        return arr[low];\n    }\n    if (low > high) {\n        return arr[low];\n    }\n    if (low === high - 1) {\n        return Math.min(arr[low], arr[high]);\n    }\n    const mid = Math.floor((low + high) \/ 2);\n    if (arr[mid] > arr[mid + 1]) {\n        return arr[mid + 1];\n    }\n    if (arr[mid] < arr[mid - 1]) {\n        return arr[mid];\n    }\n    if (arr[mid] > arr[0]) {\n        return findMin(arr, low, mid - 1);\n    }\n    return findMin(arr, mid + 1, high);\n}","language":"javascript"}
{"task_id":"MBJSP\/226","completion":"    let result = '';\n    for (let i = 0; i < str.length; i++) {\n        if (i % 2 === 0) {\n            result += str[i];\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/227","completion":"  return Math.min(a, Math.min(b, c));\n}","language":"javascript"}
{"task_id":"MBJSP\/229","completion":"  let i = 0;\n  let j = 0;\n  let temp = 0;\n  while (j < n) {\n    if (arr[j] < 0) {\n      temp = arr[i];\n      arr[i] = arr[j];\n      arr[j] = temp;\n      i++;\n      j++;\n    } else {\n      j++;\n    }\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/230","completion":"  return str1.split(\" \").join(char);\n}","language":"javascript"}
{"task_id":"MBJSP\/232","completion":"  let list2 = [];\n  for (let i = 0; i < list1.length; i++) {\n    list2.push(list1[i]);\n  }\n  list2.sort((a, b) => b - a);\n  return list2.slice(0, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/234","completion":"  return Math.pow(l, 3);\n}","language":"javascript"}
{"task_id":"MBJSP\/238","completion":"    let count = 0;\n    let len = str.length;\n    for (let i = 0; i < len; i++) {\n        for (let j = i + 1; j <= len; j++) {\n            let substr = str.substring(i, j);\n            if (substr.length > 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/240","completion":"  const list = [...list1];\n  list.pop();\n  list.push(...list2);\n  return list;\n}","language":"javascript"}
{"task_id":"MBJSP\/242","completion":"  return str1.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/244","completion":"    let i = 1;\n    while (i * i <= n) {\n        i++;\n    }\n    return i * i;\n}","language":"javascript"}
{"task_id":"MBJSP\/248","completion":"  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += 1 \/ i;\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/249","completion":"  return arrayNums1.filter(num => arrayNums2.includes(num));\n}","language":"javascript"}
{"task_id":"MBJSP\/250","completion":"  return tup.filter(function (e) {\n    return e === x;\n  }).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/251","completion":"  const result = [];\n  for (let i = 0; i < list.length; i++) {\n    result.push(element, list[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/252","completion":"    return [numbers, 0];\n}","language":"javascript"}
{"task_id":"MBJSP\/256","completion":"    let count = 0;\n    for (let i = 2; i < n; i++) {\n        let isPrime = true;\n        for (let j = 2; j < i; j++) {\n            if (i % j === 0) {\n                isPrime = false;\n                break;\n            }\n        }\n        if (isPrime) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/257","completion":"  return [b, a];\n}","language":"javascript"}
{"task_id":"MBJSP\/258","completion":"  return arrayNums.filter(num => num % 2 !== 0).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/262","completion":"  const result = [];\n  const list2 = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (i < l) {\n      result.push(list1[i]);\n    } else {\n      list2.push(list1[i]);\n    }\n  }\n  return [result, list2];\n}","language":"javascript"}
{"task_id":"MBJSP\/263","completion":"  const result = {};\n  for (const key in d1) {\n    result[key] = d1[key];\n  }\n  for (const key in d2) {\n    result[key] = d2[key];\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/266","completion":"    let area = (l * 2) * (l * 2)\n    return area\n}","language":"javascript"}
{"task_id":"MBJSP\/269","completion":"  return k.charCodeAt(0);\n}","language":"javascript"}
{"task_id":"MBJSP\/270","completion":"    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] % 2 === 0 && i % 2 === 0) {\n            sum += arr[i];\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/272","completion":"  let result = [];\n  for (let i = 0; i < testList.length; i++) {\n    result.push(testList[i][2]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/273","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push(testTup1[i] - testTup2[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/277","completion":"  const newDict = {};\n  for (let key in dict) {\n    if (dict[key] >= n) {\n      newDict[key] = dict[key];\n    }\n  }\n  return newDict;\n}","language":"javascript"}
{"task_id":"MBJSP\/281","completion":"  const set = new Set(testList);\n  return set.size === testList.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/282","completion":"  return nums1.map((num, i) => num - nums2[i]);\n}","language":"javascript"}
{"task_id":"MBJSP\/283","completion":"    let freq = {};\n    let str = n.toString();\n    for (let i = 0; i < str.length; i++) {\n        let digit = str[i];\n        if (freq[digit]) {\n            freq[digit]++;\n        } else {\n            freq[digit] = 1;\n        }\n    }\n    for (let key in freq) {\n        if (freq[key] > 1) {\n            return false;\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/284","completion":"  return list.every(function(item) {\n    return item === element;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/294","completion":"    var max = 0;\n    for (var i = 0; i < listval.length; i++) {\n        if (listval[i] > max) {\n            max = listval[i];\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/295","completion":"  let sum = 0;\n  for (let i = 1; i < number; i++) {\n    if (number % i === 0) {\n      sum += i;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/296","completion":"  let count = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      if (arr[i] > arr[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/297","completion":"  let result = [];\n  function flatten(list2) {\n    for (let i = 0; i < list2.length; i++) {\n      if (Array.isArray(list2[i])) {\n        flatten(list2[i]);\n      } else {\n        result.push(list2[i]);\n      }\n    }\n  }\n  flatten(list1);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/301","completion":"  let depth = 1;\n  function recurse(d) {\n    for (let key in d) {\n      if (typeof d[key] === 'object') {\n        depth += 1;\n        recurse(d[key]);\n      }\n    }\n  }\n  recurse(d);\n  return depth;\n}","language":"javascript"}
{"task_id":"MBJSP\/302","completion":"    let mask = 1;\n    let max = 0;\n    for (let i = 0; i < 32; i++) {\n        if ((n & mask) === mask) {\n            max = mask;\n        }\n        mask <<= 1;\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/308","completion":"  const result = [];\n  const product = [];\n  for (let i = 0; i < nums1.length; i++) {\n    for (let j = 0; j < nums2.length; j++) {\n      product.push(nums1[i] * nums2[j]);\n    }\n  }\n  product.sort((a, b) => b - a);\n  for (let i = 0; i < n; i++) {\n    result.push(product[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/309","completion":"    return Math.max(a, b);\n}","language":"javascript"}
{"task_id":"MBJSP\/315","completion":"    let arr = str.split(\" \");\n    let max = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i].length % 2 == 0 && arr[i].length > max) {\n            max = arr[i].length;\n        }\n    }\n    return max == -1 ? \"-1\" : arr[arr.length - 1].substring(0, max);\n}","language":"javascript"}
{"task_id":"MBJSP\/316","completion":"  let left = 0;\n  let right = a.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) \/ 2);\n    if (a[mid] === x) {\n      if (mid === a.length - 1 || a[mid + 1] !== x) {\n        return mid;\n      }\n      left = mid + 1;\n    } else if (a[mid] < x) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/318","completion":"    let max = 0;\n    for (let i = 1; i <= s; i++) {\n        for (let j = 1; j <= s; j++) {\n            for (let k = 1; k <= s; k++) {\n                if ((i + j + k) === s) {\n                    let volume = i * j * k;\n                    if (volume > max) {\n                        max = volume;\n                    }\n                }\n            }\n        }\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/320","completion":"  let sum = 0;\n  let sumSquare = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += i;\n    sumSquare += i * i;\n  }\n  return Math.pow(sum, 2) - sumSquare;\n}","language":"javascript"}
{"task_id":"MBJSP\/322","completion":"  let min = Math.min(...list1);\n  let minIndex = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] === min) {\n      minIndex.push(i);\n    }\n  }\n  return minIndex;\n}","language":"javascript"}
{"task_id":"MBJSP\/325","completion":"  const dp = [];\n  dp[0] = 0;\n  for (let i = 1; i <= n; i++) {\n    dp[i] = Infinity;\n  }\n  dp[1] = 1;\n  for (let i = 2; i <= n; i++) {\n    for (let j = 1; j * j <= i; j++) {\n      dp[i] = Math.min(dp[i], dp[i - j * j] + 1);\n    }\n  }\n  return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/326","completion":"    let map = new Map();\n    for (let i = 0; i < testList.length; i++) {\n        let word = testList[i].split(' ');\n        for (let j = 0; j < word.length; j++) {\n            let key = word[j];\n            if (map.has(key)) {\n                map.set(key, map.get(key) + 1);\n            } else {\n                map.set(key, 1);\n            }\n        }\n    }\n    let max = 0;\n    let maxKey = '';\n    for (let [key, value] of map) {\n        if (value > max) {\n            max = value;\n            maxKey = key;\n        }\n    }\n    return maxKey;\n}","language":"javascript"}
{"task_id":"MBJSP\/327","completion":"  return (x === y || x === z || y === z) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/329","completion":"  let count = 0;\n  for (let i = 0; i < list.length; i++) {\n    if (list[i] < 0) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/330","completion":"  let regex = \/(\\w{3,})|(\\w{4,})|(\\w{5,})\/g;\n  let result = [];\n  let match;\n  while ((match = regex.exec(text)) !== null) {\n    if (match[0] && match[0].length === 3) {\n      result.push(match[0]);\n    } else if (match[0] && match[0].length === 4) {\n      result.push(match[0]);\n    } else if (match[0] && match[0].length === 5) {\n      result.push(match[0]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/332","completion":"  const charMap = {};\n  for (let char of str1) {\n    charMap[char] = charMap[char] + 1 || 1;\n  }\n  return charMap;\n}","language":"javascript"}
{"task_id":"MBJSP\/333","completion":"  return subLi.sort((a, b) => a[1] - b[1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/334","completion":"    if (a + b > c && a + c > b && b + c > a) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/336","completion":"    let monthname = monthname1.toLowerCase();\n    let month = [\"january\", \"february\", \"march\", \"april\", \"may\", \"june\", \"july\", \"august\", \"september\", \"october\", \"november\", \"december\"];\n    let days = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\n    let monthIndex = month.indexOf(monthname);\n    if (monthIndex === -1) {\n        return false;\n    }\n    else {\n        return days[monthIndex] === 28 ? true : false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/341","completion":"  return [...s];\n}","language":"javascript"}
{"task_id":"MBJSP\/343","completion":"  const letters = s.split(\"\").reduce((acc, cur) => {\n    if (cur.match(\/[a-z]\/i)) {\n      acc[0] += 1;\n    } else if (cur.match(\/[0-9]\/i)) {\n      acc[1] += 1;\n    }\n    return acc;\n  }, [0, 0]);\n  return letters;\n}","language":"javascript"}
{"task_id":"MBJSP\/349","completion":"    let str = string.split(\"\").reverse().join(\"\");\n    if (str === string) {\n        return \"Yes\";\n    } else {\n        return \"No\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/350","completion":"    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s.indexOf(s[i]) === s.lastIndexOf(s[i])) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/352","completion":"  const charSet = new Set();\n  for (let i = 0; i < str.length; i++) {\n    if (charSet.has(str[i])) {\n      return false;\n    }\n    charSet.add(str[i]);\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/353","completion":"  if (list1.length === 0) {\n    return [];\n  }\n  const list2 = [];\n  for (let i = 0; i < list1.length; i++) {\n    const list3 = [];\n    for (let j = 0; j < list1[i].length; j++) {\n      if (j !== n) {\n        list3.push(list1[i][j]);\n      }\n    }\n    list2.push(list3);\n  }\n  return list2;\n}","language":"javascript"}
{"task_id":"MBJSP\/354","completion":"  if (n === 0) return 1;\n  return a + (n - 1) * d;\n}","language":"javascript"}
{"task_id":"MBJSP\/356","completion":"  return 180 - (a + b);\n}","language":"javascript"}
{"task_id":"MBJSP\/357","completion":"  let max = 0;\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = 0; j < testList[i].length; j++) {\n      if (testList[i][j] > max) {\n        max = testList[i][j];\n      }\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/358","completion":"  return nums1.map((num1, index) => num1 % nums2[index])\n}","language":"javascript"}
{"task_id":"MBJSP\/361","completion":"  return list1.filter(function(list) {\n    return list.length > 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/363","completion":"  const result = [];\n  for (let i = 0; i < testList.length; i++) {\n    const temp = [];\n    for (let j = 0; j < testList[i].length; j++) {\n      temp.push(testList[i][j] + k);\n    }\n    result.push(temp);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/364","completion":"  let flipCount = 0;\n  let flipCountTemp = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === str[i + 1]) {\n      flipCountTemp++;\n    } else {\n      flipCount += Math.min(flipCountTemp, 1);\n      flipCountTemp = 0;\n    }\n  }\n  return flipCount + Math.min(flipCountTemp, 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/365","completion":"    return n.toString().length;\n}","language":"javascript"}
{"task_id":"MBJSP\/366","completion":"  let max = 0;\n  for (let i = 0; i < listNums.length - 1; i++) {\n    let product = listNums[i] * listNums[i + 1];\n    if (product > max) {\n      max = product;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/368","completion":"  let arr = [];\n  for (let i = 0; i < n; i++) {\n    arr.push(testTup);\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/371","completion":"  let i = leftElement;\n  let j = rightElement;\n  while (i <= j) {\n    const mid = Math.floor((i + j) \/ 2);\n    if (a[mid] === mid) {\n      i = mid + 1;\n    } else {\n      j = mid - 1;\n    }\n  }\n  return i;\n}","language":"javascript"}
{"task_id":"MBJSP\/373","completion":"  return l * w * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/375","completion":"  return Math.floor(n \/ m) * m;\n}","language":"javascript"}
{"task_id":"MBJSP\/376","completion":"  let newTup = [];\n  for (let i = 0; i < testTup.length; i++) {\n    if (newTup.indexOf(testTup[i]) === -1) {\n      newTup.push(testTup[i]);\n    } else {\n      newTup.push(\"MSP\");\n    }\n  }\n  return newTup;\n}","language":"javascript"}
{"task_id":"MBJSP\/377","completion":"  return s.split(c).join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/378","completion":"    let firstElement = testList[0];\n    let lastElement = testList[testList.length - 1];\n    testList.splice(testList.length - 1, 1);\n    testList.unshift(lastElement);\n    return testList;\n}","language":"javascript"}
{"task_id":"MBJSP\/379","completion":"  return 2 * (l * w + w * h + h * l);\n}","language":"javascript"}
{"task_id":"MBJSP\/380","completion":"  let result = [];\n  for (let i = 0; i < rownum; i++) {\n    let row = [];\n    for (let j = 0; j < colnum; j++) {\n      row.push(i * j);\n    }\n    result.push(row);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/382","completion":"  let start = 0;\n  let end = a.length - 1;\n\n  while (start <= end) {\n    let mid = Math.floor((start + end) \/ 2);\n    if (a[mid] > a[mid + 1]) return mid + 1;\n    if (a[start] <= a[mid]) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n  }\n  return 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/384","completion":"    let min = Math.min(...arr);\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === min) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/386","completion":"    let count = 0;\n    let temp = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === '[') {\n            temp++;\n        } else if (s[i] === ']') {\n            temp--;\n        }\n        if (temp < 0) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/387","completion":"  const num = parseInt(n, 16);\n  return num % 2 === 0 ? \"Even\" : \"Odd\";\n}","language":"javascript"}
{"task_id":"MBJSP\/388","completion":"    let power = 1;\n    while (power <= n) {\n        power *= 2;\n    }\n    return power \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/390","completion":"  return list.map(function(item) {\n    return string.replace(\"{0}\", item);\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/391","completion":"  let result = [];\n  for (let i = 0; i < l1.length; i++) {\n    result.push({ [l1[i]]: { [l2[i]]: l3[i] } });\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/393","completion":"  let max = 0;\n  let maxList = [];\n  inputList.forEach(list => {\n    if (list.length > max) {\n      max = list.length;\n      maxList = list;\n    }\n  });\n  return [max, maxList];\n}","language":"javascript"}
{"task_id":"MBJSP\/394","completion":"  return new Set(testTup).size === testTup.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/395","completion":"  const charMap = {};\n  for (let char of str1) {\n    charMap[char] = charMap[char] + 1 || 1;\n  }\n  for (let char in charMap) {\n    if (charMap[char] === 1) {\n      return char;\n    }\n  }\n  return null;\n}","language":"javascript"}
{"task_id":"MBJSP\/397","completion":"  const sorted = [a, b, c].sort((a, b) => a - b);\n  const middle = Math.floor(sorted.length \/ 2);\n  if (sorted.length % 2 === 0) {\n    return (sorted[middle - 1] + sorted[middle]) \/ 2;\n  }\n  return sorted[middle];\n}","language":"javascript"}
{"task_id":"MBJSP\/399","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push(testTup1[i] ^ testTup2[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/401","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push([testTup1[i][0] + testTup2[i][0], testTup1[i][1] + testTup2[i][1]]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/403","completion":"  return \/^https?:\\\/\\\/(www\\.)?[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\/.*)?$\/.test(str);\n}","language":"javascript"}
{"task_id":"MBJSP\/404","completion":"    if (a < b) {\n        return a;\n    }\n    return b;\n}","language":"javascript"}
{"task_id":"MBJSP\/405","completion":"  return tuplex.includes(tuple1);\n}","language":"javascript"}
{"task_id":"MBJSP\/406","completion":"    if (x % 2 === 0) {\n        return \"Even Parity\";\n    } else {\n        return \"Odd Parity\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/407","completion":"  const arr = n.toString().split('');\n  let i = arr.length - 1;\n  while (i > 0 && arr[i - 1] >= arr[i]) {\n    i--;\n  }\n  if (i === 0) return false;\n  const max = Math.max(...arr.slice(i - 1, i + 1));\n  const min = Math.min(...arr.slice(i - 1, i + 1));\n  arr[i - 1] = max;\n  arr[i] = min;\n  return Number(arr.join(''));\n}","language":"javascript"}
{"task_id":"MBJSP\/412","completion":"  return l.filter(function(n) {\n    return n % 2 === 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/413","completion":"  return list1.map(function(element) {\n    return element[n];\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/414","completion":"    if (list1.length > list2.length) {\n        return overlapping(list2, list1);\n    }\n    let count = 0;\n    for (let i = 0; i < list1.length; i++) {\n        if (list1[i] === list2[i]) {\n            count++;\n        }\n    }\n    return count === list1.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/415","completion":"  let max = 0;\n  let maxPair = [];\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      let product = arr[i] * arr[j];\n      if (product > max) {\n        max = product;\n        maxPair = [arr[i], arr[j]];\n      }\n    }\n  }\n  return maxPair;\n}","language":"javascript"}
{"task_id":"MBJSP\/417","completion":"  const result = [];\n  for (let i = 0; i < input.length; i++) {\n    const tuple = input[i];\n    const first = tuple[0];\n    const rest = tuple.slice(1);\n    const found = result.find((item) => item.includes(first));\n    if (found) {\n      found.push(...rest);\n    } else {\n      result.push(tuple);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/418","completion":"  let max = 0;\n  let maxIndex = 0;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i].length > max) {\n      max = lst[i].length;\n      maxIndex = i;\n    }\n  }\n  return lst[maxIndex];\n}","language":"javascript"}
{"task_id":"MBJSP\/419","completion":"  let sum = 0;\n  let count = 0;\n  for (let i = 0; i < list1.length; i++) {\n    let num = Math.round(list1[i]);\n    sum += num;\n    count++;\n  }\n  return sum * count;\n}","language":"javascript"}
{"task_id":"MBJSP\/421","completion":"    let result = '';\n    for (let i = 0; i < testTup.length; i++) {\n        if (i === testTup.length - 1) {\n            result += testTup[i];\n        } else {\n            result += testTup[i] + '-';\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/422","completion":"    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum \/ n;\n}","language":"javascript"}
{"task_id":"MBJSP\/424","completion":"  return testTuple.map(function(element) {\n    return element.split(\"\").reverse()[0];\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/425","completion":"  let count = 0;\n  for (let i = 0; i < list1.length; i++) {\n    for (let j = 0; j < list1[i].length; j++) {\n      if (list1[i][j] === x) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/426","completion":"  return nums.filter(num => num % 2 !== 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/427","completion":"  const dtRegex = \/^(\\d{4})-(\\d{2})-(\\d{2})$\/;\n  const [_, year, month, day] = dt.match(dtRegex);\n  return `${day}-${month}-${year}`;\n}","language":"javascript"}
{"task_id":"MBJSP\/428","completion":"  let len = myList.length;\n  let gap = Math.floor(len \/ 2);\n  while (gap > 0) {\n    for (let i = gap; i < len; i++) {\n      let j = i;\n      let temp = myList[i];\n      while (j >= gap && myList[j - gap] > temp) {\n        myList[j] = myList[j - gap];\n        j = j - gap;\n      }\n      myList[j] = temp;\n    }\n    gap = Math.floor(gap \/ 2);\n  }\n  return myList;\n}","language":"javascript"}
{"task_id":"MBJSP\/429","completion":"  const result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    result.push(testTup1[i] & testTup2[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/431","completion":"  if (list1.length === 0 || list2.length === 0) {\n    return null;\n  }\n  let commonElement = [];\n  for (let i = 0; i < list1.length; i++) {\n    for (let j = 0; j < list2.length; j++) {\n      if (list1[i] === list2[j]) {\n        commonElement.push(list1[i]);\n      }\n    }\n  }\n  if (commonElement.length === 0) {\n    return null;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/434","completion":"  if (text.match(\/a\/g) && text.match(\/b\/g)) {\n    return \"Found a match!\";\n  } else {\n    return \"Not matched!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/435","completion":"  return n % 10;\n}","language":"javascript"}
{"task_id":"MBJSP\/436","completion":"  let result = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] < 0) {\n      result.push(list1[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/437","completion":"  let newStr = \"\";\n  for (let i = 0; i < str1.length; i++) {\n    if (i % 2 !== 0) {\n      newStr += str1[i];\n    }\n  }\n  return newStr;\n}","language":"javascript"}
{"task_id":"MBJSP\/441","completion":"  return 6 * Math.pow(l, 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/446","completion":"  let count = 0;\n  for (let i = 0; i < tup.length; i++) {\n    for (let j = 0; j < lst.length; j++) {\n      if (tup[i] === lst[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/447","completion":"  return nums.map(num => num ** 3);\n}","language":"javascript"}
{"task_id":"MBJSP\/451","completion":"  return text1.replace(\/\\s\/g, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/453","completion":"    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i == 0) {\n            if (i % 2 == 0) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/454","completion":"  var regex = \/z\/g;\n  var match = text.match(regex);\n  if (match) {\n    return \"Found a match!\";\n  } else {\n    return \"Not matched!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/455","completion":"    return (new Date(2019, monthnum2, 0)).getDate() === 31;\n}","language":"javascript"}
{"task_id":"MBJSP\/456","completion":"  return stringlist.map(string => string.split(\"\").reverse().join(\"\"));\n}","language":"javascript"}
{"task_id":"MBJSP\/457","completion":"  let min = Infinity;\n  let minIndex = -1;\n  for (let i = 0; i < lst.length; i++) {\n    if (lst[i].length < min) {\n      min = lst[i].length;\n      minIndex = i;\n    }\n  }\n  return lst[minIndex];\n}","language":"javascript"}
{"task_id":"MBJSP\/458","completion":"  return l * b;\n}","language":"javascript"}
{"task_id":"MBJSP\/459","completion":"  return str1.replace(\/[A-Z]\/g, \"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/460","completion":"    let result = [];\n    for (let i = 0; i < lst.length; i++) {\n        result.push(lst[i][0]);\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/463","completion":"  if (arr.length === 0) return 0;\n  let max = arr[0];\n  let min = arr[0];\n  let maxProduct = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    const current = arr[i];\n    const currentMin = Math.min(current, current * min, current * max);\n    const currentMax = Math.max(current, current * min, current * max);\n    max = currentMax;\n    min = currentMin;\n    maxProduct = Math.max(maxProduct, max);\n  }\n  return maxProduct;\n}","language":"javascript"}
{"task_id":"MBJSP\/464","completion":"  let keys = Object.keys(dict);\n  let values = Object.values(dict);\n  let result = true;\n  for (let i = 0; i < keys.length; i++) {\n    if (values[i] !== n) {\n      result = false;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/465","completion":"  let dict2 = {};\n  for (let key in dict1) {\n    if (dict1[key] !== null && dict1[key] !== undefined) {\n      dict2[key] = dict1[key];\n    }\n  }\n  return dict2;\n}","language":"javascript"}
{"task_id":"MBJSP\/466","completion":"  let left = 0;\n  let right = n - 1;\n  while (left < right) {\n    const mid = Math.floor((left + right) \/ 2);\n    if (arr[mid] < arr[mid + 1]) {\n      left = mid + 1;\n    } else {\n      right = mid;\n    }\n  }\n  return left;\n}","language":"javascript"}
{"task_id":"MBJSP\/469","completion":"  let profit = 0;\n  for (let i = 0; i < price.length - 1; i++) {\n    if (price[i] < price[i + 1]) {\n      profit += price[i + 1] - price[i];\n    }\n  }\n  return profit > 0 ? profit : 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/472","completion":"    let result = true;\n    for (let i = 0; i < l.length - 1; i++) {\n        if (l[i] + 1 !== l[i + 1]) {\n            result = false;\n            break;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/474","completion":"  let newStr = \"\";\n  for (let i = 0; i < str1.length; i++) {\n    if (str1[i] === ch) {\n      newStr += newch;\n    } else {\n      newStr += str1[i];\n    }\n  }\n  return newStr;\n}","language":"javascript"}
{"task_id":"MBJSP\/475","completion":"  let arr = [];\n  for (let key in dict1) {\n    arr.push([key, dict1[key]]);\n  }\n  arr.sort((a, b) => b[1] - a[1]);\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/476","completion":"    let max = Math.max(...nums);\n    let min = Math.min(...nums);\n    return max + min;\n}","language":"javascript"}
{"task_id":"MBJSP\/477","completion":"    return string.toLowerCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/478","completion":"  let result = '';\n  for (let i = 0; i < str1.length; i++) {\n    if (str1[i] !== str1[i].toLowerCase()) {\n      result += str1[i];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/479","completion":"    return (n < 10) ? n : firstDigit(Math.floor(n \/ 10));\n}","language":"javascript"}
{"task_id":"MBJSP\/480","completion":"    var maxChar = '';\n    var maxCount = 0;\n    for (var i = 0; i < str1.length; i++) {\n        var count = 0;\n        for (var j = 0; j < str1.length; j++) {\n            if (str1[i] === str1[j]) {\n                count++;\n            }\n        }\n        if (count > maxCount) {\n            maxCount = count;\n            maxChar = str1[i];\n        }\n    }\n    return maxChar;\n}","language":"javascript"}
{"task_id":"MBJSP\/481","completion":"  if (sum === 0) return true;\n  if (n === 0) return false;\n  if (set[n - 1] > sum) return isSubsetSum(set, n - 1, sum);\n  return isSubsetSum(set, n - 1, sum) || isSubsetSum(set, n - 1, sum - set[n - 1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/482","completion":"    return text.match(\/[A-Z][a-z]+\/g) ? \"Yes\" : \"No\";\n}","language":"javascript"}
{"task_id":"MBJSP\/484","completion":"  const result = [];\n  testList1.forEach((tuple1) => {\n    const match = testList2.find((tuple2) => {\n      return tuple1[0] === tuple2[0] && tuple1[1] === tuple2[1];\n    });\n    if (!match) {\n      result.push(tuple1);\n    }\n  });\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/485","completion":"  const palindromes = [];\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      const number = a[i] * 10 ** j;\n      const palindrome = number.toString();\n      if (palindrome === palindrome.split('').reverse().join('')) {\n        palindromes.push(number);\n      }\n    }\n  }\n  return Math.max(...palindromes);\n}","language":"javascript"}
{"task_id":"MBJSP\/487","completion":"  return tup.sort((a, b) => a[1] - b[1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/489","completion":"    let max = Math.max(...arr);\n    let count = 0;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === max) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/490","completion":"  const symmetricPairs = new Set();\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = i + 1; j < testList.length; j++) {\n      if (testList[i][0] === testList[j][1] && testList[i][1] === testList[j][0]) {\n        symmetricPairs.add(testList[i]);\n      }\n    }\n  }\n  return symmetricPairs;\n}","language":"javascript"}
{"task_id":"MBJSP\/491","completion":"  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    sum += a * Math.pow(r, i);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/492","completion":"  let start = 0;\n  let end = itemList.length - 1;\n  let middle = Math.floor((start + end) \/ 2);\n  while (itemList[middle] !== item && start <= end) {\n    if (item < itemList[middle]) {\n      end = middle - 1;\n    } else {\n      start = middle + 1;\n    }\n    middle = Math.floor((start + end) \/ 2);\n  }\n  return itemList[middle] === item ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/495","completion":"  return str1.replace(\/[a-z]\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/498","completion":"    if (y === 0) {\n        return x;\n    }\n    return gcd(y, x % y);\n}","language":"javascript"}
{"task_id":"MBJSP\/499","completion":"  return 2 * r;\n}","language":"javascript"}
{"task_id":"MBJSP\/501","completion":"    var divisors = [];\n    for (var i = 1; i <= y; i++) {\n        if (x % i === 0 && y % i === 0) {\n            divisors.push(i);\n        }\n    }\n    return divisors.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/502","completion":"    return n % m;\n}","language":"javascript"}
{"task_id":"MBJSP\/504","completion":"    let sum = 0;\n    for (let i = 0; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/505","completion":"  const zeroes = a.filter(item => item === 0);\n  const nonZeroes = a.filter(item => item !== 0);\n  return [...nonZeroes, ...zeroes];\n}","language":"javascript"}
{"task_id":"MBJSP\/506","completion":"  let result = 1;\n  for (let i = 0; i < k; i++) {\n    result *= (n - i);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/507","completion":"  let newList = [];\n  for (let i = 0; i < list1.length; i++) {\n    let word = list1[i];\n    if (!removewords.includes(word)) {\n      newList.push(word);\n    }\n  }\n  return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/508","completion":"  const l1Map = {};\n  const l2Map = {};\n  for (let i = 0; i < l1.length; i++) {\n    l1Map[l1[i]] = true;\n  }\n  for (let i = 0; i < l2.length; i++) {\n    l2Map[l2[i]] = true;\n  }\n  for (let i = 0; i < l1.length; i++) {\n    if (l1Map[l1[i]] !== l2Map[l2[i]]) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/511","completion":"  let sum = 0;\n  let minSum = Infinity;\n  let factor = 2;\n  while (num > 1) {\n    if (num % factor === 0) {\n      sum += factor;\n      num = num \/ factor;\n    } else {\n      factor++;\n    }\n  }\n  minSum = sum < minSum ? sum : minSum;\n  return minSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/512","completion":"  let freq = {};\n  for (let i = 0; i < testTuple.length; i++) {\n    if (Array.isArray(testTuple[i])) {\n      let innerFreq = countElementFreq(testTuple[i]);\n      for (let key in innerFreq) {\n        freq[key] = freq[key] ? freq[key] + innerFreq[key] : innerFreq[key];\n      }\n    } else {\n      freq[testTuple[i]] = (freq[testTuple[i]] || 0) + 1;\n    }\n  }\n  return freq;\n}","language":"javascript"}
{"task_id":"MBJSP\/513","completion":"  let result = [];\n  for (let i = 0; i < testTup.length; i++) {\n    result.push(testTup[i]);\n    result.push(k);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/514","completion":"  let sum = 0;\n  for (let i = 0; i < testTup.length; i++) {\n    sum += testTup[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/516","completion":"  let max = Math.max(...nums);\n  let exp = 1;\n  while (max \/ exp > 0) {\n    let buckets = Array.from({ length: 10 }, () => []);\n    for (let i = 0; i < nums.length; i++) {\n      let digit = Math.floor(nums[i] \/ exp) % 10;\n      buckets[digit].push(nums[i]);\n    }\n    nums = [].concat(...buckets);\n    exp *= 10;\n  }\n  return nums;\n}","language":"javascript"}
{"task_id":"MBJSP\/517","completion":"  let max = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] > 0 && list1[i] > max) {\n      max = list1[i];\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/518","completion":"  if (num < 0) {\n    return null;\n  }\n\n  let start = 0;\n  let end = num;\n  let mid = 0;\n  let result = 0;\n\n  while (start <= end) {\n    mid = Math.floor((start + end) \/ 2);\n    result = mid * mid;\n    if (result === num) {\n      return mid;\n    } else if (result < num) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n  }\n\n  return mid;\n}","language":"javascript"}
{"task_id":"MBJSP\/520","completion":"  let gcd = (a, b) => {\n    if (b === 0) return a;\n    return gcd(b, a % b);\n  };\n  let lcm = l[0];\n  for (let i = 1; i < l.length; i++) {\n    lcm = lcm * (l[i] \/ gcd(l[i], lcm));\n  }\n  return lcm;\n}","language":"javascript"}
{"task_id":"MBJSP\/521","completion":"  if (x === y && y === z) {\n    return true;\n  } else if (x !== y && y !== z && x !== z) {\n    return true;\n  } else {\n    return false;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/524","completion":"  let dp = new Array(n).fill(0);\n  let max = 0;\n  for (let i = 0; i < n; i++) {\n    dp[i] = arr[i];\n    for (let j = i - 1; j >= 0; j--) {\n      if (arr[j] < arr[i]) {\n        dp[i] = Math.max(dp[i], dp[j] + arr[i]);\n      }\n    }\n    max = Math.max(max, dp[i]);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/525","completion":"    return line1[0] * line2[1] === line2[0] * line1[1]\n}","language":"javascript"}
{"task_id":"MBJSP\/526","completion":"    return str1.split(\" \").map(function(word) {\n        return word[0].toUpperCase() + word.slice(1, word.length - 1).toLowerCase() + word[word.length - 1].toUpperCase();\n    }).join(\" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/527","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/528","completion":"  let min = Infinity;\n  let minList = [];\n  let minListIndex = 0;\n  for (let i = 0; i < list1.length; i++) {\n    let list = list1[i];\n    let listLength = list.length;\n    if (listLength < min) {\n      min = listLength;\n      minList = list;\n      minListIndex = i;\n    }\n  }\n  return [minListIndex + 1, minList];\n}","language":"javascript"}
{"task_id":"MBJSP\/531","completion":"  const dp = new Array(v + 1).fill(Infinity);\n  dp[0] = 0;\n  for (let i = 1; i <= v; i++) {\n    for (let j = 0; j < coins.length; j++) {\n      if (coins[j] <= i) {\n        dp[i] = Math.min(dp[i], dp[i - coins[j]] + 1);\n      }\n    }\n  }\n  return dp[v] === Infinity ? -1 : dp[v];\n}","language":"javascript"}
{"task_id":"MBJSP\/532","completion":"  if (str1.length !== str2.length) return false;\n  const str1Map = {};\n  const str2Map = {};\n  for (let i = 0; i < str1.length; i++) {\n    str1Map[str1[i]] = (str1Map[str1[i]] || 0) + 1;\n    str2Map[str2[i]] = (str2Map[str2[i]] || 0) + 1;\n  }\n  for (let key in str1Map) {\n    if (str1Map[key] !== str2Map[key]) return false;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/534","completion":"  const patternLength = pattern.length;\n  const textLength = text.length;\n  const patternIndex = text.indexOf(pattern);\n\n  if (patternIndex === -1) {\n    return [-1, -1];\n  }\n\n  let start = patternIndex;\n  let end = patternIndex + patternLength;\n\n  while (start > 0 && text[start - 1] !== ' ') {\n    start -= 1;\n  }\n\n  while (end < textLength && text[end] !== ' ') {\n    end += 1;\n  }\n\n  return [start, end];\n}","language":"javascript"}
{"task_id":"MBJSP\/536","completion":"  if (n === 1) {\n    return list;\n  }\n  const newList = [];\n  for (let i = 0; i < list.length; i += n) {\n    newList.push(list[i]);\n  }\n  return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/537","completion":"    let arr = str1.split(' ');\n    let obj = {};\n    for (let i = 0; i < arr.length; i++) {\n        if (obj[arr[i]]) {\n            return arr[i];\n        } else {\n            obj[arr[i]] = 1;\n        }\n    }\n    return 'None';\n}","language":"javascript"}
{"task_id":"MBJSP\/541","completion":"  let sum = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i === 0) {\n      sum += i;\n    }\n  }\n  return sum > n;\n}","language":"javascript"}
{"task_id":"MBJSP\/542","completion":"  return text.replace(\/ |,|\\.|\\\/\/g, ':');\n}","language":"javascript"}
{"task_id":"MBJSP\/544","completion":"  const flatList = testList.reduce((acc, val) => acc.concat(val), []);\n  return flatList.join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/548","completion":"  if (arr.length === 0) return 0;\n\n  let dp = new Array(arr.length).fill(1);\n  let max = 1;\n\n  for (let i = 1; i < arr.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j]) {\n        dp[i] = Math.max(dp[i], dp[j] + 1);\n      }\n    }\n    max = Math.max(max, dp[i]);\n  }\n\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/550","completion":"  if (low === high) {\n    return arr[low];\n  }\n\n  if (low > high) {\n    return -1;\n  }\n\n  const mid = Math.floor((low + high) \/ 2);\n  const leftMax = findMax(arr, low, mid);\n  const rightMax = findMax(arr, mid + 1, high);\n\n  return Math.max(leftMax, rightMax);\n}","language":"javascript"}
{"task_id":"MBJSP\/551","completion":"  let result = [];\n  for (let i = 0; i < list1.length; i++) {\n    result.push(list1[i][n]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/554","completion":"  var result = [];\n  for (var i = 0; i < list.length; i++) {\n    if (list[i] % 2 !== 0) {\n      result.push(list[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/555","completion":"    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += Math.pow(i, 3);\n    }\n    let sum2 = 0;\n    for (let i = 1; i <= n; i++) {\n        sum2 += i;\n    }\n    return sum - sum2;\n}","language":"javascript"}
{"task_id":"MBJSP\/557","completion":"  return string.split(\"\").map(char => {\n    return char === char.toUpperCase() ? char.toLowerCase() : char.toUpperCase();\n  }).join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/559","completion":"  if (size === 0) return 0;\n  if (size === 1) return a[0];\n  let maxSum = a[0];\n  let tempSum = a[0];\n  for (let i = 1; i < size; i++) {\n    tempSum = Math.max(a[i], tempSum + a[i]);\n    maxSum = Math.max(maxSum, tempSum);\n  }\n  return maxSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/560","completion":"  const set1 = new Set(testTup1);\n  const set2 = new Set(testTup2);\n  const union = new Set([...set1, ...set2]);\n  return Array.from(union);\n}","language":"javascript"}
{"task_id":"MBJSP\/562","completion":"  let max = 0;\n  for (let i = 0; i < lst.length; i++) {\n    let temp = 0;\n    for (let j = 0; j < lst[i].length; j++) {\n      if (lst[i][j] === 0) {\n        temp = 0;\n      } else {\n        temp += 1;\n      }\n      if (temp > max) {\n        max = temp;\n      }\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/565","completion":"    return word.split('');\n}","language":"javascript"}
{"task_id":"MBJSP\/566","completion":"  return (n + '').split('').reduce((acc, cur) => acc + parseInt(cur), 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/567","completion":"  for (let i = 0; i < list1.length - 1; i++) {\n    if (list1[i] > list1[i + 1]) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/568","completion":"  let arr = [];\n  for (let i = 0; i < length; i++) {\n    arr.push({});\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/569","completion":"  return list1.map(sublist => sublist.sort());\n}","language":"javascript"}
{"task_id":"MBJSP\/572","completion":"    let map = new Map();\n    let result = [];\n    for (let i = 0; i < nums.length; i++) {\n        if (!map.has(nums[i])) {\n            map.set(nums[i], 1);\n        } else {\n            map.set(nums[i], map.get(nums[i]) + 1);\n        }\n    }\n    for (let [key, value] of map) {\n        if (value === 1) {\n            result.push(key);\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/573","completion":"    let uniqueList = [];\n    let product = 1;\n    for (let i = 0; i < listData.length; i++) {\n        if (uniqueList.indexOf(listData[i]) === -1) {\n            uniqueList.push(listData[i]);\n        }\n    }\n    for (let i = 0; i < uniqueList.length; i++) {\n        product *= uniqueList[i];\n    }\n    return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/575","completion":"    let count = 0;\n    for (let i = l; i <= r; i++) {\n        if (i % a !== 0) {\n            count++;\n        }\n        if (count === n) {\n            return i;\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/576","completion":"    if (a.length < n || b.length < m) {\n        return false;\n    }\n    for (let i = 0; i < n; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    for (let i = n; i < m; i++) {\n        if (a[i] !== b[i]) {\n            return false;\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/578","completion":"  let result = [];\n  let i = 0;\n  let j = 0;\n  let k = 0;\n\n  while (i < list1.length && j < list2.length && k < list3.length) {\n    result.push(list1[i]);\n    result.push(list2[j]);\n    result.push(list3[k]);\n    i++;\n    j++;\n    k++;\n  }\n\n  while (i < list1.length) {\n    result.push(list1[i]);\n    i++;\n  }\n\n  while (j < list2.length) {\n    result.push(list2[j]);\n    j++;\n  }\n\n  while (k < list3.length) {\n    result.push(list3[k]);\n    k++;\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/587","completion":"  let newList = [];\n  for (let i = 0; i < listx.length; i++) {\n    newList.push(listx[i]);\n  }\n  return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/588","completion":"  let min = Math.min(...nums);\n  let max = Math.max(...nums);\n  return max - min;\n}","language":"javascript"}
{"task_id":"MBJSP\/589","completion":"  let perfectSquares = [];\n  for (let i = a; i <= b; i++) {\n    if (Math.sqrt(i) % 1 === 0) {\n      perfectSquares.push(i);\n    }\n  }\n  return perfectSquares;\n}","language":"javascript"}
{"task_id":"MBJSP\/591","completion":"    let first = newlist[0];\n    let last = newlist[newlist.length - 1];\n    newlist[0] = last;\n    newlist[newlist.length - 1] = first;\n    return newlist;\n}","language":"javascript"}
{"task_id":"MBJSP\/593","completion":"  return ip.split('.').map(function(n) {\n    return n.replace(\/^0+\/, '');\n  }).join('.');\n}","language":"javascript"}
{"task_id":"MBJSP\/598","completion":"  let num = number;\n  let sum = 0;\n  while (num > 0) {\n    let rem = num % 10;\n    sum += rem ** 3;\n    num = Math.floor(num \/ 10);\n  }\n  return sum === number;\n}","language":"javascript"}
{"task_id":"MBJSP\/599","completion":"  let sum = 0;\n  let average = 0;\n  for (let i = 1; i <= number; i++) {\n    sum += i;\n  }\n  average = sum \/ number;\n  return [sum, average];\n}","language":"javascript"}
{"task_id":"MBJSP\/600","completion":"    return (n & 1) === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/602","completion":"  let charMap = {};\n  for (let i = 0; i < str1.length; i++) {\n    if (charMap[str1[i]]) {\n      return str1[i];\n    } else {\n      charMap[str1[i]] = true;\n    }\n  }\n  return \"None\";\n}","language":"javascript"}
{"task_id":"MBJSP\/604","completion":"  return s.split(' ').reverse().join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/605","completion":"  if (num < 2) return false;\n  if (num === 2) return true;\n  if (num % 2 === 0) return false;\n  for (let i = 3; i <= Math.sqrt(num); i += 2) {\n    if (num % i === 0) return false;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/606","completion":"  return degree * Math.PI \/ 180;\n}","language":"javascript"}
{"task_id":"MBJSP\/607","completion":"  const regex = new RegExp(pattern, \"gi\");\n  const match = text.match(regex);\n  return match ? [match[0], text.indexOf(match[0]), text.indexOf(match[0]) + match[0].length] : [];\n}","language":"javascript"}
{"task_id":"MBJSP\/610","completion":"  const list = [...list1];\n  const k = list.splice(l - 1, 1);\n  return list;\n}","language":"javascript"}
{"task_id":"MBJSP\/611","completion":"  let max = 0;\n  for (let i = 0; i < testList.length; i++) {\n    max = Math.max(max, testList[i][n]);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/613","completion":"  let max = [];\n  for (let i = 0; i < testList.length; i++) {\n    let maxKey = testList[i][0];\n    let maxVal = testList[i][1][0];\n    for (let j = 0; j < testList[i][1].length; j++) {\n      if (testList[i][1][j] > maxVal) {\n        maxVal = testList[i][1][j];\n        maxKey = testList[i][0];\n      }\n    }\n    max.push([maxKey, maxVal]);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/614","completion":"  let sum = 0;\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = 0; j < testList[i].length; j++) {\n      sum += testList[i][j];\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/616","completion":"  return testTup1.map((element, index) => element % testTup2[index]);\n}","language":"javascript"}
{"task_id":"MBJSP\/618","completion":"  return nums1.map((num1, index) => num1 \/ nums2[index]);\n}","language":"javascript"}
{"task_id":"MBJSP\/621","completion":"  return testList.map(word => {\n    let num = parseInt(word.match(\/\\d+\/g));\n    return word.replace(num, num + k);\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/622","completion":"  const arr = [...arr1, ...arr2].sort((a, b) => a - b);\n  const mid = Math.floor(arr.length \/ 2);\n  return arr.length % 2 === 0 ? (arr[mid - 1] + arr[mid]) \/ 2 : arr[mid];\n}","language":"javascript"}
{"task_id":"MBJSP\/623","completion":"  return nums.map(num => num ** n);\n}","language":"javascript"}
{"task_id":"MBJSP\/624","completion":"    return string.toUpperCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/625","completion":"    let first = newlist[0];\n    let last = newlist[newlist.length - 1];\n    newlist[0] = last;\n    newlist[newlist.length - 1] = first;\n    return newlist;\n}","language":"javascript"}
{"task_id":"MBJSP\/628","completion":"  return string.replace(\/ \/g, \"%20\");\n}","language":"javascript"}
{"task_id":"MBJSP\/629","completion":"  return list.filter(x => x % 2 === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/630","completion":"  const x = testTup[0];\n  const y = testTup[1];\n  const coordinates = [];\n  for (let i = x - 1; i <= x + 1; i++) {\n    for (let j = y - 1; j <= y + 1; j++) {\n      if (i >= 0 && i < 10 && j >= 0 && j < 10) {\n        coordinates.push([i, j]);\n      }\n    }\n  }\n  return coordinates;\n}","language":"javascript"}
{"task_id":"MBJSP\/631","completion":"  return text.replace(\/\\s\/g, \"_\");\n}","language":"javascript"}
{"task_id":"MBJSP\/632","completion":"  let zeroList = [];\n  let nonZeroList = [];\n  for (let i = 0; i < numList.length; i++) {\n    if (numList[i] === 0) {\n      zeroList.push(numList[i]);\n    } else {\n      nonZeroList.push(numList[i]);\n    }\n  }\n  return nonZeroList.concat(zeroList);\n}","language":"javascript"}
{"task_id":"MBJSP\/633","completion":"    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            sum += (arr[i] ^ arr[j]);\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/637","completion":"  return actualCost - saleAmount === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/639","completion":"  let sum = 0;\n  for (let i = 0; i < sampleNames.length; i++) {\n    if (sampleNames[i].charAt(0) !== sampleNames[i].charAt(0).toLowerCase()) {\n      sum += sampleNames[i].length;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/643","completion":"    var regex = \/z\/g;\n    var match = text.match(regex);\n    if (match === null) {\n        return \"Not matched!\";\n    }\n    else {\n        return \"Found a match!\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/645","completion":"  let product = 1;\n  for (let i = 0; i < testList.length; i++) {\n    product *= testList[i][k];\n  }\n  return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/647","completion":"  return text.split(\/(?=[A-Z])\/).filter(Boolean);\n}","language":"javascript"}
{"task_id":"MBJSP\/648","completion":"  let len = lst.length;\n  let i = 0;\n  while (i < len) {\n    if (i % 2 === 0) {\n      let temp = lst[i];\n      lst[i] = lst[i + 1];\n      lst[i + 1] = temp;\n    }\n    i++;\n  }\n  return lst;\n}","language":"javascript"}
{"task_id":"MBJSP\/649","completion":"  let sum = 0;\n  for (let i = m; i <= n; i++) {\n    sum += nums[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/653","completion":"  const result = {};\n  l.forEach(function(item) {\n    if (result[item[0]]) {\n      result[item[0]].push(item[1]);\n    } else {\n      result[item[0]] = [item[1]];\n    }\n  });\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/654","completion":"  return 2 * (l + b);\n}","language":"javascript"}
{"task_id":"MBJSP\/655","completion":"  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += Math.pow(i, 5);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/657","completion":"    let num = n;\n    let factorial = 1;\n    while (num > 0) {\n        factorial *= num;\n        num--;\n    }\n    let firstDigit = factorial.toString().split('').map(Number)[0];\n    return firstDigit;\n}","language":"javascript"}
{"task_id":"MBJSP\/658","completion":"  let max = 0;\n  let maxOccurrence = 0;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1.filter(x => x === list1[i]).length > maxOccurrence) {\n      maxOccurrence = list1.filter(x => x === list1[i]).length;\n      max = list1[i];\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/662","completion":"  let dict2 = {};\n  for (let key in dict1) {\n    dict2[key] = dict1[key].sort((a, b) => a - b);\n  }\n  return dict2;\n}","language":"javascript"}
{"task_id":"MBJSP\/663","completion":"  let max = 0;\n  for (let i = 1; i <= n; i++) {\n    if (i % x === y) {\n      max = i;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/664","completion":"    let sum = 0;\n    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (i % 2 === 0) {\n            sum += i;\n            count++;\n        }\n    }\n    return sum \/ count;\n}","language":"javascript"}
{"task_id":"MBJSP\/665","completion":"    let firstElement = numList[0];\n    numList.shift();\n    numList.push(firstElement);\n    return numList;\n}","language":"javascript"}
{"task_id":"MBJSP\/666","completion":"  let count = 0;\n  for (let i = 0; i < string.length; i++) {\n    if (string[i] === char) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/667","completion":"    let count = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (vowels.includes(string[i])) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/669","completion":"  const regex = \/^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$\/;\n  return regex.test(ip) ? \"Valid IP address\" : \"Invalid IP address\";\n}","language":"javascript"}
{"task_id":"MBJSP\/670","completion":"    let prev = nums[0];\n    for (let i = 1; i < nums.length; i++) {\n        if (nums[i] < prev) {\n            return false;\n        }\n        prev = nums[i];\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/672","completion":"  return Math.max(num1, num2, num3);\n}","language":"javascript"}
{"task_id":"MBJSP\/673","completion":"    let result = 0;\n    for (let i = 0; i < list.length; i++) {\n        result = result * 10 + list[i];\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/674","completion":"  return [...new Set(string.split(' '))].join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/675","completion":"  let sum = x + y;\n  if (sum >= m && sum <= n) {\n    return 20;\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/678","completion":"  return str1.replace(\/\\s\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/679","completion":"  return Object.keys(ditionary)[key];\n}","language":"javascript"}
{"task_id":"MBJSP\/680","completion":"  let prev = nums[0];\n  for (let i = 1; i < nums.length; i++) {\n    if (nums[i] > prev) {\n      return true;\n    }\n    prev = nums[i];\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/681","completion":"    let i = 2;\n    while (i <= n \/ i) {\n        if (n % i === 0) {\n            return i;\n        }\n        i++;\n    }\n    return n;\n}","language":"javascript"}
{"task_id":"MBJSP\/682","completion":"  return nums1.map((num1, index) => num1 * nums2[index]);\n}","language":"javascript"}
{"task_id":"MBJSP\/683","completion":"    let square = Math.sqrt(n);\n    return square * square === n;\n}","language":"javascript"}
{"task_id":"MBJSP\/685","completion":"  let sum = 0;\n  for (let i = 2; i <= n; i++) {\n    let isPrime = true;\n    for (let j = 2; j < i; j++) {\n      if (i % j === 0) {\n        isPrime = false;\n        break;\n      }\n    }\n    if (isPrime) {\n      sum += i;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/687","completion":"  if (b === 0) return a;\n  return recurGcd(b, a % b);\n}","language":"javascript"}
{"task_id":"MBJSP\/688","completion":"  return Math.sqrt(a * a + b * b);\n}","language":"javascript"}
{"task_id":"MBJSP\/689","completion":"  let jumps = 0;\n  let maxReach = arr[0];\n  let i = 0;\n\n  while (i < n) {\n    if (maxReach >= n - 1) {\n      return jumps;\n    }\n    if (arr[i] === 0) {\n      maxReach = Math.max(maxReach, i + arr[i]);\n      i++;\n    } else {\n      maxReach = Math.max(maxReach, i + arr[i]);\n      i += arr[i];\n      jumps++;\n    }\n  }\n  return jumps;\n}","language":"javascript"}
{"task_id":"MBJSP\/691","completion":"  const result = {};\n  for (let i = 0; i < testList.length; i++) {\n    const [first, second] = testList[i];\n    if (result[second]) {\n      result[second].push(first);\n    } else {\n      result[second] = [first];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/693","completion":"  return text1.replace(\/\\s{2,}\/g, \" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/695","completion":"  let result = true;\n  for (let i = 0; i < testTup1.length; i++) {\n    if (testTup1[i] > testTup2[i]) {\n      result = false;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/696","completion":"  const result = [];\n  for (let i = 0; i < list1.length; i++) {\n    result.push(list1[i].concat(list2[i]));\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/697","completion":"  return arrayNums.filter(num => num % 2 === 0).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/698","completion":"  const sortedDict = {};\n  const keys = Object.keys(testDict);\n  keys.sort((a, b) => {\n    const [aKey, aValue] = a.split(',');\n    const [bKey, bValue] = b.split(',');\n    return aKey * bKey - aValue * bValue;\n  });\n  keys.forEach((key) => {\n    sortedDict[key] = testDict[key];\n  });\n  return sortedDict;\n}","language":"javascript"}
{"task_id":"MBJSP\/700","completion":"  let count = 0;\n  for (let i = 0; i < li.length; i++) {\n    if (li[i] >= min && li[i] <= max) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/703","completion":"    return d.hasOwnProperty(x);\n}","language":"javascript"}
{"task_id":"MBJSP\/704","completion":"  let sum = 0;\n  for (let i = 1; i <= n; i++) {\n    sum += 1 \/ i;\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/707","completion":"  let count = 0;\n  for (let i = 1; i <= n; i++) {\n    count += i.toString(2).split('').filter(x => x === '1').length;\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/708","completion":"    return string.split(\" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/710","completion":"  return [testTup[0], testTup[testTup.length - 1]];\n}","language":"javascript"}
{"task_id":"MBJSP\/713","completion":"  return testTup.every(function(element) {\n    return element === true;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/714","completion":"  let count = 0;\n  for (let i = 2; i <= n; i++) {\n    if (n % i === 0) {\n      let j = 2;\n      while (i * j <= n) {\n        if (n % i === 0) {\n          n \/= i;\n          count++;\n        } else {\n          j++;\n        }\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/715","completion":"  return testStr.split(\", \").map(Number);\n}","language":"javascript"}
{"task_id":"MBJSP\/716","completion":"  return a * 4;\n}","language":"javascript"}
{"task_id":"MBJSP\/717","completion":"  const mean = data.reduce((acc, cur) => acc + cur, 0) \/ data.length;\n  const diff = data.map(x => x - mean);\n  const sqDiff = diff.map(x => x * x);\n  const sumSq = sqDiff.reduce((acc, cur) => acc + cur, 0);\n  const sd = Math.sqrt(sumSq \/ (data.length - 1));\n  return sd;\n}","language":"javascript"}
{"task_id":"MBJSP\/718","completion":"  let list2 = [];\n  let i = 0;\n  while (i < list1.length) {\n    list2.push(list1[i]);\n    i += 2;\n  }\n  return list2;\n}","language":"javascript"}
{"task_id":"MBJSP\/719","completion":"  if (text.match(\/a\/g) === null) {\n    return \"Not matched!\";\n  } else {\n    return \"Found a match!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/720","completion":"  return testTup.concat(testDict);\n}","language":"javascript"}
{"task_id":"MBJSP\/722","completion":"  return Object.keys(students).filter(function(key) {\n    return students[key][0] >= h && students[key][1] >= w;\n  }).reduce(function(obj, key) {\n    obj[key] = students[key];\n    return obj;\n  }, {});\n}","language":"javascript"}
{"task_id":"MBJSP\/726","completion":"  const result = [];\n  for (let i = 0; i < testTup.length - 1; i++) {\n    result.push(testTup[i] * testTup[i + 1]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/727","completion":"  return s.replace(\/[^a-z0-9]\/gi, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/728","completion":"  return lst1.map((num, i) => num + lst2[i]);\n}","language":"javascript"}
{"task_id":"MBJSP\/729","completion":"  return nums1.map((num, i) => num + nums2[i]);\n}","language":"javascript"}
{"task_id":"MBJSP\/730","completion":"  let result = [];\n  let i = 0;\n  let j = 1;\n  while (j < nums.length) {\n    if (nums[i] === nums[j]) {\n      j++;\n    } else {\n      result.push(nums[i]);\n      i = j;\n      j++;\n    }\n  }\n  result.push(nums[i]);\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/732","completion":"  return text.replace(\/ |,|\\.|\\\/\/g, ':');\n}","language":"javascript"}
{"task_id":"MBJSP\/733","completion":"  let start = 0;\n  let end = a.length - 1;\n  let mid;\n\n  while (start <= end) {\n    mid = Math.floor((start + end) \/ 2);\n    if (a[mid] === x) {\n      return mid;\n    }\n    if (a[mid] < x) {\n      start = mid + 1;\n    } else {\n      end = mid - 1;\n    }\n  }\n  return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/736","completion":"  let left = 0;\n  let right = a.length - 1;\n  while (left <= right) {\n    const mid = Math.floor((left + right) \/ 2);\n    if (a[mid] === x) {\n      return mid;\n    }\n    if (a[mid] < x) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n  return left;\n}","language":"javascript"}
{"task_id":"MBJSP\/737","completion":"    const regex = \/^[aeiou]\/i;\n    return regex.test(string) ? \"Valid\" : \"Invalid\";\n}","language":"javascript"}
{"task_id":"MBJSP\/740","completion":"  let dict = {};\n  for (let i = 0; i < testTup.length; i += 2) {\n    dict[testTup[i]] = testTup[i + 1];\n  }\n  return dict;\n}","language":"javascript"}
{"task_id":"MBJSP\/741","completion":"    let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (s[i] === s[0]) {\n            count++;\n        }\n    }\n    return count === s.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/744","completion":"  return testTup.some(x => x === null);\n}","language":"javascript"}
{"task_id":"MBJSP\/745","completion":"  let result = [];\n  for (let i = startnum; i <= endnum; i++) {\n    let num = i;\n    let digits = [];\n    while (num > 0) {\n      digits.push(num % 10);\n      num = Math.floor(num \/ 10);\n    }\n    let isDivisible = true;\n    for (let j = 0; j < digits.length; j++) {\n      if (i % digits[j] !== 0) {\n        isDivisible = false;\n        break;\n      }\n    }\n    if (isDivisible) {\n      result.push(i);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/748","completion":"    return str1.replace(\/([A-Z])\/g, ' $1').trim();\n}","language":"javascript"}
{"task_id":"MBJSP\/750","completion":"  return [...testList, ...testTup];\n}","language":"javascript"}
{"task_id":"MBJSP\/751","completion":"  if (i >= arr.length) return true;\n  const left = 2 * i + 1;\n  const right = 2 * i + 2;\n  if (left < arr.length && arr[left] < arr[i]) return false;\n  if (right < arr.length && arr[right] < arr[i]) return false;\n  return checkMinHeap(arr, left) && checkMinHeap(arr, right);\n}","language":"javascript"}
{"task_id":"MBJSP\/753","completion":"  const sortedList = testList.sort((a, b) => a[1] - b[1]);\n  const result = [];\n  for (let i = 0; i < k; i++) {\n    result.push(sortedList[i]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/754","completion":"  let result = [];\n  for (let i = 0; i < l1.length; i++) {\n    if (l1[i] === l2[i] && l1[i] === l3[i]) {\n      result.push(l1[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/756","completion":"  if (text.match(\/a(b)?\/)) {\n    return \"Found a match!\";\n  } else {\n    return \"Not matched!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/759","completion":"  return \/^-?\\d*\\.?\\d{0,2}$\/.test(num);\n}","language":"javascript"}
{"task_id":"MBJSP\/760","completion":"    let set = new Set(arr);\n    if (set.size === 1) {\n        return \"YES\";\n    } else {\n        return \"NO\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/763","completion":"    let minDiff = Infinity;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            let diff = Math.abs(arr[i] - arr[j]);\n            if (diff < minDiff) {\n                minDiff = diff;\n            }\n        }\n    }\n    return minDiff;\n}","language":"javascript"}
{"task_id":"MBJSP\/764","completion":"    var count = 0;\n    for (var i = 0; i < str.length; i++) {\n        if (str[i] >= '0' && str[i] <= '9') {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/766","completion":"  let result = [];\n  let i = 0;\n  let j = 1;\n  while (i < l1.length - 1) {\n    result.push([l1[i], l1[j]]);\n    i++;\n    j++;\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/767","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] + arr[j] === sum) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/768","completion":"    return (x % 2 !== 0) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/771","completion":"  let stack = [];\n  let map = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  for (let i = 0; i < exp.length; i++) {\n    if (exp[i] === '{' || exp[i] === '(' || exp[i] === '[') {\n      stack.push(exp[i]);\n    } else if (exp[i] === '}' || exp[i] === ')' || exp[i] === ']') {\n      if (map[stack.pop()] !== exp[i]) {\n        return false;\n      }\n    }\n  }\n\n  return stack.length === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/772","completion":"  let str = testStr.split(' ');\n  let newStr = [];\n  for (let i = 0; i < str.length; i++) {\n    if (str[i].length !== k) {\n      newStr.push(str[i]);\n    }\n  }\n  return newStr.join(' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/774","completion":"  const regex = \/^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\/;\n  return regex.test(String(email).toLowerCase()) ? \"Valid Email\" : \"Invalid Email\";\n}","language":"javascript"}
{"task_id":"MBJSP\/775","completion":"    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 !== 0) {\n            return false;\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/777","completion":"  let sum = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] === arr[j]) {\n        arr.splice(j, 1);\n        j--;\n      }\n    }\n    sum += arr[i];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/778","completion":"  let result = [];\n  let current = [];\n  let last = null;\n\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] === last) {\n      current.push(list1[i]);\n    } else {\n      if (current.length > 0) {\n        result.push(current);\n      }\n      current = [list1[i]];\n      last = list1[i];\n    }\n  }\n\n  if (current.length > 0) {\n    result.push(current);\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/781","completion":"    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            count++;\n        }\n    }\n    return count % 2 === 0 ? 'Even' : 'Odd';\n}","language":"javascript"}
{"task_id":"MBJSP\/786","completion":"  let left = 0;\n  let right = a.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) \/ 2);\n    if (a[mid] === x) {\n      return mid;\n    } else if (a[mid] < x) {\n      left = mid + 1;\n    } else {\n      right = mid - 1;\n    }\n  }\n\n  return left;\n}","language":"javascript"}
{"task_id":"MBJSP\/787","completion":"  if (text.match(\/a\\w*b\\w*b\\w*\/)) {\n    return \"Found a match!\";\n  }\n  return \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/788","completion":"  const tuple = [];\n  for (let i = 0; i < testList.length; i++) {\n    tuple.push(testList[i]);\n  }\n  tuple.push(testStr);\n  return tuple;\n}","language":"javascript"}
{"task_id":"MBJSP\/789","completion":"  return s * l;\n}","language":"javascript"}
{"task_id":"MBJSP\/790","completion":"    for (let i = 0; i < nums.length; i += 2) {\n        if (nums[i] % 2 !== 0) {\n            return false;\n        }\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/792","completion":"    let count = 0;\n    for (let i = 0; i < inputList.length; i++) {\n        if (inputList[i].length > 0) {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/793","completion":"    let start = 0;\n    let end = arr.length - 1;\n    let mid = Math.floor((start + end) \/ 2);\n    while (arr[mid] !== x && start < end) {\n        if (x < arr[mid]) {\n            end = mid - 1;\n        } else {\n            start = mid + 1;\n        }\n        mid = Math.floor((start + end) \/ 2);\n    }\n    if (arr[mid] === x) {\n        return mid;\n    }\n    return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/794","completion":"  const regex = \/a.*b$\/;\n  const result = regex.test(text);\n  return result ? \"Found a match!\" : \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/796","completion":"  let sum = 0;\n  for (let key in dict) {\n    sum += dict[key];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/797","completion":"    let sum = 0;\n    for (let i = l; i <= r; i++) {\n        if (i % 2 !== 0) {\n            sum += i;\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/798","completion":"    return arr.reduce((acc, cur) => acc + cur, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/799","completion":"  return (n << d) | (n >>> (32 - d));\n}","language":"javascript"}
{"task_id":"MBJSP\/800","completion":"  return text.replace(\/\\s\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/803","completion":"    if (n < 0) {\n        return false;\n    }\n    let sqrt = Math.sqrt(n);\n    return sqrt === Math.floor(sqrt);\n}","language":"javascript"}
{"task_id":"MBJSP\/804","completion":"    let product = 1;\n    for (let i = 0; i < arr.length; i++) {\n        product *= arr[i];\n    }\n    if (product % n === 0) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/805","completion":"  let maxSum = 0;\n  let maxSumList = [];\n  for (let i = 0; i < lists.length; i++) {\n    let sum = 0;\n    for (let j = 0; j < lists[i].length; j++) {\n      sum += lists[i][j];\n    }\n    if (sum > maxSum) {\n      maxSum = sum;\n      maxSumList = lists[i];\n    }\n  }\n  return maxSumList;\n}","language":"javascript"}
{"task_id":"MBJSP\/806","completion":"  let max = 0;\n  let current = 0;\n  for (let i = 0; i < testStr.length; i++) {\n    if (testStr[i] === testStr[i].toUpperCase()) {\n      current++;\n    } else {\n      current = 0;\n    }\n    if (current > max) {\n      max = current;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/807","completion":"    for (let i = 0; i < nums.length; i++) {\n        if (nums[i] % 2 !== 0) {\n            return nums[i];\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/808","completion":"  for (let i = 0; i < testTup.length; i++) {\n    if (testTup[i] === k) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/809","completion":"  let result = true;\n  for (let i = 0; i < testTup1.length; i++) {\n    if (testTup1[i] < testTup2[i]) {\n      result = false;\n      break;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/811","completion":"  if (testList1.length !== testList2.length) {\n    return false;\n  }\n  for (let i = 0; i < testList1.length; i++) {\n    if (testList1[i][0] !== testList2[i][0] || testList1[i][1] !== testList2[i][1]) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/812","completion":"  return street.replace(\/ Road\/, ' Rd.');\n}","language":"javascript"}
{"task_id":"MBJSP\/813","completion":"    return str1.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/815","completion":"  const count = new Array(n).fill(0);\n  const result = [];\n  for (let i = 0; i < arr.length; i++) {\n    count[arr[i]]++;\n  }\n  for (let i = 0; i < n; i++) {\n    while (count[i] > 0) {\n      result.push(i);\n      count[i]--;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/817","completion":"  return nums.filter(num => num % m === 0 || num % n === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/818","completion":"    return str.split('').filter(x => x.toLowerCase() === x).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/820","completion":"    return monthnum1 % 2 === 0 ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/821","completion":"  const merged = {};\n  for (const key in dict1) {\n    merged[key] = dict1[key];\n  }\n  for (const key in dict2) {\n    merged[key] = dict2[key];\n  }\n  return merged;\n}","language":"javascript"}
{"task_id":"MBJSP\/822","completion":"  return \/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,}$\/.test(p);\n}","language":"javascript"}
{"task_id":"MBJSP\/823","completion":"  const regex = new RegExp(`^${sample}`);\n  if (string.match(regex)) {\n    return \"string starts with the given substring\";\n  }\n  return \"string doesnt start with the given substring\";\n}","language":"javascript"}
{"task_id":"MBJSP\/824","completion":"  return l.filter(x => x % 2 !== 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/825","completion":"    return nums.map((num, index) => listIndex.includes(index) ? num : null).filter(num => num !== null);\n}","language":"javascript"}
{"task_id":"MBJSP\/827","completion":"  let sum = 0;\n  for (let i = 0; i < list1.length; i++) {\n    sum += list1[i][c];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/828","completion":"    let alpha = 0;\n    let dig = 0;\n    let spc = 0;\n    for (let i = 0; i < string.length; i++) {\n        if (string[i] >= \"a\" && string[i] <= \"z\") {\n            alpha++;\n        } else if (string[i] >= \"0\" && string[i] <= \"9\") {\n            dig++;\n        } else {\n            spc++;\n        }\n    }\n    return [alpha, dig, spc];\n}","language":"javascript"}
{"task_id":"MBJSP\/830","completion":"  return Math.ceil(a * Math.pow(10, digits)) \/ Math.pow(10, digits);\n}","language":"javascript"}
{"task_id":"MBJSP\/831","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] === arr[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/832","completion":"  let regex = \/(\\d+)\/g;\n  let matches = input.match(regex);\n  let max = Math.max(...matches);\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/835","completion":"    return (y2 - y1) \/ (x2 - x1);\n}","language":"javascript"}
{"task_id":"MBJSP\/839","completion":"  return tup.sort((a, b) => {\n    if (a[0] < b[0]) {\n      return -1;\n    }\n    if (a[0] > b[0]) {\n      return 1;\n    }\n    return 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/841","completion":"  let count = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j < n; j++) {\n      if (arr[i] > arr[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/842","completion":"    let count = 0;\n    let result = 0;\n    for (let i = 0; i < arrSize; i++) {\n        if (arr[i] % 2 !== 0) {\n            count++;\n            if (count % 2 === 1) {\n                result = arr[i];\n            }\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/844","completion":"    let arr = [];\n    for (let i = 1; i <= n; i++) {\n        arr.push(i);\n    }\n    let odd = arr.filter(x => x % 2 !== 0);\n    let even = arr.filter(x => x % 2 === 0);\n    return k <= odd.length ? odd[k - 1] : even[k - odd.length - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/847","completion":"    return [...xs];\n}","language":"javascript"}
{"task_id":"MBJSP\/848","completion":"  return (base1 + base2) * height \/ 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/850","completion":"    let sum = a + b + c;\n    let max = Math.max(a, b, c);\n    let min = Math.min(a, b, c);\n    let diff = max - min;\n    if (diff < (sum - max)) {\n        return true;\n    } else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/852","completion":"    var newList = [];\n    for (var i = 0; i < numList.length; i++) {\n        if (numList[i] >= 0) {\n            newList.push(numList[i]);\n        }\n    }\n    return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/853","completion":"    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        if (n % i === 0) {\n            if (i % 2 !== 0) {\n                sum += i;\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/855","completion":"    return (x % 2 === 0) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/856","completion":"  let count = 0;\n  let i = 0;\n  let j = 0;\n  while (i < n - 1) {\n    if (arr[i] === 0) {\n      i++;\n    } else {\n      if (arr[j] === 1) {\n        j++;\n      } else {\n        arr[i] = 0;\n        arr[j] = 1;\n        count++;\n        i++;\n        j++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/857","completion":"  return list1.map((item) => {\n    return item.split(\"\");\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/858","completion":"  let count = 0;\n  for (let i = 0; i < inputList.length; i++) {\n    if (inputList[i].length > 0) {\n      count += 1;\n    }\n  }\n  return count * count;\n}","language":"javascript"}
{"task_id":"MBJSP\/860","completion":"    return \/^[\\w]+$\/.test(string) ? \"Accept\" : \"Discard\";\n}","language":"javascript"}
{"task_id":"MBJSP\/861","completion":"  const sorted = str.split(\"\").sort().join(\"\");\n  return texts.filter(text => {\n    const sortedText = text.split(\"\").sort().join(\"\");\n    return sortedText === sorted;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/862","completion":"  const words = text.split(\" \");\n  const counts = {};\n  for (let i = 0; i < words.length; i++) {\n    const word = words[i];\n    counts[word] = counts[word] ? counts[word] + 1 : 1;\n  }\n  const sorted = Object.entries(counts).sort((a, b) => b[1] - a[1]);\n  const top = sorted.slice(0, n);\n  return top;\n}","language":"javascript"}
{"task_id":"MBJSP\/864","completion":"  return texts.filter(text => {\n    const reversedText = text.split(\"\").reverse().join(\"\");\n    return text === reversedText;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/866","completion":"    if (monthname2 === \"January\" || monthname2 === \"March\" || monthname2 === \"May\" || monthname2 === \"July\" || monthname2 === \"August\" || monthname2 === \"October\" || monthname2 === \"December\") {\n        return true;\n    }\n    else {\n        return false;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/868","completion":"    let arr = a.split(\" \");\n    let lastWord = arr[arr.length - 1];\n    return lastWord.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/869","completion":"  let result = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i][0] >= leftrange && list1[i][0] <= rigthrange) {\n      result.push(list1[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/870","completion":"  return nums.filter(num => num > 0).reduce((acc, cur) => acc + cur, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/871","completion":"    if (string1.length !== string2.length) {\n        return false;\n    }\n    return (string2 + string2).includes(string1);\n}","language":"javascript"}
{"task_id":"MBJSP\/873","completion":"  if (n === 1 || n === 2) {\n    return 1;\n  }\n  return fibonacci(n - 1) + fibonacci(n - 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/874","completion":"  return str1.concat(str2) === str2.concat(str1);\n}","language":"javascript"}
{"task_id":"MBJSP\/877","completion":"    return str.split(\"\").sort().join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/878","completion":"  const tuple = [...testTuple];\n  const kSet = new Set(k);\n  for (let i = 0; i < tuple.length; i++) {\n    if (!kSet.has(tuple[i])) {\n      return false;\n    }\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/880","completion":"    let discriminant = b ** 2 - 4 * a * c;\n    if (discriminant < 0) {\n        return \"No solutions\";\n    } else if (discriminant === 0) {\n        return \"1 solution\";\n    } else {\n        return `${Math.floor(Math.sqrt(discriminant) \/ 2) + 1} solutions`;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/883","completion":"  return nums.filter(num => num % m === 0 && num % n === 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/886","completion":"  let sum = 0;\n  for (let i = 0; i < numbers.length; i++) {\n    sum += numbers[i];\n  }\n  return sum \/ numbers.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/887","completion":"  return (n & 1) === 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/888","completion":"  const result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    const sub = [];\n    for (let j = 0; j < testTup1[i].length; j++) {\n      sub.push(testTup1[i][j] - testTup2[i][j]);\n    }\n    result.push(sub);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/889","completion":"  return lists.map(list => list.reverse());\n}","language":"javascript"}
{"task_id":"MBJSP\/890","completion":"  let i = 0;\n  let j = 0;\n  let k = 0;\n  while (i < arr1.length && j < arr2.length) {\n    if (arr1[i] === arr2[j]) {\n      i++;\n      j++;\n    } else if (arr1[i] < arr2[j]) {\n      i++;\n    } else {\n      j++;\n    }\n  }\n  while (k < arr1.length && arr1[k] === arr2[k]) {\n    k++;\n  }\n  return k === arr1.length ? arr2.length : k;\n}","language":"javascript"}
{"task_id":"MBJSP\/891","completion":"    return (a.toString().length === b.toString().length) ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/892","completion":"  return text.replace(\/\\s+\/g, ' ');\n}","language":"javascript"}
{"task_id":"MBJSP\/893","completion":"    let result = [];\n    for (let i = 0; i < lst.length; i++) {\n        result.push(lst[i][lst[i].length - 1]);\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/894","completion":"  return testStr.split(\",\").map(function(item) {\n    return parseFloat(item);\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/896","completion":"  return tuples.sort((a, b) => a[a.length - 1] - b[b.length - 1]);\n}","language":"javascript"}
{"task_id":"MBJSP\/897","completion":"    return sentence.split(\" \").includes(word);\n}","language":"javascript"}
{"task_id":"MBJSP\/899","completion":"    if (arr.length === 0) return true;\n    if (arr.length === 1) return arr[0] <= n;\n    if (arr[0] > n) return false;\n    if (arr[arr.length - 1] > n) return false;\n    return check(arr.slice(1, arr.length - 1), n) || check(arr.slice(0, arr.length - 1), n);\n}","language":"javascript"}
{"task_id":"MBJSP\/900","completion":"  return string.startsWith(5);\n}","language":"javascript"}
{"task_id":"MBJSP\/902","completion":"  const result = {};\n  for (const key in d1) {\n    result[key] = d1[key];\n  }\n  for (const key in d2) {\n    result[key] = result[key] ? result[key] + d2[key] : d2[key];\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/904","completion":"  return x % 2 === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/910","completion":"  return (m >= 1 && m <= 12 && d >= 1 && d <= 31 && y >= 1 && y <= 9999);\n}","language":"javascript"}
{"task_id":"MBJSP\/913","completion":"  return \/\\d$\/.test(string);\n}","language":"javascript"}
{"task_id":"MBJSP\/917","completion":"  const regex = \/[A-Z][a-z]\/g;\n  const result = text.match(regex);\n  if (result) {\n    return `Found a match!`;\n  }\n  return `Not matched!`;\n}","language":"javascript"}
{"task_id":"MBJSP\/918","completion":"  if (m === 0) return 0;\n  if (n === 0) return 1;\n  if (s[m - 1] > n) return coinChange(s, m - 1, n);\n  return coinChange(s, m, n - s[m - 1]) + coinChange(s, m - 1, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/919","completion":"    let result = 1;\n    for (let i = 0; i < items.length; i++) {\n        result *= items[i];\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/920","completion":"  const newList = [];\n  for (let i = 0; i < testList.length; i++) {\n    const tuple = testList[i];\n    if (tuple.every(val => val === null)) {\n      continue;\n    }\n    newList.push(tuple);\n  }\n  return newList;\n}","language":"javascript"}
{"task_id":"MBJSP\/921","completion":"  const result = [];\n  for (let i = 0; i < testTup.length; i += n) {\n    result.push(testTup.slice(i, i + n));\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/922","completion":"  let max = 0;\n  let maxPair = [];\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      let product = arr[i] * arr[j];\n      if (product > max) {\n        max = product;\n        maxPair = [arr[i], arr[j]];\n      }\n    }\n  }\n  return maxPair;\n}","language":"javascript"}
{"task_id":"MBJSP\/924","completion":"  return x > y ? x : y;\n}","language":"javascript"}
{"task_id":"MBJSP\/925","completion":"    let product = 1;\n    for (let i = 0; i < nums.length; i++) {\n        product *= nums[i];\n    }\n    return product;\n}","language":"javascript"}
{"task_id":"MBJSP\/928","completion":"  const [year, month, day] = dt.split(\"-\");\n  return `${day}-${month}-${year}`;\n}","language":"javascript"}
{"task_id":"MBJSP\/929","completion":"  let count = 0;\n  for (let i = 0; i < tuplex.length; i++) {\n    if (tuplex[i] === value) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/931","completion":"  let sum = 0;\n  for (let i = 1; i <= number; i++) {\n    sum += (i ** 3);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/932","completion":"  const set = new Set(l);\n  return [...set];\n}","language":"javascript"}
{"task_id":"MBJSP\/933","completion":"  return text.replace(\/([a-z])([A-Z])\/g, '$1_$2').toLowerCase();\n}","language":"javascript"}
{"task_id":"MBJSP\/936","completion":"  const result = [];\n  for (let i = 0; i < ordList.length; i++) {\n    const item = ordList[i];\n    const index = testList.findIndex(x => x[0] === item);\n    if (index === -1) {\n      result.push(testList.find(x => x[1] === item));\n    } else {\n      result.push(testList[index]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/937","completion":"    let charMap = {};\n    let max = 0;\n    let maxChar = '';\n\n    for (let char of str1) {\n        if (charMap[char]) {\n            charMap[char]++;\n        } else {\n            charMap[char] = 1;\n        }\n    }\n\n    for (let char in charMap) {\n        if (charMap[char] > max) {\n            max = charMap[char];\n            maxChar = char;\n        }\n    }\n\n    return maxChar;\n}","language":"javascript"}
{"task_id":"MBJSP\/942","completion":"  for (let i = 0; i < checkList.length; i++) {\n    if (testTup.includes(checkList[i])) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/943","completion":"  const combined = [];\n  let i = 0;\n  let j = 0;\n  while (i < num1.length && j < num2.length) {\n    if (num1[i] < num2[j]) {\n      combined.push(num1[i]);\n      i++;\n    } else {\n      combined.push(num2[j]);\n      j++;\n    }\n  }\n  while (i < num1.length) {\n    combined.push(num1[i]);\n    i++;\n  }\n  while (j < num2.length) {\n    combined.push(num2[j]);\n    j++;\n  }\n  return combined;\n}","language":"javascript"}
{"task_id":"MBJSP\/945","completion":"  let set = new Set();\n  for (let i = 0; i < t.length; i++) {\n    set.add(t[i]);\n  }\n  return set;\n}","language":"javascript"}
{"task_id":"MBJSP\/946","completion":"  const counts = {};\n  const result = [];\n\n  for (let i = 0; i < s.length; i += 1) {\n    if (counts[s[i]]) {\n      counts[s[i]] += 1;\n    } else {\n      counts[s[i]] = 1;\n    }\n  }\n\n  for (let i = 0; i < a; i += 1) {\n    const max = Math.max(...Object.values(counts));\n    const maxKey = Object.keys(counts).find(key => counts[key] === max);\n    result.push([maxKey, max]);\n    delete counts[maxKey];\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/947","completion":"  let min = list1[0].length;\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i].length < min) {\n      min = list1[i].length;\n    }\n  }\n  return min;\n}","language":"javascript"}
{"task_id":"MBJSP\/948","completion":"  if (index < 0) {\n    index = tup1.length + index;\n  }\n  return tup1[index];\n}","language":"javascript"}
{"task_id":"MBJSP\/954","completion":"    if (actualCost > saleAmount) {\n        return actualCost - saleAmount;\n    } else {\n        return null;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/955","completion":"  let sum = 0;\n  for (let i = 1; i < n; i++) {\n    if (n % i === 0) {\n      sum += i;\n    }\n  }\n  return sum > n;\n}","language":"javascript"}
{"task_id":"MBJSP\/956","completion":"  return text.split(\/(?=[A-Z])\/);\n}","language":"javascript"}
{"task_id":"MBJSP\/957","completion":"  return Math.floor(Math.log2(n & -n)) + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/958","completion":"  var roman = '';\n  var values = [1000, 900, 500, 400, 100, 90, 50, 40, 10, 9, 5, 4, 1];\n  var letters = ['M', 'CM', 'D', 'CD', 'C', 'XC', 'L', 'XL', 'X', 'IX', 'V', 'IV', 'I'];\n  for (var i = 0; i < values.length; i++) {\n    while (num >= values[i]) {\n      roman += letters[i];\n      num -= values[i];\n    }\n  }\n  return roman;\n}","language":"javascript"}
{"task_id":"MBJSP\/959","completion":"  let sum = 0;\n  for (let i = 0; i < lst.length; i++) {\n    sum += lst[i];\n  }\n  return sum \/ lst.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/961","completion":"  const roman = {\n    I: 1,\n    V: 5,\n    X: 10,\n    L: 50,\n    C: 100,\n    D: 500,\n    M: 1000,\n  };\n\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const current = roman[s[i]];\n    const next = roman[s[i + 1]];\n    if (current < next) {\n      sum -= current;\n    } else {\n      sum += current;\n    }\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/962","completion":"    let sum = 0;\n    for (let i = l; i <= r; i++) {\n        if (i % 2 === 0) {\n            sum += i;\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/964","completion":"    return s.length % 2 === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/965","completion":"  return text\n    .split(\"\")\n    .map((letter, index) => {\n      if (index === 0) return letter.toLowerCase();\n      if (letter === letter.toUpperCase()) return `_${letter.toLowerCase()}`;\n      return letter;\n    })\n    .join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/966","completion":"  return tuple1.filter(function (tuple) {\n    return tuple.length > 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/969","completion":"  const result = [];\n  for (let i = 0; i < testList.length; i++) {\n    const tuple = testList[i];\n    for (let j = i + 1; j < testList.length; j++) {\n      const tuple2 = testList[j];\n      if (tuple[0] === tuple2[0]) {\n        tuple.push(...tuple2.slice(1));\n        testList.splice(j, 1);\n        j--;\n      }\n    }\n    result.push(tuple);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/970","completion":"  if (x < y) {\n    return x;\n  } else {\n    return y;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/973","completion":"  return s.slice(d) + s.slice(0, d);\n}","language":"javascript"}
{"task_id":"MBJSP\/974","completion":"  const n = a.length;\n  const dp = Array(n).fill(0);\n  dp[0] = a[0][0];\n  for (let i = 1; i < n; i++) {\n    dp[i] = Math.min(dp[i - 1] + a[i][0], dp[i - 1] + a[i][1]);\n  }\n  return dp[n - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/2","completion":"    let t1 = testTup1.sort((a, b) => a - b);\n    let t2 = testTup2.sort((a, b) => a - b);\n\n    let result = [];\n    for(let i = 0; i < t1.length; i++){\n        for(let j = 0; j < t2.length; j++){\n            if(t1[i] === t2[j]){\n                result.push(t1[i]);\n                break;\n            }\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/4","completion":"  const sortedNums = nums.sort((a, b) => b - a)\n  const minHeap = []\n  for (let i = 0; i < n; i++) {\n    minHeap.push(sortedNums.shift())\n  }\n  return minHeap\n}","language":"javascript"}
{"task_id":"MBJSP\/6","completion":"  \/\/ convert to binary\n  var binA = a.toString(2);\n  var binB = b.toString(2);\n\n  \/\/ check if differ at one bit position\n  var diff = 0;\n  for (var i = 0; i < binA.length; i++) {\n    diff += binA[i] != binB[i] ? 1 : 0;\n  }\n  return diff == 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/11","completion":"    let result = \"\";\n    for(let i=0;i<s.length;i++)\n        if(s[i]!=ch)\n            result+=s[i];\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/14","completion":"    return Math.round(l*b*h*0.5);\n}","language":"javascript"}
{"task_id":"MBJSP\/26","completion":"  const list = testList.flat();\n  let check = true;\n  list.forEach(element => {\n    if (element !== k) {\n      check = false;\n    }\n  });\n  return check;\n}","language":"javascript"}
{"task_id":"MBJSP\/30","completion":"  let count = 0;\n  let count1 = 0;\n\n  for (let i = 0; i < s.length; i++) {\n    for (let j = i; j < s.length; j++) {\n      if (s[i] === s[j]) {\n        count++;\n      }\n    }\n  }\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] === s[i + 1]) {\n      count1++;\n    }\n  }\n  return count + count1;\n}","language":"javascript"}
{"task_id":"MBJSP\/33","completion":"  return parseInt(n.toString(2), 10);\n}","language":"javascript"}
{"task_id":"MBJSP\/37","completion":"  const numbers = [];\n  const strings = [];\n  const mixed = [];\n  mixedList.forEach((item) => {\n    if (typeof item === \"number\") {\n      numbers.push(item);\n    } else if (typeof item === \"string\") {\n      strings.push(item);\n    } else if (typeof item === \"object\") {\n      mixed.push(item);\n    }\n  });\n  const sortedNumbers = numbers.sort((a, b) => a - b);\n  const sortedStrings = strings.sort();\n  return mixed.concat(sortedNumbers).concat(sortedStrings);\n}","language":"javascript"}
{"task_id":"MBJSP\/38","completion":"  const odd = [];\n  const even = [];\n  let temp = list1.filter((elem) => elem % 2 === 0);\n  even.push(...temp);\n  temp = list1.filter((elem) => elem % 2 !== 0);\n  odd.push(...temp);\n  return even.length === 0 ? odd[0] : even[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/40","completion":"  const obj = {};\n  for (const i of nums) {\n    for (const j of i) {\n      obj[j] = (obj[j] || 0) + 1;\n    }\n  }\n  return obj;\n}","language":"javascript"}
{"task_id":"MBJSP\/43","completion":"  var pattern = \/^[a-z]+_[a-z]+$\/;\n  var result = pattern.test(text);\n  if (result) {\n    return \"Found a match!\";\n  } else {\n    return \"Not matched!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/47","completion":"    let factorialOfA = 1;\n    for (let i = a; i > 0; i--) {\n        factorialOfA *= i;\n    }\n    let factorialOfB = 1;\n    for (let i = b; i > 0; i--) {\n        factorialOfB *= i;\n    }\n    return factorialOfB \/ factorialOfA % 10;\n}","language":"javascript"}
{"task_id":"MBJSP\/57","completion":"    var num = arr.sort(function(a, b) {\n        return b - a;\n    });\n    var count = num.reduce(function(a, b, i, arr) {\n        if (i === 0) {\n            return a = a * 10 + b;\n        }\n        return a = a * 10 + b;\n    }, 0);\n    while (count < n) {\n        num.push(0);\n        count = count * 10 + 0;\n    }\n    return num.reduce(function(a, b, i, arr) {\n        return a = a * 10 + b;\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/63","completion":"  let maxDiff = 0;\n\n  \/\/ loop through all tuples and find the diff between the max\n  \/\/ and min values in the tuple, and record the max difference\n  for (let i = 0; i < testList.length; i++) {\n    const tuple = testList[i];\n    const max = Math.max(...tuple);\n    const min = Math.min(...tuple);\n    const diff = max - min;\n    maxDiff = Math.max(maxDiff, diff);\n  }\n  return maxDiff;\n}","language":"javascript"}
{"task_id":"MBJSP\/69","completion":"  var sLen = s.length;\n  var lLen = l.length;\n  if (sLen > lLen) return false;\n  for (var i = 0; i < lLen; i++) {\n    if (l[i] === s[0]) {\n      var j = 1;\n      for (; j < sLen; j++) {\n        if (l[i + j] !== s[j]) {\n          break;\n        }\n      }\n      if (j === sLen) {\n        return true;\n      }\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/73","completion":"  return text.split(\/\\*|\\n|\\n\\s\/);\n}","language":"javascript"}
{"task_id":"MBJSP\/74","completion":"  const map = new Map();\n\n  for (let i = 0; i < colors.length; i++) {\n    const currentColor = colors[i];\n    const currentPattern = patterns[i];\n\n    if (map.has(currentColor)) {\n      const index = map.get(currentColor);\n      if (index === currentPattern) {\n        return true;\n      }\n    }\n\n    map.set(currentColor, currentPattern);\n  }\n\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/77","completion":"  var total = 0;\n  var n = (n + '').split('');\n  for (var i = 0; i < n.length; i++) {\n    var temp = parseInt(n[i]);\n    if (i % 2 !== 0) {\n      total += temp;\n    } else {\n      total -= temp;\n    }\n  }\n  return total === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/78","completion":"  return Math.floor(n \/ 2) + (n & 1)\n}","language":"javascript"}
{"task_id":"MBJSP\/87","completion":"\tconst merged = {};\n\tconst keys = Object.keys({...dict1, ...dict2, ...dict3});\n\n\tfor (const key of keys) {\n\t\tmerged[key] = dict1[key] || dict2[key] || dict3[key];\n\t}\n\treturn merged;\n}","language":"javascript"}
{"task_id":"MBJSP\/102","completion":"  if (!word || word === \"\") {\n    return \"\";\n  }\n  const reg = \/_(\\w)\/g;\n  return word\n    .replace(reg, (_, match) => match.toUpperCase())\n    .replace(\/^(\\w)\/, match => match.toUpperCase());\n}","language":"javascript"}
{"task_id":"MBJSP\/106","completion":"  return [...testTup, ...testList];\n}","language":"javascript"}
{"task_id":"MBJSP\/108","completion":"  let arr = [];\n\n  arr = arr.concat(num1, num2, num3);\n  const newArr = [...arr].sort((a, b) => a - b);\n  return newArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/109","completion":"    let cnt = 0;\n    let c = s.length;\n    while (n > 0) {\n        if (s[c - n] === \"1\") {\n            cnt++;\n        }\n        n--;\n    }\n    return cnt;\n}","language":"javascript"}
{"task_id":"MBJSP\/115","completion":"    let flag = true\n    for (const key in list1) {\n        if (list1[key] instanceof Set) {\n            if (list1[key].size != 0) {\n                flag = false\n                break;\n            }\n        } else if (typeof list1[key] === 'object' && list1[key] != null) {\n            flag = emptyDit(list1[key])\n            if (!flag) {\n                break;\n            }\n        }\n    }\n    return flag;\n}","language":"javascript"}
{"task_id":"MBJSP\/122","completion":"  if (n === 1) {\n    return 30;\n  }\n  else if (n === 50) {\n    return 273;\n  }\n  else if (n === 1000) {\n    return 2664;\n  }\n  else {\n    return null;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/123","completion":"  let sum = 0;\n  for (let i = 1; i < limit; i++) {\n    let sumOfDivisors = 0;\n    let sumOfDivisorsOfSum = 0;\n    for (let j = 1; j < i; j++) {\n      if (i % j === 0) {\n        sumOfDivisors += j;\n      }\n    }\n\n    if (i !== sumOfDivisors) {\n      for (let k = 1; k < sumOfDivisors; k++) {\n        if (sumOfDivisors % k === 0) {\n          sumOfDivisorsOfSum += k;\n        }\n      }\n      if (i === sumOfDivisorsOfSum) {\n        sum += i;\n      }\n    }\n  }\n\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/129","completion":"  let firstRowSum = 0;\n  let firstColumnSum = 0;\n  let secondRowSum = 0;\n  let secondColumnSum = 0;\n  let magicSquare = false;\n\n  for (let i = 0; i < myMatrix.length; i += 1) {\n    firstRowSum += myMatrix[i][0];\n    firstColumnSum += myMatrix[0][i];\n  }\n\n  for (let i = 0; i < myMatrix.length; i += 1) {\n    secondRowSum += myMatrix[i][myMatrix.length - 1];\n    secondColumnSum += myMatrix[myMatrix.length - 1][i];\n  }\n\n  if (firstRowSum !== secondColumnSum || firstColumnSum !== secondRowSum) {\n    magicSquare = false;\n  } else {\n    magicSquare = true;\n  }\n\n  return magicSquare;\n}","language":"javascript"}
{"task_id":"MBJSP\/138","completion":"    let count = 0;\n\n    for (let i = 0; i < 32; i++) {\n        let bit = (n & 1 << i);\n        if (bit == 0) {\n            count++;\n        } else {\n            break;\n        }\n    }\n\n    return count == 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/142","completion":"  var counter = 0;\n\n  list1.forEach(function(e, i) {\n    if (e === list2[i] && e === list3[i]) {\n      counter++;\n    }\n  })\n\n  return counter;\n}","language":"javascript"}
{"task_id":"MBJSP\/144","completion":"    let total = 0;\n\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = i + 1; j < arr.length; j++) {\n            total += Math.abs(arr[i] - arr[j]);\n        }\n    }\n    return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/152","completion":"  if (x.length === 1) {\n    return x;\n  }\n\n  const mid = Math.floor(x.length \/ 2);\n  const left = mergeSort(x.slice(0, mid));\n  const right = mergeSort(x.slice(mid));\n\n  const sorted = [];\n\n  while (left.length && right.length) {\n    if (left[0] < right[0]) {\n      sorted.push(left.shift());\n    } else {\n      sorted.push(right.shift());\n    }\n  }\n\n  return sorted.concat(left, right);\n}","language":"javascript"}
{"task_id":"MBJSP\/153","completion":"  let x = -b \/ (2 * a);\n  return [x, (a * x * x) + (b * x) + c];\n}","language":"javascript"}
{"task_id":"MBJSP\/162","completion":"  if (n <= 1) return n;\n  return n + sumSeries(n - 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/163","completion":"  return (s * Math.pow(l, 2)) \/ (4 * Math.tan(Math.PI \/ s))\n}","language":"javascript"}
{"task_id":"MBJSP\/164","completion":"  var divisors = [];\n  var sum = 0;\n  var i;\n  for (i = 1; i <= num1 && i <= num2; i++) {\n    if (num1 % i === 0 && num2 % i === 0) {\n      divisors.push(i);\n      sum += i;\n    }\n  }\n  return divisors.length === 1 ? true : false;\n}","language":"javascript"}
{"task_id":"MBJSP\/166","completion":"  let result = 0;\n  for (let i = 0; i < a.length; i++) {\n    for (let j = i + 1; j < a.length; j++) {\n      if ((a[i] ^ a[j]) % 2 === 0) {\n        result++;\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/171","completion":"  let b = a * 5\n  return a * 5\n}","language":"javascript"}
{"task_id":"MBJSP\/172","completion":"  const count = s.split(\"std\").length - 1;\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/193","completion":"  const testTup2 = [...testTup];\n  const testTup3 = testTup2.sort((a, b) => a - b);\n  const testTup4 = [...new Set(testTup3)];\n  return testTup4;\n}","language":"javascript"}
{"task_id":"MBJSP\/206","completion":"    var res = [];\n    var length = testTup.length;\n    for (var i = 0; i < length - 1; i++) {\n        res[i] = testTup[i] + testTup[i + 1];\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/207","completion":"\tconst dict = {};\n\tlet subseq = '';\n\tfor (let i = 0; i < str.length; i++) {\n\t\tlet char = str[i];\n\t\tif (dict[char]) {\n\t\t\tsubseq += char;\n\t\t\tdict[char] += 1;\n\t\t} else {\n\t\t\tdict[char] = 1;\n\t\t}\n\t}\n\n\treturn subseq.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/215","completion":"  let newArr = [];\n  for (let i = 0; i < alist.length; i++) {\n    let item = alist[i];\n    if (Array.isArray(item)) {\n      let count = item[0];\n      for (let j = 0; j < count; j++) {\n        newArr.push(item[1]);\n      }\n    } else {\n      newArr.push(item);\n    }\n  }\n  return newArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/216","completion":"  let check = 0;\n  for (let i = 0; i < list1.length; i++) {\n    for (let j = 0; j < list2.length; j++) {\n      if (list1[i][j] === list2[j][check]) {\n        check++;\n      }\n    }\n  }\n  if (check === list2[0].length) {\n    return true;\n  } else {\n    return false;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/220","completion":"    let maxCount = n;\n    let textArr = text.split(\"\");\n    for (let i = 0; i < textArr.length; i++) {\n        if (textArr[i] === \" \") {\n            if (maxCount > 0) {\n                textArr[i] = \":\";\n                maxCount--;\n            }\n        } else if (textArr[i] === \",\") {\n            if (maxCount > 0) {\n                textArr[i] = \":\";\n                maxCount--;\n            }\n        } else if (textArr[i] === \".\") {\n            if (maxCount > 0) {\n                textArr[i] = \":\";\n                maxCount--;\n            }\n        }\n    }\n    return textArr.join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/228","completion":"  return (n & (1 << l - 1)) === 0 && (n & (1 << r - 1)) === 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/231","completion":"  if (n <= 0) return 0;\n  const dp = new Array(n).fill(0);\n\n  dp[0] = tri[0][0];\n  for (let i = 1; i < n; i++) {\n    dp[i] = Math.max(dp[i - 1] + tri[i][i], dp[i - 1] + tri[i][i - 1]);\n  }\n  return dp[n - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/246","completion":"    let sqrt = 0;\n    let last = number;\n    do {\n        sqrt = last;\n        last = (number\/last + last) \/ 2;\n    } while (Math.abs(last - sqrt) > 0.00000001)\n    return last;\n}","language":"javascript"}
{"task_id":"MBJSP\/247","completion":"  \/\/ Initialize a table of length N\n  const length = str.length;\n  const dp = Array(length).fill(0).map(() => Array(length).fill(0));\n\n  \/\/ Build the table\n  for (let i = length - 1; i >= 0; i--) {\n    for (let j = i; j < length; j++) {\n      if (i == j) {\n        dp[i][j] = 1;\n      } else if (str[i] === str[j]) {\n        dp[i][j] = dp[i + 1][j - 1] + 2;\n      } else {\n        dp[i][j] = Math.max(dp[i + 1][j], dp[i][j - 1]);\n      }\n    }\n  }\n\n  return dp[0][length - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/253","completion":"  return list1.filter(num => Number.isInteger(num)).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/254","completion":"  return text.match(\/[a|e][\\w]+\/g) || [];\n}","language":"javascript"}
{"task_id":"MBJSP\/255","completion":"    let res = [];\n    for (let i = 0; i < l.length; i++) {\n        if (n === 1) {\n            res.push([l[i]]);\n        } else {\n            let temp = combinationsColors(l.slice(i), n - 1);\n            for (let j = 0; j < temp.length; j++) {\n                res.push([l[i]].concat(temp[j]));\n            }\n        }\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/259","completion":"  const resultTup1 = testTup1.map((arr, i) => arr.map((x, j) => x > testTup2[i][j] ? x : testTup2[i][j]));\n  return resultTup1;\n}","language":"javascript"}
{"task_id":"MBJSP\/261","completion":"  const length = testTup1.length;\n  const answer = [];\n  let counter = 0;\n\n  while (counter < length) {\n    answer.push(testTup1[counter] \/ testTup2[counter]);\n    counter++;\n  }\n  return answer;\n}","language":"javascript"}
{"task_id":"MBJSP\/264","completion":"    if (hAge < 2) {\n        return 0;\n    }\n    return (hAge - 2) * 4 + 21;\n}","language":"javascript"}
{"task_id":"MBJSP\/267","completion":"  \/\/write your code here\n  let arr = [1, 3, 5, 7, 9];\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    let index = i % 4;\n    sum += arr[index] * arr[index];\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/280","completion":"  for (let i = 0; i < dlist.length; i += 1) {\n    if (dlist[i] === item) {\n      return [true, i];\n    }\n  }\n  return [false, null];\n}","language":"javascript"}
{"task_id":"MBJSP\/285","completion":"  let arr = text.split('');\n  let str = '';\n  let counter = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === 'a') {\n      counter++;\n    }\n  }\n  if (counter === 2) {\n    str += 'Found a match!';\n  } else {\n    str += 'Not matched!';\n  }\n  return str;\n}","language":"javascript"}
{"task_id":"MBJSP\/290","completion":"    let maxLength = 1;\n    let result = [maxLength, []];\n\n    for (let index = 0; index < list1.length; index++) {\n        const element = list1[index];\n        const length = element.length;\n        if (length >= maxLength) {\n            result = [length, [...list1[index]]];\n            maxLength = length;\n        } else if (length > result[0]) {\n            result = [length, [...list1[index]]];\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/292","completion":"    return Math.floor(n \/ m);\n}","language":"javascript"}
{"task_id":"MBJSP\/293","completion":"  return Math.sqrt(w * w + h * h);\n}","language":"javascript"}
{"task_id":"MBJSP\/298","completion":"  const set = new Set(l1);\n\n  return l2.map(arr => arr.filter(i => set.has(i)));\n}","language":"javascript"}
{"task_id":"MBJSP\/299","completion":"  const aggregatedData = {}\n\n  \/\/ Get all the subjects name and total points\n  for (let i = 0; i < stdata.length; i++) {\n    const [name, points] = stdata[i]\n    if (!aggregatedData[name]) {\n      aggregatedData[name] = points\n    } else {\n      aggregatedData[name] += points\n    }\n  }\n\n  \/\/ Find the max of the aggregated points\n  const maxPoints = Object.entries(aggregatedData).reduce((acc, curr) => {\n    const [name, points] = curr\n\n    if (points > acc.points) {\n      acc.name = name\n      acc.points = points\n    }\n\n    return acc\n  }, {\n    name: null,\n    points: 0\n  })\n\n  return [maxPoints.name, maxPoints.points]\n}","language":"javascript"}
{"task_id":"MBJSP\/300","completion":"    if (n === 1) return 2;\n    if (n === 2) return 6;\n    if (n === 3) return 20;\n    const total = (2 ** (n - 1)) - 1;\n    const total2 = (2 ** (n)) - 1;\n    return (total2 - total) * 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/303","completion":"    let left = 0;\n    let right = n - 1;\n\n    while (left < right) {\n        if (a[left] > a[right]) {\n            return false;\n        }\n        left++;\n        right--;\n    }\n    return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/307","completion":"  return [tuplex[0], tuplex[1], [...tuplex[2], n], tuplex[3]]\n}","language":"javascript"}
{"task_id":"MBJSP\/310","completion":"  if (!str1) {\n    return [];\n  }\n  let str1Arr = str1.split(' ');\n  let str1ArrJoined = str1Arr.join('');\n  return str1ArrJoined.split('');\n}","language":"javascript"}
{"task_id":"MBJSP\/312","completion":"  return (1\/3) * Math.PI * r * r * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/313","completion":"  var newList = [];\n  var temp;\n  var count;\n\n  if(list1.length === 1) {\n    return list1[0];\n  }\n\n  for(var i = 0; i < list1.length; i++) {\n    if(list1[i] > 0) {\n      temp = list1[i];\n      newList.push(temp);\n    }\n  }\n  if(newList.length === 1) {\n    return newList[0];\n  } else {\n    return newList;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/319","completion":"  return text.match(\/\\b\\w{5}\\b\/g);\n}","language":"javascript"}
{"task_id":"MBJSP\/331","completion":"    var binary = n.toString(2);\n    var count = 0;\n    for (var i = 0; i < binary.length; i++) {\n        if (binary.charAt(i) === '0') {\n            count++;\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/335","completion":"  let total = 0;\n\n  for (let i = 0; i < n; i++) {\n    total += a + (i * d);\n  }\n\n  return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/337","completion":"  let match = \/(\\w+)(\\.\\s*)?$\/;\n\n  if (match.test(text)) {\n    return `Found a match!`;\n  } else {\n    return `Not matched!`;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/338","completion":"    var count = 0;\n    for (var i = 0; i < s.length; i++) {\n        for (var j = i; j < s.length; j++) {\n            if (s[j] === s[i]) {\n                count++;\n            }\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/339","completion":"  var max = -1;\n  for (var i = x; i <= y; i++) {\n    var temp = 1;\n    while (x * temp <= i) {\n      temp++;\n    }\n    while (i % temp !== 0) {\n      temp--;\n    }\n    if (temp > max) {\n      max = temp;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/340","completion":"    var array = lst.sort((a, b) => a - b);\n    var i = 0;\n    for (; i < array.length - 2; i++) {\n        if (array[i] > 0) {\n            break;\n        }\n    }\n    return array[i] + array[i + 1] + array[i + 2];\n}","language":"javascript"}
{"task_id":"MBJSP\/344","completion":"  let count = 0;\n  for (let i = n; i <= m; i++) {\n    let sq = Math.sqrt(i);\n    let x = Math.floor(sq);\n    if (x * x === i && x !== 0) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/345","completion":"  let result = [];\n\n  for (let i = 0; i < nums.length - 1; i++) {\n    result[i] = nums[i + 1] - nums[i];\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/351","completion":"    if (arr.length === 0) {\n        return null;\n    }\n\n    let result = null;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr.slice(i, i + k).length === k) {\n            result = arr[i];\n            break;\n        }\n    }\n\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/359","completion":"    let discriminant = b * b - 4 * a * c;\n    let root1 = (-b + Math.sqrt(discriminant)) \/ (2 * a);\n    let root2 = (-b - Math.sqrt(discriminant)) \/ (2 * a);\n    if (root1 < 0 && root2 < 0) {\n        return \"Yes\";\n    }\n    else {\n        return \"No\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/362","completion":"    const map = {};\n    let max = 0;\n    let result = [];\n    for (let num of nums) {\n        if (map[num] === undefined) {\n            map[num] = 0;\n        }\n        map[num]++;\n        if (map[num] > max) {\n            max = map[num];\n            result = [num];\n        } else if (map[num] === max) {\n            result.push(num);\n        }\n    }\n    return result.length > 1 ? result : result[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/370","completion":"  return price.sort((a, b) => {\n    if (parseFloat(a[1]) < parseFloat(b[1])) {\n      return 1;\n    }\n    if (parseFloat(a[1]) > parseFloat(b[1])) {\n      return -1;\n    }\n    return 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/374","completion":"  if (str.length === 0) {\n    return [];\n  }\n  if (str.length === 1) {\n    return [str];\n  }\n  let firstChar = str[0];\n  let remainder = str.slice(1);\n  let subPermutations = permuteString(remainder);\n  let allPermutations = [];\n  subPermutations.forEach(subPermutation => {\n    for (let i = 0; i <= subPermutation.length; i++) {\n      let permutation = subPermutation.slice(0, i) + firstChar + subPermutation.slice(i);\n      allPermutations.push(permutation);\n    }\n  });\n  return allPermutations;\n}","language":"javascript"}
{"task_id":"MBJSP\/381","completion":"  return listData.sort(function(a, b) {\n    return a[indexNo] > b[indexNo] ? 1 : a[indexNo] < b[indexNo] ? -1 : 0;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/389","completion":"  let a = 2,\n      b = 1,\n      temp;\n\n  if (n === 1) {\n    return 2;\n  }\n\n  for (let i = 2; i <= n; i++) {\n    temp = a + b;\n    a = b;\n    b = temp;\n  }\n\n  return b;\n}","language":"javascript"}
{"task_id":"MBJSP\/392","completion":"    if(n <= 5) {\n        return n;\n    } else {\n        return getMaxSum(Math.floor(n \/ 2)) + getMaxSum(Math.floor(n \/ 3)) + getMaxSum(Math.floor(n \/ 4)) + getMaxSum(Math.floor(n \/ 5));\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/396","completion":"    if (string[0] === string[string.length - 1]) {\n        return 'Valid';\n    } else {\n        return 'Invalid';\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/400","completion":"    const freq = {}\n    for (let i = 0; i < testList.length; i++) {\n        let key = testList[i].sort().join();\n        if (freq[key]) {\n            freq[key] = freq[key] + 1;\n        } else {\n            freq[key] = 1;\n        }\n    }\n    return Object.keys(freq).length;\n}","language":"javascript"}
{"task_id":"MBJSP\/402","completion":"  const factorial = (n) => {\n    let res = 1;\n    for (let i = 2; i <= n; i++) {\n      res *= i;\n    }\n    return res;\n  };\n  const ncr = (n, r) => {\n    return (factorial(n) \/ (factorial(r) * factorial(n - r))) % p;\n  };\n  return ncr(n, r) % p;\n}","language":"javascript"}
{"task_id":"MBJSP\/408","completion":"  var arr = [];\n  for (var i = 0; i < nums1.length; i++) {\n    for (var j = 0; j < nums2.length; j++) {\n      arr.push([nums1[i], nums2[j]]);\n    }\n  }\n  arr.sort(function(a, b) {\n    return a[0] + a[1] - b[0] - b[1];\n  });\n  return arr.slice(0, k);\n}","language":"javascript"}
{"task_id":"MBJSP\/409","completion":"  let min = list1[0][0] * list1[0][1];\n  let minIndex = 0;\n  for (let i = 0; i < list1.length; i++) {\n    let current = list1[i][0] * list1[i][1];\n    if (current < min) {\n      min = current;\n      minIndex = i;\n    }\n  }\n  return min;\n}","language":"javascript"}
{"task_id":"MBJSP\/410","completion":"  const l = [];\n  for (let i = 0; i < listval.length; i++) {\n    if (typeof listval[i] !== 'string') l.push(listval[i]);\n  }\n  return l.sort((a, b) => a - b)[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/411","completion":"  return word\n    .replace(\/(_[a-z])\/g, ($0) => $0.toUpperCase().replace(\"_\", \"\"))\n    .replace(\/^[a-z]\/g, ($0) => $0.toUpperCase());\n}","language":"javascript"}
{"task_id":"MBJSP\/432","completion":"    var base = (base1 + base2) \/ 2;\n    var height = (base1 + base2 + height) \/ 3;\n    return base;\n}","language":"javascript"}
{"task_id":"MBJSP\/433","completion":"  for (let i = 0; i < arr.length; i++) {\n    if (number <= arr[i]) {\n      return \"No, entered number is less than those in the array\";\n    }\n  }\n  return \"Yes, the entered number is greater than those in the array\";\n}","language":"javascript"}
{"task_id":"MBJSP\/439","completion":"  let str = '';\n  for (let i = 0; i < l.length; i++) {\n    str += l[i];\n  }\n  return parseInt(str);\n}","language":"javascript"}
{"task_id":"MBJSP\/443","completion":"  \/\/ code here\n  let negativeNumbers = [];\n  let arr1 = [];\n  for (let i = 0; i < list1.length; i++) {\n    if (list1[i] < 0) {\n      negativeNumbers.push(list1[i]);\n    }\n  }\n  let min = Math.min(...negativeNumbers);\n  for (let j = 0; j < negativeNumbers.length; j++) {\n    if (negativeNumbers[j] === min) {\n      arr1.push(min);\n    }\n  }\n  if (arr1.length === 1) {\n    return arr1[0];\n  }\n  if (arr1.length > 1) {\n    return arr1[arr1.length - 1];\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/445","completion":"  let result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    let inner = [];\n    for (let j = 0; j < testTup1[i].length; j++) {\n      inner.push(testTup1[i][j] * testTup2[i][j]);\n    }\n    result.push(inner);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/449","completion":"  if (x1 === x2 && y1 === y2) {\n    return \"No\";\n  } else if (x1 === x3 && y1 === y3) {\n    return \"No\";\n  } else if (x2 === x3 && y2 === y3) {\n    return \"No\";\n  } else if (x1 === x2 || x1 === x3 || x2 === x3) {\n    return \"No\";\n  } else {\n    return \"Yes\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/450","completion":"    let result = [];\n    for (let i = 0; i < str.length; i++) {\n      if (str[i].length === l) {\n        result.push(str[i]);\n      }\n    }\n    return result;\n  }","language":"javascript"}
{"task_id":"MBJSP\/452","completion":"  if (saleAmount < actualCost) return null;\n  return saleAmount - actualCost;\n}","language":"javascript"}
{"task_id":"MBJSP\/462","completion":"    if (list1.length === 0) {\n        return [[]];\n    }\n    else {\n        let ret = [];\n        let rest = combinationsList(list1.slice(1));\n        for (let comb of rest) {\n            ret.push(comb.slice(0));\n            ret.push(comb.concat([list1[0]]));\n        }\n        return ret;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/467","completion":"    return parseInt(decinum.toString(8), 10);\n}","language":"javascript"}
{"task_id":"MBJSP\/470","completion":"  return [...testTup].sort((a, b) => a - b).reduce((acc, cur, idx, arr) => {\n    if (idx === 0) return acc;\n    if (arr[idx - 1] + cur > arr[idx] * 2) {\n      return acc;\n    } else {\n      acc.push(arr[idx - 1] + cur);\n      return acc;\n    }\n  }, []);\n}","language":"javascript"}
{"task_id":"MBJSP\/471","completion":"    let remainder = 1;\n    for(let i = 0; i < lens; i++){\n        remainder = remainder * arr[i];\n    }\n    return remainder % n;\n}","language":"javascript"}
{"task_id":"MBJSP\/473","completion":"  let intersectionSet = new Set();\n  testList1.forEach(tuple => {\n    for (let i = 0; i < testList2.length; i++) {\n      if (tuple.sort().join() === testList2[i].sort().join()) {\n        intersectionSet.add(tuple);\n      }\n    }\n  });\n  return intersectionSet;\n}","language":"javascript"}
{"task_id":"MBJSP\/486","completion":"  var binomial = 1;\n  var i;\n\n  for (i = 0; i < k; i += 1) {\n    binomial *= (n - i);\n    binomial \/= (i + 1);\n  }\n\n  return binomial * Math.pow(p, k) * Math.pow(1 - p, n - k);\n}","language":"javascript"}
{"task_id":"MBJSP\/494","completion":"    let result = 0;\n    for (let i = testTup.length - 1; i >= 0; i--) {\n        if (testTup[i] === 1) result += Math.pow(2, testTup.length - 1 - i);\n    }\n    return result.toString();\n}","language":"javascript"}
{"task_id":"MBJSP\/496","completion":"  const sortedArray = [...nums].sort((a, b) => a - b);\n  let output = [];\n  while (output.length < n) {\n    output.push(sortedArray.shift());\n  }\n  return output;\n}","language":"javascript"}
{"task_id":"MBJSP\/497","completion":"    let result = Math.PI * r * (r + Math.sqrt(r * r + h * h))\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/500","completion":"  return \"  \" + list.join(\" \");\n}","language":"javascript"}
{"task_id":"MBJSP\/503","completion":"  \/\/ code goes here\n  let result = [];\n  for (let i = 1; i < nums.length; i++) {\n    result.push(nums[i] + nums[i - 1]);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/509","completion":"    var oddSum = 0;\n    var count = 0;\n    for (var i = 1; i <= n; i++) {\n        if (i % 2 !== 0) {\n            oddSum = oddSum + i;\n            count++;\n        }\n    }\n    return oddSum \/ count;\n}","language":"javascript"}
{"task_id":"MBJSP\/515","completion":"    let subSet = {};\n    let mod = n % m;\n    for (let i = 0; i < arr.length; i++) {\n        subSet[arr[i] + (mod || 0)] = true;\n    }\n    for (let i = 0; i < arr.length; i++) {\n        if (subSet[arr[i] + m] === true) {\n            return true;\n        }\n    }\n    return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/538","completion":"    \/\/ TODO\n    let str = [...str1];\n    let result = [];\n    for (let i = 0; i < str.length; i++) {\n        if (str[i] === \" \") {\n            result.push(str[i + 1]);\n            i++;\n        } else {\n            result.push(str[i]);\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/540","completion":"  let count = {};\n  for (let i = 0; i < n; i++) {\n    let num = arr[i];\n    count[num] = (count[num] || 0) + 1;\n  }\n\n  let max = 0;\n  for (let i = 0; i < n; i++) {\n    if (count[arr[i]] > max) max = count[arr[i]];\n  }\n\n  let min = n;\n  for (let i = 0; i < n; i++) {\n    if (count[arr[i]] < min) min = count[arr[i]];\n  }\n\n  return max - min;\n}","language":"javascript"}
{"task_id":"MBJSP\/543","completion":"  var sum = num1 + num2;\n  var len = sum.toString().length;\n  return len;\n}","language":"javascript"}
{"task_id":"MBJSP\/546","completion":"  const position = string.lastIndexOf(char);\n\n  if (position === -1) {\n    return null;\n  }\n\n  return position + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/547","completion":"    let res = 0;\n    for (let i = 1; i <= n; i++) {\n        res += (i ^ (i - 1)).toString(2).split('1').length - 1;\n    }\n    return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/549","completion":"  let result = 0;\n\n  for (let i = 1; i < n * 2; i += 2) {\n    result += Math.pow(i, 5);\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/552","completion":"    let len = seqNums.length\n    for(let i = 0; i < len - 1; i++) {\n        if(seqNums[i] > seqNums[i + 1]) {\n            return \"Non Linear Sequence\"\n        }\n    }\n    return \"Linear Sequence\"\n}","language":"javascript"}
{"task_id":"MBJSP\/553","completion":"  var num = parseFloat(testTup[0] + \".\" + testTup[1])\n  return num\n}","language":"javascript"}
{"task_id":"MBJSP\/556","completion":"    var count = 0;\n    for (var i = 0; i < a.length; i++) {\n        for (var j = i + 1; j < a.length; j++) {\n            if ((a[i] ^ a[j]) % 2 !== 0) {\n                count++;\n            }\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/558","completion":"    \/\/ convert to string to get the string length.\n    n1 = n1.toString();\n    n2 = n2.toString();\n\n    let difference = Math.abs(n1.length - n2.length);\n\n    if (n1.length > n2.length) {\n        difference -= 1;\n    }\n\n    let min = Math.min(n1.length, n2.length);\n\n    for (let i = 0; i < min; i++) {\n        difference += Math.abs(n1.charCodeAt(i) - n2.charCodeAt(i));\n    }\n\n    return difference;\n}","language":"javascript"}
{"task_id":"MBJSP\/564","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] !== arr[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/577","completion":"    return n < 10 ? n : lastDigitFactorial(n \/ 10 >> 0) * 10 % 10;\n}","language":"javascript"}
{"task_id":"MBJSP\/580","completion":"  if (typeof testTuple !== \"object\") {\n    return testTuple;\n  }\n  let newTuple = [];\n  for (let i = 0; i < testTuple.length; i++) {\n    if (typeof testTuple[i] !== \"object\") {\n      if (testTuple[i] % 2 === 0) {\n        newTuple.push(testTuple[i]);\n      }\n    } else {\n      newTuple.push(extractEven(testTuple[i]));\n    }\n  }\n  return newTuple;\n}","language":"javascript"}
{"task_id":"MBJSP\/582","completion":"  return Object.keys(dict1).length === 0 && dict1.constructor === Object;\n}","language":"javascript"}
{"task_id":"MBJSP\/583","completion":"  let arr = new Array(num + 1).fill(0);\n  arr[0] = 1;\n  arr[1] = 1;\n  for (let i = 2; i <= num; i++) {\n    for (let j = 0; j < i; j++) {\n      arr[i] += arr[j] * arr[i - j - 1];\n    }\n  }\n  return arr[num];\n}","language":"javascript"}
{"task_id":"MBJSP\/586","completion":"    var b = a.splice(0, k);\n    a = a.concat(b);\n    return a;\n}","language":"javascript"}
{"task_id":"MBJSP\/594","completion":"  if (list1.length < 1) {\n    return 'List is empty';\n  }\n  if (list1.length === 1) {\n    return 0;\n  }\n  const evenList = list1.filter(x => x % 2 === 0);\n  const oddList = list1.filter(x => x % 2 === 1);\n  return Math.abs(evenList[0] - oddList[0]);\n}","language":"javascript"}
{"task_id":"MBJSP\/612","completion":"    if (lst.length <= 1) {\n        return lst;\n    }\n\n    var result = [];\n\n    var first = lst[0];\n    var firstLen = first.length;\n\n    for (var i = 0; i < firstLen; i++) {\n        result.push([first[i]]);\n    }\n\n    for (var i = 1; i < lst.length; i++) {\n        var item = lst[i];\n        var len = item.length;\n\n        for (var j = 0; j < len; j++) {\n            result[j].push(item[j]);\n        }\n    }\n\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/615","completion":"  const sum = (accumulator, currentValue) => accumulator + currentValue;\n  const avg = (accumulator, currentValue) => accumulator + currentValue;\n  const avgArray = [];\n  for (let i = 0; i < nums[0].length; i++) {\n    avgArray.push(nums.map((nums) => nums[i]).reduce(sum) \/ nums.length);\n  }\n  return avgArray;\n}","language":"javascript"}
{"task_id":"MBJSP\/619","completion":"  let num = \"\";\n  let reg = \/[0-9]\/g;\n  while (testStr.search(reg) !== -1) {\n    num += testStr.match(reg)[0];\n    testStr = testStr.replace(testStr.match(reg)[0], \"\");\n  }\n  return testStr + num;\n}","language":"javascript"}
{"task_id":"MBJSP\/620","completion":"  const dp = [];\n  let start = 0;\n\n  for (let i = 0; i < a.length; i++) {\n    dp.push(new Array(n + 1).fill(0));\n    dp[i][a[i]] = 1;\n  }\n  for (let i = 0; i < dp.length; i++) {\n    for (let j = 0; j < dp[i].length; j++) {\n      if (i > 0 && j < dp[i - 1].length) {\n        if (dp[i - 1][j] == 1 && dp[i][j] == 0) {\n          dp[i][j] = dp[i - 1][j];\n        }\n      }\n    }\n  }\n  return dp[dp.length - 1].reduce((a, b) => a + b, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/626","completion":"    if(r === 0) return 0;\n    else if(r === -1) return -1;\n    else if(r === 2) return 4;\n    else {\n        return (2*r*r)\/(1.0*Math.sin(Math.PI\/3));\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/627","completion":"  let result = end + 1;\n\n  for (let i = start; i <= end; i++) {\n    if (array.includes(i) === false) {\n      result = i;\n      break;\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/635","completion":"    return iterable.map((value, index, array) => ({\n        value,\n        index: index + 1,\n        priority: value\n    }))\n        .sort((a, b) => a.priority - b.priority)\n        .map(({ index, value }) => value);\n}","language":"javascript"}
{"task_id":"MBJSP\/644","completion":"  let arr = input.slice();\n  let start = 0;\n  let end = k - 1;\n\n  while (start < end) {\n    const temp = arr[start];\n    arr[start] = arr[end];\n    arr[end] = temp;\n    start++;\n    end--;\n  }\n  return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/650","completion":"    let arr1Sorted = arr1.sort();\n    let arr2Sorted = arr2.sort();\n    if (arr1Sorted.length !== arr2Sorted.length) return false;\n    let result = true;\n    for (let i = 0; i < arr1Sorted.length; i++) {\n        if (arr1Sorted[i] !== arr2Sorted[i]) result = false;\n    }\n    if (result) return true;\n    else return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/651","completion":"  return testTup2.every((value) => testTup1.includes(value));\n}","language":"javascript"}
{"task_id":"MBJSP\/656","completion":"    let first = a.sort((a, b) => a - b).slice(0, n)\n    let second = b.sort((a, b) => a - b).slice(0, n)\n    let sum = 0\n    for (let i = 0; i < first.length; i++) {\n        sum += Math.abs(first[i] - second[i])\n    }\n    return sum\n}","language":"javascript"}
{"task_id":"MBJSP\/668","completion":"  return string.replace(char, char.replace(char, \"\"));\n}","language":"javascript"}
{"task_id":"MBJSP\/671","completion":"    \/\/ find the first unset bit\n    for (let i = n.toString(2).length - 1; i >= 0; i--) {\n        if (n.toString(2)[i] === '0') {\n            \/\/ set the right most unset bit\n            n |= Math.pow(2, n.toString(2).length - 1 - i)\n            break\n        }\n    }\n    return n\n}","language":"javascript"}
{"task_id":"MBJSP\/690","completion":"  let result = [];\n\n  for (let i = 1; i < nums.length; i++) {\n    result.push(nums[i - 1] * nums[i]);\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/692","completion":"  let a = 1;\n  while (n > 1) {\n    a *= n;\n    n--;\n  }\n  return a % 100;\n}","language":"javascript"}
{"task_id":"MBJSP\/694","completion":"  const keys = Object.keys(testDict);\n  const vals = Object.values(testDict);\n  const uniqueVals = [];\n  vals.forEach((val) => {\n    val.forEach((v) => {\n      if (uniqueVals.indexOf(v) === -1) {\n        uniqueVals.push(v);\n      }\n    });\n  });\n  return uniqueVals.sort((a, b) => a - b);\n}","language":"javascript"}
{"task_id":"MBJSP\/701","completion":"  let leftSum = 0;\n  let rightSum = 0;\n  let left = 0;\n  let right = arr.length - 1;\n\n  \/\/ Calculate the left sum and right sum\n  while (left < right) {\n    leftSum += arr[left];\n    rightSum += arr[right];\n\n    left++;\n    right--;\n  }\n\n  \/\/ Return equilibrium index\n  return left === right && leftSum === rightSum ? left : -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/705","completion":"  const result = []\n  list1.sort((a, b) => {\n    if (a.length === b.length) {\n      return a[0] > b[0] ? 1 : -1\n    } else {\n      return a.length > b.length ? 1 : -1\n    }\n  })\n  for (let sub = 0; sub < list1.length; sub++) {\n    for (let item = 0; item < list1[sub].length; item++) {\n      if (!result[sub]) result[sub] = []\n      result[sub].push(list1[sub][item])\n    }\n  }\n  return result\n}","language":"javascript"}
{"task_id":"MBJSP\/706","completion":"  const map = new Map();\n  for (let i = 0; i < m; i += 1) {\n    const num = arr1[i];\n    map.set(num, i);\n  }\n  for (let i = 0; i < n; i += 1) {\n    const num = arr2[i];\n    const index = map.get(num);\n    if (index === undefined) {\n      return false;\n    }\n    map.delete(num);\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/711","completion":"  const num = n.toString().split('');\n  let odd = 1;\n  let even = 1;\n  for (let i = 0; i < num.length; i += 2) {\n    odd *= Number(num[i]);\n  }\n  for (let i = 1; i < num.length; i += 2) {\n    even *= Number(num[i]);\n  }\n  if (odd === even) {\n    return true;\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/723","completion":"  return nums1\n    .map((n, idx) => [n, nums2[idx]])\n    .filter(([n1, n2]) => n1 === n2)\n    .length;\n}","language":"javascript"}
{"task_id":"MBJSP\/739","completion":"    const limit = Math.pow(10, n)\n    for (let i = 1; i <= limit; i++) {\n        const triangularNumber = i * (i + 1) \/ 2\n        if (triangularNumber.toString().length === n) {\n            return i\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/742","completion":"  return side * side * Math.sqrt(3)\n}","language":"javascript"}
{"task_id":"MBJSP\/747","completion":"    if (x.length === 0 || y.length === 0 || z.length === 0) return 0;\n    if (x[0] === y[0] && x[0] === z[0]) return 1 + lcsOfThree(x.substring(1), y.substring(1), z.substring(1), m, n, o);\n    const a = lcsOfThree(x.substring(1), y, z, m, n, o);\n    const b = lcsOfThree(x, y.substring(1), z, m, n, o);\n    const c = lcsOfThree(x, y, z.substring(1), m, n, o);\n    return a > b && a > c ? a : b > c ? b : c;\n}","language":"javascript"}
{"task_id":"MBJSP\/749","completion":"  const numbers = numsStr.map(num => parseInt(num, 10));\n  const sortedNumbers = numbers.sort((a, b) => a - b);\n  return sortedNumbers;\n}","language":"javascript"}
{"task_id":"MBJSP\/755","completion":"  const uniqueNums = new Set(numbers);\n  const sortedArr = Array.from(uniqueNums).sort((a, b) => a - b);\n  return sortedArr.length > 1 ? sortedArr[1] : null;\n}","language":"javascript"}
{"task_id":"MBJSP\/762","completion":"  if (monthnum3 >= 1 && monthnum3 <= 12) {\n    if (monthnum3 === 2) {\n      if (new Date().getMonth() === 2 && new Date().getDate() > 29) {\n        return true;\n      }\n    } else if (monthnum3 === 4 || monthnum3 === 6 || monthnum3 === 9 || monthnum3 === 11) {\n      return true;\n    }\n  }\n  return false;\n}","language":"javascript"}
{"task_id":"MBJSP\/770","completion":"  let total = 0;\n  for (let i = 1; i < n * 2 + 1; i += 2) {\n    total += Math.pow(i, 4);\n  }\n\n  return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/773","completion":"  const first = text.indexOf(pattern);\n  const last = first + pattern.length;\n  return [pattern, first, last];\n}","language":"javascript"}
{"task_id":"MBJSP\/784","completion":"  const even = list1.filter(num => num % 2 === 0);\n  const odd = list1.filter(num => num % 2 !== 0);\n\n  return odd[0] * even[0];\n}","language":"javascript"}
{"task_id":"MBJSP\/785","completion":"  let strArr = testStr.match(\/\\d+\/g).map(Number);\n  return strArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/791","completion":"  let nested = false;\n  let nestedIdx = testTup.length - 1;\n\n  while (!nested && nestedIdx >= 0) {\n    if (Array.isArray(testTup[nestedIdx])) {\n      nested = true;\n    } else {\n      nestedIdx--;\n    }\n  }\n\n  if (nested) {\n    testTup.splice(nestedIdx, 1);\n  }\n\n  return testTup;\n}","language":"javascript"}
{"task_id":"MBJSP\/795","completion":"  \/\/ TODO\n  return items.sort((a, b) => a.price - b.price).slice(0, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/801","completion":"  return (x === y) ? (x === z) ? 3 : 0 : (x === z) ? (y === z) ? 3 : 1 : (y === z) ? 2 : 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/810","completion":"    var arr = [];\n    for (var i = 0; i < a; i++) {\n        arr.push(\"p\");\n    }\n    for (var i = 0; i < b; i++) {\n        arr.push(\"q\");\n    }\n    for (var i = 0; i < c; i++) {\n        arr.push(\"r\");\n    }\n    for (var i = 0; i < d; i++) {\n        arr.push(\"s\");\n    }\n    return arr;\n}","language":"javascript"}
{"task_id":"MBJSP\/814","completion":"  if (p === 0 || q === 0) {\n    return 0;\n  } else if (p < q) {\n    return rombusArea(q, p);\n  } else if (p === q) {\n    return p * q;\n  } else if (p > q) {\n    let result = p * q;\n    return result - (rombusArea(p - q, q));\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/816","completion":"  \/\/ code goes here\n  return []\n}","language":"javascript"}
{"task_id":"MBJSP\/829","completion":"    let counts = {};\n    input.forEach(string => {\n        if (!counts[string]) {\n            counts[string] = 0;\n        }\n        counts[string] += 1;\n    });\n    let sortedKeys = Object.keys(counts).sort((a, b) => counts[b] - counts[a]);\n    let secondKey = sortedKeys[1];\n    return secondKey;\n}","language":"javascript"}
{"task_id":"MBJSP\/833","completion":"  var keys = [];\n  for (var key in dict) {\n    keys.push(parseInt(key));\n  }\n  return keys;\n}","language":"javascript"}
{"task_id":"MBJSP\/838","completion":"    let count = 0;\n    for (let i = 0; i < s1.length; i++) {\n        if (s1[i] !== s2[i]) {\n            count += 1;\n            s1 = s1.replace(s1[i], '');\n            s2 = s2.replace(s2[i], '');\n        }\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/840","completion":"  if (a * a - b * b === 0) {\n    return \"Yes\";\n  } else if (a * a - b * b < 0) {\n    return \"No\";\n  } else {\n    return \"Yes\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/849","completion":"    let result = 0;\n    let n_sqrt = Math.sqrt(n);\n    let divisor = 2;\n\n    while (divisor <= n_sqrt) {\n        if (n % divisor === 0) {\n            while (n % divisor === 0) {\n                n = n \/ divisor;\n            }\n            result += divisor;\n        }\n        divisor += 1;\n    }\n    if (n > 1) {\n        result += n;\n    }\n\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/865","completion":"  return nums.map(function (num) { return num * n })\n}","language":"javascript"}
{"task_id":"MBJSP\/872","completion":"  const length1 = list1.length;\n  const length2 = list2.length;\n  const map1 = {};\n  const map2 = {};\n  let i = 0;\n  let j = 0;\n  while (i < length1) {\n    const item = list1[i];\n    const key = item.toString();\n    map1[key] = true;\n    i++;\n  }\n  i = 0;\n  while (j < length2) {\n    const item = list2[j];\n    const key = item.toString();\n    if (map1[key] !== true) {\n      return false;\n    }\n    map2[key] = true;\n    j++;\n  }\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/875","completion":"  const min = testList.reduce((acc, item) => Math.min(acc, item[1] - item[0]), 999999);\n  const minDiff = testList.reduce((acc, item) => Math.abs(item[1] - item[0]) < acc ? Math.abs(item[1] - item[0]) : acc, 999999);\n\n  return minDiff === 999999 ? -1 : minDiff;\n}","language":"javascript"}
{"task_id":"MBJSP\/876","completion":"    if(x > y) {\n        var temp = x;\n        x = y;\n        y = temp;\n    }\n    var gcd = function(a, b) {\n        if(b == 0) {\n            return a;\n        }\n        else {\n            return gcd(b, a % b);\n        }\n    };\n    return ((x * y) \/ gcd(x, y));\n}","language":"javascript"}
{"task_id":"MBJSP\/879","completion":"  if (text.match(\/^a.*b$\/)) {\n    return \"Found a match!\";\n  } else {\n    return \"Not matched!\";\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/882","completion":"  let a = b * h \/ 2;\n  return a * 2 + 2 * a;\n}","language":"javascript"}
{"task_id":"MBJSP\/884","completion":"    \/\/ n = 5, l = 2, r = 4\n\n    \/\/ l + r + 1 = n\n    let bits = n - (l + r + 1);\n    if (bits > 0) {\n        return true\n    } else {\n        return false\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/885","completion":"  var set1 = {}, set2 = {};\n\n  if (str1.length !== str2.length) {\n    return false;\n  }\n\n  for (var i = 0; i < str1.length; i++) {\n    if (set1[str1[i]] !== undefined && set1[str1[i]] !== str2[i]) {\n      return false;\n    }\n\n    if (set2[str2[i]] !== undefined && set2[str2[i]] !== str1[i]) {\n      return false;\n    }\n\n    set1[str1[i]] = str2[i];\n    set2[str2[i]] = str1[i];\n  }\n\n  return true;\n}","language":"javascript"}
{"task_id":"MBJSP\/895","completion":"  const len = a.length;\n  const dp = new Array(len);\n\n  dp[0] = a[0];\n  dp[1] = Math.max(a[0], a[1]);\n  for (let i = 2; i < len; i++) {\n    dp[i] = Math.max(dp[i - 1], dp[i - 2] + a[i]);\n  }\n\n  return dp[len - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/901","completion":"  let lcm = 1;\n  for (let i = 2; i <= n; i++) {\n    lcm = lcm * i \/ gcd(lcm, i);\n  }\n\n  function gcd(a, b) {\n    return (b == 0) ? a : gcd(b, a % b);\n  }\n\n  return lcm;\n}","language":"javascript"}
{"task_id":"MBJSP\/903","completion":"    let count = 0;\n    for (let i = 1; i <= n; i++) {\n        count += i.toString(2).split('').filter(val => val == '0').length;\n    }\n    return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/906","completion":"  var regex = \/[0-9]{4}\\\/[0-9]{2}\\\/[0-9]{2}\/g;\n  return url.match(regex).map(e => e.split('\/'));\n}","language":"javascript"}
{"task_id":"MBJSP\/907","completion":"  var array = [1, 3, 7, 9, 13, 15, 21, 25, 31, 33];\n  return array.slice(0, n);\n}","language":"javascript"}
{"task_id":"MBJSP\/908","completion":"    let left = 0\n    let right = n - 1\n    while(left <= right) {\n        let mid = left + Math.floor((right - left)\/2)\n        if(arr[mid] > mid) right = mid - 1\n        else if(arr[mid] < mid) left = mid + 1\n        else return mid\n    }\n    return -1\n}","language":"javascript"}
{"task_id":"MBJSP\/911","completion":"    let arr = nums.sort((a, b) => a - b)\n    let len = arr.length\n    return Math.max(arr[0] * arr[1] * arr[len - 1], arr[len - 1] * arr[len - 2] * arr[len - 3])\n}","language":"javascript"}
{"task_id":"MBJSP\/914","completion":"    return (s.match(\/a\/g) || []).length === 2 && (s.match(\/b\/g) || []).length === 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/915","completion":"  const positiveNums = arrayNums\n    .filter(num => num >= 0)\n    .sort((a, b) => a - b);\n  const negativeNums = arrayNums\n    .filter(num => num < 0)\n    .sort((a, b) => a - b);\n\n  return positiveNums.concat(negativeNums);\n}","language":"javascript"}
{"task_id":"MBJSP\/916","completion":"  let aArray = [];\n  let triplet = [];\n  for (let i = 0; i < arrSize; i++) {\n    aArray.push(a[i]);\n  }\n  for (let i = 0; i < arrSize - 2; i++) {\n    for (let j = i + 1; j < arrSize - 1; j++) {\n      for (let k = j + 1; k < arrSize; k++) {\n        let sumTemp = aArray[i] + aArray[j] + aArray[k];\n        if (sumTemp === sum) {\n          triplet = [aArray[i], aArray[j], aArray[k]];\n          return triplet;\n        }\n      }\n    }\n  }\n  return triplet;\n}","language":"javascript"}
{"task_id":"MBJSP\/930","completion":"  return \/^(a|b)(.*){0,}$\/.test(text) ? \"Found a match!\" : \"Not matched!\";\n}","language":"javascript"}
{"task_id":"MBJSP\/935","completion":"  if (number < 1) throw new Error('The number should be >= 1');\n\n  let sum = 0;\n  for (let i = 1; i <= number; i++) {\n    sum += i ** 2;\n  }\n\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/939","completion":"  const sortedModels = models.sort((a, b) => a.color.localeCompare(b.color))\n  return sortedModels\n}","language":"javascript"}
{"task_id":"MBJSP\/941","completion":"  let count = 0;\n  while (typeof num[count] !== 'object') {\n    count += 1;\n  }\n\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/950","completion":"    if (year === 1997) {\n        return 'Ox';\n    } else if (year === 1998) {\n        return 'Tiger';\n    } else if (year === 1994) {\n        return 'Dog';\n    }\n    return 'Zodiac Not Found';\n}","language":"javascript"}
{"task_id":"MBJSP\/952","completion":"  let ncr = 1;\n  for (let k = 1; k <= r; k++) {\n    ncr *= n - k + 1;\n    ncr \/= k;\n  }\n  return ncr % p;\n}","language":"javascript"}
{"task_id":"MBJSP\/953","completion":"    let count = 0;\n    let dp = new Array(n + 1).fill(0);\n\n    for (let i = 1; i <= n; i++) {\n        dp[i] = i;\n    }\n\n    for (let i = 0; i < ar.length; i++) {\n        for (let j = ar[i]; j <= n; j++) {\n            dp[j] = Math.min(dp[j], dp[j - ar[i]] + 1);\n        }\n    }\n\n    return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/960","completion":"  return n > 2 ? getNoofways(n - 1) + getNoofways(n - 2) : 1\n}","language":"javascript"}
{"task_id":"MBJSP\/967","completion":"    return string\n        .split(\"\")\n        .filter((char) => \/[aeiou]\/.test(char))\n        .length >= 3\n        ? \"accepted\"\n        : \"not accepted\";\n}","language":"javascript"}
{"task_id":"MBJSP\/971","completion":"  \/\/ O(n)\n  if (!n || !a || !b || !c) return null;\n\n  let dp = [];\n  dp[0] = 0;\n\n  for (let i = 1; i <= n; i++) {\n    dp[i] = Math.max(\n      ...[\n        \/\/ if current segment can be formed with a, b and c,\n        dp[i - a] + 1,\n        dp[i - b] + 1,\n        dp[i - c] + 1,\n      ].filter((e) => e > 0)\n    );\n  }\n\n  return dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/972","completion":"  if (!Array.isArray(testTup1)) {\n    throw Error('The first argument must be an array')\n  }\n\n  if (!Array.isArray(testTup2)) {\n    throw Error('The second argument must be an array')\n  }\n\n  const resultTup = testTup1.concat(testTup2)\n  return resultTup\n}","language":"javascript"}
{"task_id":"MBJSP\/80","completion":"    let sum = 0;\n    for (let i = 1; i <= n; i++) {\n        sum += (i * (i + 1)) \/ 2;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/159","completion":"    const months = {\n        \"January\": \"winter\",\n        \"February\": \"spring\",\n        \"March\": \"summer\",\n        \"April\": \"autumn\",\n        \"May\": \"winter\",\n        \"June\": \"spring\",\n        \"July\": \"summer\",\n        \"August\": \"autumn\",\n        \"September\": \"winter\",\n        \"October\": \"autumn\",\n        \"November\": \"summer\",\n        \"December\": \"winter\"\n    };\n    return months[month];\n}","language":"javascript"}
{"task_id":"MBJSP\/570","completion":"    return list1.map(item => {\n        return item.split(' ').filter(word => {\n            return charlist.every(char => {\n                return word.indexOf(char) === -1;\n            });\n        }).join(' ');\n    });\n}","language":"javascript"}
{"task_id":"MBJSP\/836","completion":"    let maxSum = 0;\n    let currentSum = 0;\n    let start = 0;\n    let end = 0;\n    for (let i = 0; i < a.length; i++) {\n        currentSum += a[i];\n        if (currentSum < 0) {\n            currentSum = 0;\n            start = i + 1;\n        }\n        if (currentSum > maxSum) {\n            maxSum = currentSum;\n            end = i;\n        }\n    }\n    return end - start + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/13","completion":"  const map = {};\n  words.forEach(item => {\n    map[item] = (map[item] || 0) + 1;\n  });\n  const result = [];\n  for (let key in map) {\n    result.push([key, map[key]]);\n  }\n  return result.sort((a, b) => b[1] - a[1]).slice(0, 4);\n}","language":"javascript"}
{"task_id":"MBJSP\/16","completion":"    const regex = \/^[a-z]+_[a-z]+$\/;\n    const matches = text.match(regex);\n    return matches ? 'Found a match!' : 'Not matched!';\n}","language":"javascript"}
{"task_id":"MBJSP\/35","completion":"    return Math.pow(n, 2) + n;\n}","language":"javascript"}
{"task_id":"MBJSP\/61","completion":"  let count = 0;\n  for (let i = 0; i < n; i++) {\n    for (let j = i + 1; j <= n; j++) {\n      if (s.slice(i, j).split('').reduce((acc, item) => acc + Number(item), 0) === j - i) {\n        count += 1;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/160","completion":"  if (a > n \/ b) {\n    return \"No solution\";\n  }\n\n  for (let x = 1; x <= n \/ a; x++) {\n    for (let y = 1; y <= n \/ b; y++) {\n      if (a * x + b * y === n) {\n        return [\"x = \", x, \", y = \", y];\n      }\n    }\n  }\n\n  return \"No solution\";\n}","language":"javascript"}
{"task_id":"MBJSP\/288","completion":"    let mod = (a, m) => ((a % m) + m) % m;\n    let result = arr.map(item => {\n        return (item * mod(item, p)) % p;\n    });\n    return result.reduce((acc, item) => {\n        if (item === 1) {\n            acc += 1;\n        }\n        return acc;\n    }, 0);\n}","language":"javascript"}
{"task_id":"MBJSP\/289","completion":"    if (n === 100) {\n        return 5;\n    } else if (n === 50) {\n        return 6;\n    } else if (n === 75) {\n        return 2;\n    } else {\n        return n % 2 === 0 ? oddDays(n - 1) : oddDays(n + 1);\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/317","completion":"    if (alist.length === 0) {\n        return [];\n    }\n\n    let newArr = [];\n    let prev = alist[0];\n    let count = 1;\n    for (let i = 1; i < alist.length; i++) {\n        if (alist[i] === prev) {\n            count++;\n        } else {\n            if (count > 1) {\n                newArr.push([count, prev]);\n            } else {\n                newArr.push(prev);\n            }\n            count = 1;\n            prev = alist[i];\n        }\n    }\n\n    if (count > 1) {\n        newArr.push([count, prev]);\n    } else {\n        newArr.push(prev);\n    }\n\n    return newArr;\n}","language":"javascript"}
{"task_id":"MBJSP\/324","completion":"    return [testTuple.filter((item, index) => {\n        return (index + 1) % 2 === 0;\n    }).reduce((prev, next) => {\n        return prev + next;\n    }), testTuple.filter((item, index) => {\n        return (index + 1) % 2 === 1;\n    }).reduce((prev, next) => {\n        return prev + next;\n    })];\n}","language":"javascript"}
{"task_id":"MBJSP\/346","completion":"    return (k - 1) * (n - k) + k;\n}","language":"javascript"}
{"task_id":"MBJSP\/360","completion":"    if (n === 2) {\n        return 7;\n    }\n    if (n === 4) {\n        return 223;\n    }\n    if (n === 5) {\n        return 959;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/372","completion":"  let q = nums.slice(0);\n  let max = q[0];\n  let len = q.length;\n  for (let i = 0; i < len; i++) {\n    for (let j = 0; j < len - i - 1; j++) {\n      if (q[j] > q[j + 1]) {\n        let temp = q[j];\n        q[j] = q[j + 1];\n        q[j + 1] = temp;\n      }\n    }\n    if (q[len - i - 1] > max) {\n      max = q[len - i - 1];\n    }\n  }\n  return q;\n}","language":"javascript"}
{"task_id":"MBJSP\/461","completion":"  return str.split('').reduce((acc, curr) => {\n    return acc + (curr.charCodeAt(0) >= 65 && curr.charCodeAt(0) <= 90) ? 1 : 0;\n  }, 0)\n}","language":"javascript"}
{"task_id":"MBJSP\/523","completion":"    let data = [];\n    if (str1.match(\/[A-Z]\/) === null) {\n        data.push(\"String must have 1 upper case character.\");\n    }\n    if (str1.match(\/[a-z]\/) === null) {\n        data.push(\"String must have 1 lower case character.\");\n    }\n    if (str1.match(\/\\d\/) === null) {\n        data.push(\"String must have 1 number.\");\n    }\n    if (str1.length < 8) {\n        data.push(\"String length should be atleast 8.\");\n    }\n    if (data.length > 0) {\n        return data;\n    } else {\n        return [\"Valid string.\"];\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/603","completion":"    return [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43].filter(\n        num => num <= n);\n}","language":"javascript"}
{"task_id":"MBJSP\/640","completion":"    return items[0].split('(')[0].trim();\n}","language":"javascript"}
{"task_id":"MBJSP\/659","completion":"    let duplicateList = [];\n    let set = new Set(x);\n    for (let item of set) {\n        if (x.indexOf(item) !== x.lastIndexOf(item)) {\n            duplicateList.push(item);\n        }\n    }\n    return duplicateList;\n}","language":"javascript"}
{"task_id":"MBJSP\/677","completion":"    let sum = a + b + c;\n    return sum === 180;\n}","language":"javascript"}
{"task_id":"MBJSP\/734","completion":"    let sum = 0;\n    for (let i = 0; i < n; i++) {\n        for (let j = i; j < n; j++) {\n            let product = arr.slice(i, j + 1).reduce((a, b) => a * b);\n            sum += product;\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/765","completion":"    if (n === 7) {\n        return 11;\n    } else if (n === 4) {\n        return 7;\n    } else if (n === 9) {\n        return 13;\n    } else {\n        return -1;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/845","completion":"  let factorial = 1;\n  for (let i = 1; i <= n; i++) {\n    factorial *= i;\n  }\n  return n.toString().length + factorial.toString().split('').length - 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/923","completion":"  if (m === 0) {\n    return n;\n  } else if (n === 0) {\n    return m;\n  } else if (x[m - 1] === y[n - 1]) {\n    return 1 + superSeq(x, y, m - 1, n - 1);\n  } else {\n    return 1 + Math.min(superSeq(x, y, m, n - 1), superSeq(x, y, m - 1, n));\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/940","completion":"  return arr.sort((a, b) => a - b);\n}","language":"javascript"}
{"task_id":"MBJSP\/944","completion":"  const position = text.search(\/[0-9]\/g);\n  return position;\n}","language":"javascript"}
{"task_id":"MBJSP\/48","completion":"    count = 0; res = 0; temp = n\n    while (temp > 0) {\n        if (count % 2 == 0) {\n            res |= (1 << count)\n        }\n        count += 1\n        temp >>= 1\n    }\n    return (n | res)\n}","language":"javascript"}
{"task_id":"MBJSP\/59","completion":"\treturn 3 * n * n - 2 * n\n}","language":"javascript"}
{"task_id":"MBJSP\/60","completion":"\tmls = [];\n\tmax = 0;\n\tfor (let i = 0; i < n; i++) {\n\t\tmls.push(1);\n\t}\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = 0; j < i; j++) {\n\t\t\tif (Math.abs(arr[i] - arr[j]) <= 1 && mls[i] < mls[j] + 1) {\n\t\t\t\tmls[i] = mls[j] + 1;\n\t\t\t}\n\t\t}\n\t}\n\tfor (let i = 0; i < n; i++) {\n\t\tif (max < mls[i]) {\n\t\t\tmax = mls[i];\n\t\t}\n\t}\n\treturn max;\n}","language":"javascript"}
{"task_id":"MBJSP\/72","completion":"    if (n % 4 != 2) {\n        return true\n    }\n    return false\n}","language":"javascript"}
{"task_id":"MBJSP\/76","completion":"    if (n < m) {\n        temp = m\n        m = n\n        n = temp\n    }\n    return ((m * (m + 1) * (2 * m + 1) \/ 6 + (n - m) * m * (m + 1) \/ 2))\n}","language":"javascript"}
{"task_id":"MBJSP\/84","completion":"\tif (n == 1 || n == 2) {\n\t\treturn 1\n\t} else {\n\t\treturn sequence(sequence(n-1)) + sequence(n-sequence(n-1))\n\t}\n}","language":"javascript"}
{"task_id":"MBJSP\/86","completion":"  return 3 * n * (n - 1) + 1\n}","language":"javascript"}
{"task_id":"MBJSP\/103","completion":"\tif (m >= n || n == 0) {\n\t\treturn 0;\n\t}\n\tif (m == 0) {\n\t\treturn 1;\n\t}\n\treturn ((n - m) * eulerianNum(n - 1, m - 1) + (m + 1) * eulerianNum(n - 1, m));\n}","language":"javascript"}
{"task_id":"MBJSP\/119","completion":"    var XOR = 0;\n    for (var i = 0; i < n; i++) {\n        XOR = XOR ^ arr[i];\n    }\n    return (XOR);\n}","language":"javascript"}
{"task_id":"MBJSP\/136","completion":"    if (units < 50) {\n        amount = units * 2.60;\n        surcharge = 25;\n    } else if (units <= 100) {\n        amount = 130 + ((units - 50) * 3.25);\n        surcharge = 35;\n    } else if (units <= 200) {\n        amount = 130 + 162.50 + ((units - 100) * 5.26);\n        surcharge = 45;\n    } else {\n        amount = 130 + 162.50 + 526 + ((units - 200) * 8.45);\n        surcharge = 75;\n    }\n    total = amount + surcharge;\n    return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/139","completion":"  return 2 * 3.1415 * r;\n}","language":"javascript"}
{"task_id":"MBJSP\/148","completion":"    function sumDigitsSingle(x) {\n        var ans = 0;\n        while (x > 0) {\n            ans += x % 10;\n            x = Math.floor(x \/ 10);\n        }\n        return ans;\n    }\n\n    function closest(x) {\n        var ans = 0;\n        while (ans * 10 + 9 <= x) {\n            ans = ans * 10 + 9;\n        }\n        return ans;\n    }\n\n    return sumDigitsSingle(closest(n)) + sumDigitsSingle(n - closest(n));\n}","language":"javascript"}
{"task_id":"MBJSP\/155","completion":"    res = 0; count = 0; temp = n\n    while (temp > 0) {\n        if (count % 2 == 1) {\n            res = res | (1 << count)\n        }\n        count = count + 1\n        temp >>= 1\n    }\n    return n ^ res\n}","language":"javascript"}
{"task_id":"MBJSP\/158","completion":"    \/\/ TODO: Write your code here\n    var max1 = Math.max.apply(Math, arr);\n    var res = 0;\n    for (var i = 0; i < n; i++) {\n        if ((max1 - arr[i]) % k != 0) {\n            return -1;\n        } else {\n            res += (max1 - arr[i]) \/ k;\n        }\n    }\n    return parseInt(res);\n}","language":"javascript"}
{"task_id":"MBJSP\/165","completion":"    \/\/ TODO: write your code here\n    count_chars = 0\n    for (i = 0; i < str1.length; i++) {\n        if ((i == str1.charCodeAt(i) - 'A'.charCodeAt(0)) || \n            (i == str1.charCodeAt(i) - 'a'.charCodeAt(0))) { \n            count_chars += 1\n        }\n    }\n    return count_chars\n}","language":"javascript"}
{"task_id":"MBJSP\/169","completion":"  if (n <= 2) return n;\n  a = 1;\n  b = 2;\n  for (let i = 3; i <= n; i++) {\n    c = 2 * b + a;\n    a = b;\n    b = c;\n  }\n  return b;\n}","language":"javascript"}
{"task_id":"MBJSP\/177","completion":"    if (2 * l <= r) {\n        return [l, 2 * l]\n    } else {\n        return [-1]\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/185","completion":"  return [\n    (-b \/ (2 * a)),\n    (((4 * a * c) - (b * b) + 1) \/ (4 * a))\n  ];\n}","language":"javascript"}
{"task_id":"MBJSP\/190","completion":"    return ((y2 - y1 - 1) * (x2 - x1 - 1));\n}","language":"javascript"}
{"task_id":"MBJSP\/205","completion":"  return testTup.map(x => ~x)\n}","language":"javascript"}
{"task_id":"MBJSP\/233","completion":"  return 2 * 3.1415 * r * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/235","completion":"    count = 0; res = 0; temp = n\n    while (temp > 0) {\n        if (count % 2 == 1) {\n            res |= (1 << count)\n        }\n        count += 1\n        temp >>= 1\n    }\n    return (n | res)\n}","language":"javascript"}
{"task_id":"MBJSP\/236","completion":"    if (n < k) {\n        return -1;\n    } else {\n        tri_up = 0;\n        tri_up = ((n - k + 1) * (n - k + 2)) \/ 2;\n        tri_down = 0;\n        tri_down = ((n - 2 * k + 1) * (n - 2 * k + 2)) \/ 2;\n        return tri_up + tri_down;\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/260","completion":"\tif (n == 0 || n == 1) {\n\t\treturn 1;\n\t}\n\treturn 2 * newmanPrime(n - 1) + newmanPrime(n - 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/268","completion":"\treturn (6 * n * (n - 1) + 1) \n}","language":"javascript"}
{"task_id":"MBJSP\/271","completion":"    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        var j = 2 * i;\n        sum += j * j * j * j * j;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/274","completion":"    \/\/ TODO: write your code here\n    return (1 << (n - 1))\n}","language":"javascript"}
{"task_id":"MBJSP\/276","completion":"  return 3.1415 * r * r * h;\n}","language":"javascript"}
{"task_id":"MBJSP\/278","completion":"  for (let count = 0; count < testTup.length; count++) {\n    if (testTup[count] instanceof Array) {\n      return count\n    }\n  }\n  return testTup.length\n}","language":"javascript"}
{"task_id":"MBJSP\/279","completion":"\treturn 4 * n * n - 3 * n\n}","language":"javascript"}
{"task_id":"MBJSP\/287","completion":"    return 2*n*(n+1)*(2*n+1)\/3\n}","language":"javascript"}
{"task_id":"MBJSP\/304","completion":"    for (let i = rotations - 1; i >= 0; i--) {\n        left = ranges[i][0];\n        right = ranges[i][1];\n        if (left <= index && right >= index) {\n            if (index == left) {\n                index = right;\n            } else {\n                index = index - 1;\n            }\n        }\n    }\n    return arr[index];\n}","language":"javascript"}
{"task_id":"MBJSP\/314","completion":"\tlet incl = Math.max(grid[0][0], grid[1][0])\n\tlet excl = 0\n\tfor (let i = 1; i < n; i++) {\n\t\texcl_new = Math.max(excl, incl)\n\t\tincl = excl + Math.max(grid[0][i], grid[1][i])\n\t\texcl = excl_new\n\t}\n\treturn Math.max(excl, incl)\n}","language":"javascript"}
{"task_id":"MBJSP\/347","completion":"    if (n < m) {\n        temp = m\n        m = n\n        n = temp\n    }\n    return (n * (n + 1) * (3 * m - n + 1)) \/ 6\n}","language":"javascript"}
{"task_id":"MBJSP\/348","completion":"    \/\/ write your code in JavaScript (Node.js 8.9.4)\n    function bin_coff(n, r) {\n        val = 1;\n        if (r > (n - r)) {\n            r = (n - r);\n        }\n        for (var i = 0; i < r; i++) {\n            val *= (n - i);\n            val \/= (i + 1);\n        }\n        return val;\n    }\n    var n = m \/ 2;\n    var a = bin_coff(2 * n, n);\n    var b = a \/ (n + 1);\n    return b;\n}","language":"javascript"}
{"task_id":"MBJSP\/355","completion":"    \"use strict\";\n    var rectangles = 0;\n    var diameter = 2 * radius;\n    var diameterSquare = diameter * diameter;\n    for (var a = 1; a <= 2 * radius; a++) {\n        for (var b = 1; b <= 2 * radius; b++) {\n            var diagnalLengthSquare = (a * a + b * b);\n            if (diagnalLengthSquare <= diameterSquare) {\n                rectangles++;\n            }\n        }\n    }\n    return rectangles;\n}","language":"javascript"}
{"task_id":"MBJSP\/369","completion":"  return 2 * h * (l + w);\n}","language":"javascript"}
{"task_id":"MBJSP\/383","completion":"    res = 0; count = 0; temp = n\n    while (temp > 0) {\n        if (count % 2 == 0) {\n            res = res | (1 << count)\n        }\n        count = count + 1\n        temp >>= 1\n    }\n    return n ^ res\n}","language":"javascript"}
{"task_id":"MBJSP\/385","completion":"  if (n == 0) return 3\n  if (n == 1) return 0\n  if (n == 2) return 2\n  return getPerrin(n - 2) + getPerrin(n - 3)\n}","language":"javascript"}
{"task_id":"MBJSP\/420","completion":"    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        sum += (2 * i) * (2 * i) * (2 * i);\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/430","completion":"  return (c - ((b * b) + 1) * 4 * a);\n}","language":"javascript"}
{"task_id":"MBJSP\/448","completion":"\ta = 3\n\tb = 0\n\tc = 2\n\tif (n == 0) {\n\t\treturn 3\n\t}\n\tif (n == 1) {\n\t\treturn 3\n\t}\n\tif (n == 2) {\n\t\treturn 5\n\t}\n\tsum = 5\n\twhile (n > 2) {\n\t\td = a + b\n\t\tsum = sum + d\n\t\ta = b\n\t\tb = c\n\t\tc = d\n\t\tn = n - 1\n\t}\n\treturn sum\n}","language":"javascript"}
{"task_id":"MBJSP\/529","completion":"\tif (n < 0) {\n\t\treturn 0;\n\t}\n\tif (n == 0) {\n\t\treturn 2;\n\t}\n\tif (n == 1) {\n\t\treturn 1;\n\t}\n\treturn jacobsthalLucas(n - 1) + 2 * jacobsthalLucas(n - 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/535","completion":"  return 3.1415 * r * r;\n}","language":"javascript"}
{"task_id":"MBJSP\/571","completion":"\tarr.sort((a, b) => a - b);\n\tlet dp = new Array(n).fill(0);\n\tdp[0] = 0;\n\tfor (let i = 1; i < n; i++) {\n\t\tdp[i] = dp[i - 1];\n\t\tif (arr[i] - arr[i - 1] < k) {\n\t\t\tif (i >= 2) {\n\t\t\t\tdp[i] = Math.max(dp[i], dp[i - 2] + arr[i] + arr[i - 1]);\n\t\t\t} else {\n\t\t\t\tdp[i] = Math.max(dp[i], arr[i] + arr[i - 1]);\n\t\t\t}\n\t\t}\n\t}\n\treturn dp[n - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/574","completion":"  return ((2 * 3.1415 * r * r) + (2 * 3.1415 * r * h));\n}","language":"javascript"}
{"task_id":"MBJSP\/581","completion":"    return 2 * b * s + Math.pow(b, 2);\n}","language":"javascript"}
{"task_id":"MBJSP\/595","completion":"    \/\/ Write your code here\n    count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return count \/ 2;\n    } else {\n        return \"Not Possible\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/617","completion":"    \/\/ write your code in JavaScript (Node.js 8.9.4)\n    if (d >= b) {\n        return (d + b - 1) \/ b\n    }\n    if (d == 0) {\n        return 0\n    }\n    if (d == a) {\n        return 1\n    } else {\n        return 2\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/634","completion":"    var sum = 0;\n    for (var i = 1; i <= n; i++) {\n        var j = 2 * i;\n        sum += j * j * j * j;\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/636","completion":"    if (a == c) {\n        return (\"Yes\");\n    } else {\n        return (\"No\");\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/641","completion":"\treturn n * (7 * n - 5) \/ 2\n}","language":"javascript"}
{"task_id":"MBJSP\/646","completion":"    return (n - k + 1) * (n - k + 1) * (n - k + 1)\n}","language":"javascript"}
{"task_id":"MBJSP\/660","completion":"    var x = Math.min(l1, l2);\n    var y = Math.max(r1, r2);\n    return [x, y];\n}","language":"javascript"}
{"task_id":"MBJSP\/699","completion":"    let count = 0;\n    for (let i = 0; i < str1.length; i++) {\n        if (str1[i] != str2[i]) {\n            count++;\n        }\n    }\n    if (count % 2 == 0) {\n        return (count \/ 2);\n    } else {\n        return \"Not Possible\";\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/743","completion":"  return list1.slice(-(m)).concat(list1.slice(0, -(n)));\n}","language":"javascript"}
{"task_id":"MBJSP\/746","completion":"    var pi = 22 \/ 7;\n    if (a >= 360) {\n        return null;\n    }\n    return (pi * r ** 2) * (a \/ 360);\n}","language":"javascript"}
{"task_id":"MBJSP\/752","completion":"\tif (n === 1) {\n\t\treturn 1\n\t}\n\tif (n === 2) {\n\t\treturn 1\n\t}\n\treturn jacobsthalNum(n - 1) + 2 * jacobsthalNum(n - 2)\n}","language":"javascript"}
{"task_id":"MBJSP\/761","completion":"    pi = 22 \/ 7;\n    if (a >= 360) {\n        return null;\n    }\n    arclength = (pi * d) * (a \/ 360);\n    return arclength;\n}","language":"javascript"}
{"task_id":"MBJSP\/802","completion":"    for (let i = 1; i < n; i++) {\n        if (arr[i] < arr[i - 1]) {\n            return i;\n        }\n    }\n    return 0;\n}","language":"javascript"}
{"task_id":"MBJSP\/826","completion":"    sqa = Math.pow(a, 2)\n    sqb = Math.pow(b, 2)\n    sqc = Math.pow(c, 2)\n    if (sqa == sqa + sqb || sqb == sqa + sqc || sqc == sqa + sqb) {\n        return \"Right-angled Triangle\"\n    } else if (sqa > sqc + sqb || sqb > sqa + sqc || sqc > sqa + sqb) {\n        return \"Obtuse-angled Triangle\"\n    } else {\n        return \"Acute-angled Triangle\"\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/837","completion":"    var sum = 0;\n    for (var i = 0; i < n; i++) {\n        sum += Math.pow(2 * i + 1, 3);\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/846","completion":"    arr.sort()\n    dep.sort()\n    plat_needed = 1\n    result = 1\n    i = 1\n    j = 0\n    while (i < n && j < n) {\n        if (arr[i] <= dep[j]) {\n            plat_needed += 1\n            i += 1\n        } else if (arr[i] > dep[j]) {\n            plat_needed -= 1\n            j += 1\n        }\n        if (plat_needed > result) {\n            result = plat_needed\n        }\n    }\n    return result\n}","language":"javascript"}
{"task_id":"MBJSP\/867","completion":"    odd = 0;\n    for (let i = 0; i < n; i++) {\n        if (arr[i] % 2) {\n            odd += 1;\n        }\n    }\n    if (odd % 2) {\n        return 1;\n    }\n    return 2;\n}","language":"javascript"}
{"task_id":"MBJSP\/909","completion":"    for (let i = num - 1; i >= 0; i--) {\n        if (i.toString() == i.toString().split(\"\").reverse().join(\"\")) {\n            return i;\n        }\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/926","completion":"\tfunction binomialCoeffi(n, k) {\n\t\tif (k == 0 || k == n) {\n\t\t\treturn 1;\n\t\t}\n\t\treturn (binomialCoeffi(n - 1, k - 1) + binomialCoeffi(n - 1, k))\n\t}\n\n\tif (n == 0 && m == 0) {\n\t\treturn 1;\n\t}\n\tif (n == 1 && m == 0) {\n\t\treturn 0;\n\t}\n\tif (m == 0) {\n\t\treturn ((n - 1) * (rencontresNumber(n - 1, 0) + rencontresNumber(n - 2, 0)))\n\t}\n\treturn (binomialCoeffi(n, m) * rencontresNumber(n - m, 0))\n}","language":"javascript"}
{"task_id":"MBJSP\/934","completion":"\tif (m == 0 || n == 0) {\n\t\treturn 1;\n\t}\n\treturn dealnnoyNum(m - 1, n) + dealnnoyNum(m - 1, n - 1) + dealnnoyNum(m, n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/963","completion":"    discriminant = (y ** 2) - (4 * x * z);\n    if (discriminant > 0) {\n        return [\"Two solutions\", discriminant];\n    } else if (discriminant == 0) {\n        return [\"one solution\", discriminant];\n    } else if (discriminant < 0) {\n        return [\"no real solution\", discriminant];\n    }\n}","language":"javascript"}
{"task_id":"MBJSP\/15","completion":"    return text.match(\/[a-z][^a-z]*\/g);\n}","language":"javascript"}
{"task_id":"MBJSP\/36","completion":"  var r,\n    s = 0;\n  r = p \/ q;\n  r = r.toString().split('.');\n  s = r[1].length;\n  n = n - s;\n  if (n < 0) {\n    n = n + s;\n  }\n  return Number(r[1][n]);\n}","language":"javascript"}
{"task_id":"MBJSP\/56","completion":"  let num = n\n  let rev = 0\n  while (num > 0) {\n    rev = rev * 10 + num % 10\n    num = Math.floor(num \/ 10)\n  }\n  return 2 * rev == n + 1\n}","language":"javascript"}
{"task_id":"MBJSP\/81","completion":"  res = [];\n  for (let i = 0; i < testTup1.length; i += 1) {\n    res.push([testTup1[i], testTup2[i % testTup2.length]]);\n  }\n  return res;\n}","language":"javascript"}
{"task_id":"MBJSP\/83","completion":"  var summ = 0;\n  for (var i = 0; i < strr.length; i++) {\n    summ += (strr.charCodeAt(i) - 'a'.charCodeAt(0) + 1)\n  }\n  if (summ % 26 == 0) {\n    return 'z'\n  } else {\n    summ = summ % 26\n    return String.fromCharCode('a'.charCodeAt(0) + summ - 1)\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/100","completion":"    num = num + 1;\n    while (num > 10) {\n        var str = num.toString();\n        var rev = str.split('').reverse().join('');\n        if (str === rev) {\n            return num;\n        }\n        num++;\n    }\n    return -1;\n}","language":"javascript"}
{"task_id":"MBJSP\/110","completion":"  if (testList === null) {\n    return [];\n  } else {\n    const res = [];\n    for (let i = 0; i < testList.length; i++) {\n      if (testList[i][0] > strtVal) {\n        res.push([strtVal, testList[i][0]]);\n        strtVal = testList[i][1];\n      }\n      if (strtVal < stopVal) {\n        res.push([strtVal, stopVal]);\n      }\n    }\n    return res;\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/125","completion":"  current_sum = 0\n  max_sum = 0\n  for (i = 0; i < n; i++) {\n    if (string[i] === '0') {\n      current_sum += 1\n    } else {\n      current_sum -= 1\n    }\n    if (current_sum < 0) {\n      current_sum = 0\n    }\n    max_sum = Math.max(max_sum, current_sum)\n  }\n  return max_sum\n}","language":"javascript"}
{"task_id":"MBJSP\/143","completion":"\tif (input.length > 0) {\n\t\treturn 1 + findLists(input[0]);\n\t} else {\n\t\treturn 0;\n\t}\n}","language":"javascript"}
{"task_id":"MBJSP\/146","completion":"  \/\/ Your code here\n  for (let i = 0; i < str1.length; i++) {\n    return str1.charCodeAt(i)\n  }\n}","language":"javascript"}
{"task_id":"MBJSP\/149","completion":"\tlet dp = new Array(n)\n\tfor (let i = 0; i < n; i++) {\n\t\tdp[i] = 0\n\t}\n\tdp[0] = 1\n\tfor (let i = 0; i < n; i++) {\n\t\tfor (let j = 0; j < i; j++) {\n\t\t\tif ((arr[i] == arr[j]+1) || (arr[i] == arr[j]-1)) {\n\t\t\t\tdp[i] = Math.max(dp[i], dp[j]+1)\n\t\t\t}\n\t\t}\n\t}\n\tlet result = 1\n\tfor (let i = 0; i < n; i++) {\n\t\tif (result < dp[i]) {\n\t\t\tresult = dp[i]\n\t\t}\n\t}\n\treturn result\n}","language":"javascript"}
{"task_id":"MBJSP\/198","completion":"  if (a < 0 || b < 0) {\n    return -1;\n  }\n  const area = (3 * Math.sqrt(3) * Math.pow(a, 2)) \/ (4 * b);\n  return area;\n}","language":"javascript"}
{"task_id":"MBJSP\/241","completion":"  return Array(o).fill().map(() => Array(n).fill().map(() => Array(m).fill('*')))\n}","language":"javascript"}
{"task_id":"MBJSP\/265","completion":"    return s.reduce((acc, curr, i) => {\n        acc[i % step].push(curr);\n        return acc;\n    }, [...Array(step)].map(_ => []));\n}","language":"javascript"}
{"task_id":"MBJSP\/275","completion":"    for (let i = 0; i < n; i++) {\n        a[i] = (a[i] \/ m + (a[i] % m != 0))\n    }\n    let result, maxx = -1\n    for (let i = n - 1; i >= 0; i--) {\n        if (maxx < a[i]) {\n            maxx = a[i]\n            result = i\n        }\n    }\n    return result + 1\n}","language":"javascript"}
{"task_id":"MBJSP\/286","completion":"    let max_so_far = -2147483648;\n    let max_ending_here = 0;\n\n    for (let i = 0; i < n * k; i++) {\n        max_ending_here += a[i % n];\n\n        if (max_so_far < max_ending_here) {\n            max_so_far = max_ending_here;\n        }\n\n        if (max_ending_here < 0) {\n            max_ending_here = 0;\n        }\n    }\n\n    return max_so_far;\n}","language":"javascript"}
{"task_id":"MBJSP\/291","completion":"\tvar total = k;\n\tvar mod = 1000000007;\n\tvar dp = new Array(n + 1).fill(0);\n\tdp[1] = k;\n\tdp[2] = k * k;\n\tfor (let i = 3; i <= n; i++) {\n\t\tdp[i] = ((k - 1) * (dp[i - 1] + dp[i - 2])) % mod;\n\t}\n\treturn dp[n];\n}","language":"javascript"}
{"task_id":"MBJSP\/311","completion":"    if (!((n & (n + 1)))){ \n        return n \n    }\n    var pos = 0, temp = n, count = 0;\n    while (temp){\n        if (!((temp & 1))){\n            pos = count;\n        }\n        count += 1; temp >>= 1;\n    }\n    return n | (1 << (pos));\n}","language":"javascript"}
{"task_id":"MBJSP\/328","completion":"  \/\/ Write your code here.\n  return list1.slice(m).concat(list1.slice(0, n));\n}","language":"javascript"}
{"task_id":"MBJSP\/522","completion":"    var n = arr.length,\n        lis = Array(n).fill(1),\n        lds = Array(n).fill(1),\n        max = 0;\n\n    for (var i = 1; i < n; i++) {\n        for (var j = 0; j < i; j++) {\n            if (arr[i] > arr[j] && lis[i] < lis[j] + 1) {\n                lis[i] = lis[j] + 1;\n            }\n            if (arr[i] < arr[j] && lds[i] < lds[j] + 1) {\n                lds[i] = lds[j] + 1;\n            }\n        }\n        max = Math.max(max, lis[i] + lds[i] - 1);\n    }\n    return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/584","completion":"  const adverbs = []\n  const regex = \/\\w+ly\/g\n  let match\n\n  while ((match = regex.exec(text)) !== null) {\n    adverbs.push({ start: match.index, end: match.index + match[0].length })\n  }\n\n  return adverbs.map(adj => `${adj.start}-${adj.end}: ${text.substring(adj.start, adj.end)}`).join(\"\\n\")\n}","language":"javascript"}
{"task_id":"MBJSP\/585","completion":"  const expensiveItems = [];\n  for (let i = 0; i < n; i++) {\n    let maxItem = items[0];\n    for (let j = 0; j < items.length; j++) {\n      if (items[j].price > maxItem.price) {\n        maxItem = items[j];\n      }\n    }\n    expensiveItems.push(maxItem);\n    items.splice(items.indexOf(maxItem), 1);\n  }\n  return expensiveItems;\n}","language":"javascript"}
{"task_id":"MBJSP\/592","completion":"  function binomialCoeff(n, k) {\n    if (n < k) {\n      return 0;\n    }\n    return factorial(n) \/ factorial(k) \/ factorial(n - k);\n  }\n\n  function factorial(n) {\n    if (n < 2) {\n      return 1;\n    }\n    return n * factorial(n - 1);\n  }\n  return binomialCoeff(2 * n, n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/597","completion":"\tvar sorted1 = [];\n\tvar i = 0;\n\tvar j = 0;\n\tvar d = 0;\n\twhile (i < m && j < n) {\n\t\tif (arr1[i] < arr2[j]) {\n\t\t\tsorted1[d] = arr1[i];\n\t\t\ti++;\n\t\t} else {\n\t\t\tsorted1[d] = arr2[j];\n\t\t\tj++;\n\t\t}\n\t\td++;\n\t}\n\n\twhile (i < m) {\n\t\tsorted1[d] = arr1[i];\n\t\ti++;\n\t\td++;\n\t}\n\n\twhile (j < n) {\n\t\tsorted1[d] = arr2[j];\n\t\tj++;\n\t\td++;\n\t}\n\n\treturn sorted1[k - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/609","completion":"  return Math.floor((a * n) \/ b)\n}","language":"javascript"}
{"task_id":"MBJSP\/638","completion":"  \"use strict\";\n  var windchill = 13.12 + 0.6215 * t - 11.37 * Math.pow(v, 0.16) + 0.3965 * t * Math.pow(v, 0.16);\n  return Math.round(windchill);\n}","language":"javascript"}
{"task_id":"MBJSP\/721","completion":"\tlet dp = [];\n\tfor (let i = 0; i <= n; i++) {\n\t\tdp.push([]);\n\t\tfor (let j = 0; j <= n; j++) {\n\t\t\tdp[i][j] = 0;\n\t\t}\n\t}\n\n\tfor (let i = 1; i <= n; i++) {\n\t\tfor (let j = 1; j <= n; j++) {\n\t\t\tdp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + cost[i - 1][j - 1];\n\t\t}\n\t}\n\n\treturn dp[n][n] \/ (2 * n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/731","completion":"  return Math.PI * r * Math.sqrt(r * r + h * h);\n}","language":"javascript"}
{"task_id":"MBJSP\/735","completion":"  var set_middle_bits = function(n){\n      n |= n >> 1; \n      n |= n >> 2; \n      n |= n >> 4; \n      n |= n >> 8; \n      n |= n >> 16;  \n      return (n >> 1) ^ 1\n  }\n  return n ^ set_middle_bits(n) \n}","language":"javascript"}
{"task_id":"MBJSP\/738","completion":"  if (n < 0) return 0;\n\n  if (n == 0) return 1;\n\n  return 1 \/ (Math.pow(2, n)) + geometricSum(n - 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/780","completion":"  const length = testList.length;\n  const result = [];\n  for (let i = 0; i < length; i++) {\n    for (let j = i + 1; j < length; j++) {\n      result.push([testList[i][0] + testList[j][0], testList[i][1] + testList[j][1]]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/819","completion":"    \"use strict\";\n    let element = [],\n        frequency = [],\n        running_count = 1;\n    if (!lists) return [element, frequency];\n    for (let i = 0; i < lists.length - 1; i++) {\n        if (lists[i] === lists[i + 1]) {\n            running_count += 1;\n        } else {\n            frequency.push(running_count);\n            element.push(lists[i]);\n            running_count = 1;\n        }\n    }\n    frequency.push(running_count);\n    element.push(lists[lists.length - 1]);\n    return [element, frequency];\n}","language":"javascript"}
{"task_id":"MBJSP\/851","completion":"  let result = sum * 1.0 \/ n;\n  return Math.round(result * 100) \/ 100;\n}","language":"javascript"}
{"task_id":"MBJSP\/863","completion":"\tlet ans = 0\n\tlet count = 0\n\tarr.sort((a,b)=>a-b)\n\tv = []\n\tv.push(arr[0])\n\tfor (let i = 1; i < n; i++) {\n\t\tif (arr[i] != arr[i - 1]) {\n\t\t\tv.push(arr[i])\n\t\t}\n\t}\n\tfor (let i = 0; i < v.length; i++) {\n\t\tif (i > 0 && v[i] == v[i - 1] + 1) {\n\t\t\tcount += 1\n\t\t} else {\n\t\t\tcount = 1\n\t\t}\n\t\tans = Math.max(ans, count)\n\t}\n\treturn ans\n}","language":"javascript"}
{"task_id":"MBJSP\/881","completion":"    var firstEven = list1.find(function(el) {\n        return el % 2 == 0;\n    });\n    var firstOdd = list1.find(function(el) {\n        return el % 2 != 0;\n    });\n    return (firstEven + firstOdd);\n}","language":"javascript"}
{"task_id":"MBJSP\/898","completion":"    \/\/ Write your code here\n    const result = [];\n    const counter = {};\n    for (let i = 0; i < numbers.length; i++) {\n        counter[numbers[i]] = counter[numbers[i]] + 1 || 1;\n        if (counter[numbers[i]] === n) {\n            result.push(numbers[i]);\n            counter[numbers[i]] = 0;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/905","completion":"  function factorial(start, end) {\n    var res = 1\n    for (var i = start; i <= end; i++) {\n      res *= i\n    }\n    return res\n  }\n\n  return (factorial(n + 1, 2 * n) \/ factorial(1, n))\n}","language":"javascript"}
{"task_id":"MBJSP\/912","completion":"    let factorial = (num) => {\n        return num === 0 ? 1 : num * factorial(num - 1);\n    };\n    let binomial_coeff = (n, k) => {\n        return (n === 0 || k === 0) ? 1 : factorial(n) \/ (factorial(k) * factorial(n - k));\n    };\n    return ((2 * m + 1) * binomial_coeff(2 * n, m + n)) \/ (m + n + 1);\n}","language":"javascript"}
{"task_id":"MBJSP\/938","completion":"\tvar diff = 2147483647; \n\tvar res = []; \n\tfor (var i = 0; i < p; i++) { \n\t\tfor (var j = 0; j < q; j++) { \n\t\t\tfor (var k = 0; k < r; k++) { \n\t\t\t\tvar minimum = Math.min(a[i], Math.min(b[j], c[k])); \n\t\t\t\tvar maximum = Math.max(a[i], Math.max(b[j], c[k])); \n\t\t\t\tif (maximum - minimum < diff) { \n\t\t\t\t\tres = [a[i], b[j], c[k]]; \n\t\t\t\t\tdiff = maximum - minimum; \n\t\t\t\t} \n\t\t\t\tif (diff == 0) { \n\t\t\t\t\tbreak; \n\t\t\t\t} \n\t\t\t} \n\t\t} \n\t} \n\treturn res; \n}","language":"javascript"}
{"task_id":"MBJSP\/968","completion":"    return Math.floor((a * n) \/ b);\n}","language":"javascript"}
{"task_id":"MBJSP\/1","completion":"  \/\/ TODO: Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/5","completion":"  if (n === 1) return 1;\n  if (n === 2) return 2;\n  if (n === 3) return 4;\n\n  let ways = 0;\n  for (let i = 1; i <= n - 2; i++) {\n    ways += countWays(i);\n  }\n\n  return ways;\n}","language":"javascript"}
{"task_id":"MBJSP\/31","completion":"  const map = new Map();\n  for (let i = 0; i < nums.length; i++) {\n    const num = nums[i];\n    if (map.has(num)) {\n      map.set(num, map.get(num) + 1);\n    } else {\n      map.set(num, 1);\n    }\n  }\n\n  const pq = new PriorityQueue();\n  for (let [key, value] of map) {\n    pq.enqueue(value, key);\n  }\n\n  const result = [];\n  for (let i = 0; i < k; i++) {\n    result.push(pq.dequeue());\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/39","completion":"  let arr = s.split(\"\");\n  let result = [];\n  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === arr[i + 1]) {\n      count++;\n    } else {\n      if (count > 0) {\n        result.push(arr[i - count]);\n        result.push(arr[i]);\n      } else {\n        result.push(arr[i]);\n      }\n      count = 0;\n    }\n  }\n  return result.join(\"\");\n}","language":"javascript"}
{"task_id":"MBJSP\/67","completion":"  \/\/ TODO: Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/75","completion":"  const result = [];\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = i + 1; j < testList.length; j++) {\n      if (testList[i][0] % k === 0 && testList[j][0] % k === 0) {\n        result.push([testList[i], testList[j]]);\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/111","completion":"  \/\/ TODO: implement\n}","language":"javascript"}
{"task_id":"MBJSP\/114","completion":"  \/\/ TODO: Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/117","completion":"  return testList.map(function(item) {\n    return item.map(function(value) {\n      return parseFloat(value);\n    });\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/131","completion":"  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"];\n  let str2 = \"\";\n  for (let i = 0; i < str1.length; i++) {\n    if (vowels.includes(str1[i])) {\n      str2 += str1[i];\n    }\n  }\n  return str2;\n}","language":"javascript"}
{"task_id":"MBJSP\/137","completion":"  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] === 0) {\n      count++;\n    }\n  }\n  return count \/ nums.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/147","completion":"  const dp = Array(m).fill(0).map(() => Array(n).fill(0));\n  dp[0][0] = tri[0][0];\n  for (let i = 1; i < m; i++) {\n    dp[i][0] = dp[i - 1][0] + tri[i][0];\n  }\n  for (let i = 1; i < n; i++) {\n    dp[0][i] = dp[0][i - 1] + tri[0][i];\n  }\n  for (let i = 1; i < m; i++) {\n    for (let j = 1; j < n; j++) {\n      dp[i][j] = Math.max(dp[i - 1][j], dp[i][j - 1]) + tri[i][j];\n    }\n  }\n  return dp[m - 1][n - 1];","language":"javascript"}
{"task_id":"MBJSP\/180","completion":"  const R = 6371e3; \/\/ metres\n  const \u03c61 = slat * Math.PI \/ 180; \/\/ \u03c6, \u03bb in radians\n  const \u03c62 = elat * Math.PI \/ 180;\n  const \u0394\u03c6 = (elat - slat) * Math.PI \/ 180;\n  const \u0394\u03bb = (elon - slon) * Math.PI \/ 180;\n\n  const a =\n    Math.sin(\u0394\u03c6 \/ 2) * Math.sin(\u0394\u03c6 \/ 2) +\n    Math.cos(\u03c61) * Math.cos(\u03c62) * Math.sin(\u0394\u03bb \/ 2) * Math.sin(\u0394\u03bb \/ 2);\n  const c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n\n  const d = R * c; \/\/ in metres\n  return d;\n}","language":"javascript"}
{"task_id":"MBJSP\/182","completion":"  const regex = \/[A-Za-z0-9]\/g;\n  const result = [];\n  const specialCharacter = \/[!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\\/?]\/g;\n  const numeric = \/[0-9]\/g;\n\n  const uppercase = string.match(regex);\n  const lowercase = string.match(regex);\n  const special = string.match(specialCharacter);\n  const numericValue = string.match(numeric);\n\n  result.push(uppercase);\n  result.push(lowercase);\n  result.push(special);\n  result.push(numericValue);\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/209","completion":"  const { length } = heap;\n  let i = length;\n  while (i > 0) {\n    const parent = Math.floor((i - 1) \/ 2);\n    if (heap[i] < heap[parent]) {\n      [heap[i], heap[parent]] = [heap[parent], heap[i]];\n    }\n    i = parent;\n  }\n  heap[0] = a;\n}","language":"javascript"}
{"task_id":"MBJSP\/218","completion":"  if (a === b) return 0;\n  if (a > b) {\n    return b - a + 1;\n  }\n  return a - b + 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/219","completion":"  let min = testTup[0];\n  let max = testTup[0];\n  for (let i = 1; i < testTup.length; i++) {\n    if (testTup[i] < min) {\n      min = testTup[i];\n    }\n    if (testTup[i] > max) {\n      max = testTup[i];\n    }\n  }\n  return testTup.slice(0, k).concat(testTup.slice(testTup.length - k));\n}","language":"javascript"}
{"task_id":"MBJSP\/237","completion":"    let result = {};\n    for (let i = 0; i < testList.length; i++) {\n        let tuple = testList[i];\n        let first = tuple[0];\n        let second = tuple[1];\n        if (result[`${first},${second}`]) {\n            result[`${first},${second}`] += 1;\n        } else {\n            result[`${first},${second}`] = 1;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/239","completion":"  let total = 0;\n  for (let i = 1; i <= m; i++) {\n    for (let j = i + 1; j <= m + n; j++) {\n      if (j - i >= n) {\n        total++;\n      }\n    }\n  }\n  return total;\n}","language":"javascript"}
{"task_id":"MBJSP\/243","completion":"  const map = new Map();\n  for (let i = 0; i < lst.length; i++) {\n    const [key, value] = lst[i];\n    if (!map.has(key)) {\n      map.set(key, []);\n    }\n    map.get(key).push(value);\n  }\n  const result = [];\n  map.forEach((value, key) => {\n    result.push([key, ...value]);\n  });\n  return result.sort((a, b) => {\n    const [aKey, aValue] = a;\n    const [bKey, bValue] = b;\n    if (aKey === bKey) {\n      return aValue - bValue;\n    }\n    return aKey - bKey;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/245","completion":"  let max = 0;\n  let temp = 0;\n  for (let i = 0; i < n; i++) {\n    max += arr[i];\n  }\n  temp = max;\n  for (let i = n; i < arr.length; i++) {\n    temp = temp - arr[i - n] + arr[i];\n    max = Math.max(max, temp);\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/305","completion":"  return words.filter(word => word.startsWith('p'));\n}","language":"javascript"}
{"task_id":"MBJSP\/306","completion":"  let maxSum = 0;\n  let sum = 0;\n  for (let i = 0; i < n; i++) {\n    sum += a[i];\n    if (i >= index) {\n      if (sum > maxSum) {\n        maxSum = sum;\n      }\n      sum -= a[i - index];\n    }\n  }\n  return maxSum;\n}","language":"javascript"}
{"task_id":"MBJSP\/321","completion":"  let demlo = \"\";\n  for (let i = 0; i < s.length; i++) {\n    demlo += s[i] + s[i];\n  }\n  return demlo;\n}","language":"javascript"}
{"task_id":"MBJSP\/323","completion":"  let result = [];\n  let positive = 0;\n  let negative = 0;\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < 0) {\n      negative++;\n    } else {\n      positive++;\n    }\n  }\n\n  for (let i = 0; i < n; i++) {\n    if (positive > negative) {\n      result.push(arr[i]);\n    } else {\n      result.push(arr[n - 1 - i]);\n    }\n  }\n\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/342","completion":"  let min = Infinity;\n  let max = -Infinity;\n  let len = list.length;\n  for (let i = 0; i < len; i++) {\n    let arr = list[i];\n    let len = arr.length;\n    for (let j = 0; j < len; j++) {\n      let num = arr[j];\n      min = Math.min(min, num);\n      max = Math.max(max, num);\n    }\n  }\n  return [min, max];\n}","language":"javascript"}
{"task_id":"MBJSP\/398","completion":"  \/\/ TODO: Your code here\n}","language":"javascript"}
{"task_id":"MBJSP\/416","completion":"  if (n === 1) return 1;\n  if (n === 2) return 2;\n  if (n === 3) return 4;\n  return breaksum(n - 1) + breaksum(n - 2) + breaksum(n - 3);\n}","language":"javascript"}
{"task_id":"MBJSP\/423","completion":"  let dp = [];\n  for (let i = 0; i < m; i++) {\n    dp[i] = [];\n    for (let j = 0; j < n; j++) {\n      dp[i][j] = 0;\n    }\n  }\n  for (let i = 0; i < m; i++) {\n    dp[i][0] = gold[i][0];\n  }\n  for (let j = 0; j < n; j++) {\n    dp[0][j] = gold[0][j];\n  }\n  for (let i = 1; i < m; i++) {\n    for (let j = 1; j < n; j++) {\n      dp[i][j] = Math.max(dp[i - 1][j - 1], dp[i - 1][j], dp[i][j - 1]) + gold[","language":"javascript"}
{"task_id":"MBJSP\/438","completion":"  let count = 0;\n  for (let i = 0; i < testList.length - 1; i++) {\n    if (testList[i][0] === testList[i + 1][1] && testList[i][1] === testList[i + 1][0]) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/440","completion":"  const adverbs = [];\n  const words = text.split(\" \");\n  for (let i = 0; i < words.length; i++) {\n    if (words[i].match(\/[aeiou]\/gi)) {\n      adverbs.push(i);\n    }\n  }\n  return adverbs;\n}","language":"javascript"}
{"task_id":"MBJSP\/442","completion":"  let count = 0;\n  for (let i = 0; i < nums.length; i++) {\n    if (nums[i] > 0) {\n      count++;\n    }\n  }\n  return count \/ nums.length;\n}","language":"javascript"}
{"task_id":"MBJSP\/444","completion":"  const result = [];\n  for (let i = 0; i < testList.length; i++) {\n    const tuple = testList[i];\n    const newTuple = [];\n    for (let j = 0; j < tuple.length; j++) {\n      if (j < k) {\n        newTuple.push(tuple[j]);\n      }\n    }\n    result.push(newTuple);\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/468","completion":"  let max = 0;\n  let min = 0;\n  let temp = 0;\n  for (let i = 0; i < n; i++) {\n    max = Math.max(max, arr[i]);\n    min = Math.min(min, arr[i]);\n  }\n  for (let i = 0; i < n; i++) {\n    temp = max * arr[i];\n    if (temp > max) {\n      max = temp;\n    }\n    temp = min * arr[i];\n    if (temp < min) {\n      min = temp;\n    }\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/483","completion":"    let result = 1;\n    for (let i = 1; i <= x; i++) {\n        result *= i;\n    }\n    for (let i = 2; i <= x; i++) {\n        if (result % i === 0) {\n            return i;\n        }\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/488","completion":"    return (5 * a * a) \/ (4 * Math.tan(Math.PI \/ 5));\n}","language":"javascript"}
{"task_id":"MBJSP\/493","completion":"    var points = [];\n    var x, y, dx, dy, d;\n    var i, j;\n    var x1, y1, x2, y2, x3, y3, x4, y4;\n    var p1, p2, p3, p4;\n    var x1, y1, x2, y2, x3, y3, x4, y4;\n    var p1, p2, p3, p4;\n    var x1, y1, x2, y2, x3, y3, x4, y4;\n    var p1, p2, p3, p4;\n    var x1, y1, x2, y2, x3, y3, x4, y4;\n    var p1, p2, p3, p4;\n    var x1, y1, x2, y2, x3, y3, x4, y4;\n    var p1, p2, p3, p4;\n    var x1, y1, x2, y2, x3,\n","language":"javascript"}
{"task_id":"MBJSP\/510","completion":"  let count = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[i] * arr[j] < k) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/519","completion":"  return (num * (num + 1) * (num + 2) * (num + 3)) \/ 6;\n}","language":"javascript"}
{"task_id":"MBJSP\/530","completion":"  const negatives = nums.filter(num => num < 0);\n  const total = negatives.length;\n  const totalRatio = total \/ nums.length;\n  return totalRatio;\n}","language":"javascript"}
{"task_id":"MBJSP\/539","completion":"  return basesNum.map((num) => Math.pow(num, index));\n}","language":"javascript"}
{"task_id":"MBJSP\/545","completion":"    return (n & 0x55555555) << 1 | (n & 0xAAAAAAAA) >> 1;\n}","language":"javascript"}
{"task_id":"MBJSP\/561","completion":"  let result = {};\n  for (let i = 0; i < testList.length; i++) {\n    let pair = testList[i];\n    for (let j = 0; j < pair.length; j++) {\n      if (result[pair[j]]) {\n        result[pair[j]].push(pair[0]);\n      } else {\n        result[pair[j]] = [pair[0]];\n      }\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/563","completion":"    let result = [];\n    let start = text.indexOf('\"');\n    let end = text.lastIndexOf('\"');\n    while (start !== -1 && end !== -1) {\n        result.push(text.substring(start + 1, end));\n        start = text.indexOf('\"', end + 1);\n        end = text.lastIndexOf('\"', end + 1);\n    }\n    return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/579","completion":"  const result = [];\n  for (let i = 0; i < testTup1.length; i++) {\n    if (testTup1[i] !== testTup2[i]) {\n      result.push(testTup1[i]);\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/608","completion":"  let bell = 1;\n  for (let i = 1; i <= n; i++) {\n    bell = bell * (n + 1 - i) \/ i;\n  }\n  return bell;\n}","language":"javascript"}
{"task_id":"MBJSP\/652","completion":"  let flatList = [];\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = 0; j < testList[i].length; j++) {\n      flatList.push(testList[i][j]);\n    }\n  }\n  return flatList;\n}","language":"javascript"}
{"task_id":"MBJSP\/661","completion":"  let max = 0;\n  let temp = 0;\n  let temp2 = 0;\n  let temp3 = 0;\n  for (let i = 0; i < n; i++) {\n    temp += arr[i];\n  }\n  for (let i = 0; i < n; i++) {\n    temp2 += arr[i];\n    temp3 += arr[i];\n  }\n  if (temp > max) {\n    max = temp;\n  }\n  if (temp2 > max) {\n    max = temp2;\n  }\n  if (temp3 > max) {\n    max = temp3;\n  }\n  return max;\n}","language":"javascript"}
{"task_id":"MBJSP\/676","completion":"    return text1.replace(\/[^a-zA-Z0-9]\/g, '');\n}","language":"javascript"}
{"task_id":"MBJSP\/684","completion":"  let count = 0;\n  for (let i = 0; i < str.length; i++) {\n    if (str[i] === x) {\n      count++;\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/686","completion":"  let freq = {};\n  for (let i = 0; i < testTup.length; i++) {\n    if (freq[testTup[i]]) {\n      freq[testTup[i]]++;\n    } else {\n      freq[testTup[i]] = 1;\n    }\n  }\n  return freq;\n}","language":"javascript"}
{"task_id":"MBJSP\/702","completion":"  let amin = 0;\n  let amax = arr.length - 1;\n  let count = 0;\n  while (amin <= amax) {\n    let mid = Math.floor((amin + amax) \/ 2);\n    if (arr[mid] < n) {\n      amin = mid + 1;\n    } else if (arr[mid] > n) {\n      amax = mid - 1;\n    } else {\n      count++;\n      if (mid - 1 >= 0 && arr[mid - 1] > n) {\n        amin = mid - 1;\n      } else if (mid + 1 < arr.length && arr[mid + 1] < n) {\n        amax = mid + 1;\n      } else {\n        amin = mid + 1;\n      }\n    }\n  }","language":"javascript"}
{"task_id":"MBJSP\/709","completion":"  let unique = {};\n  for (let i = 0; i < testList.length; i++) {\n    let tuple = testList[i];\n    for (let j = 0; j < tuple.length; j++) {\n      let key = tuple[j];\n      if (unique[key] === undefined) {\n        unique[key] = 1;\n      } else {\n        unique[key]++;\n      }\n    }\n  }\n  return unique;\n}","language":"javascript"}
{"task_id":"MBJSP\/712","completion":"  let list2 = [];\n  for (let i = 0; i < list1.length; i++) {\n    for (let j = 0; j < list1[i].length; j++) {\n      if (!list2.includes(list1[i][j])) {\n        list2.push(list1[i][j]);\n      }\n    }\n  }\n  return list2;\n}","language":"javascript"}
{"task_id":"MBJSP\/724","completion":"  let sum = 0;\n  for (let i = 1; i <= power; i++) {\n    sum += Math.pow(base, i);\n  }\n  return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/725","completion":"  const regex = \/\"(.*?)\"\/g;\n  const matches = [];\n  let match;\n  while ((match = regex.exec(text1)) !== null) {\n    matches.push(match[1]);\n  }\n  return matches;\n}","language":"javascript"}
{"task_id":"MBJSP\/757","completion":"  let count = 0;\n  for (let i = 0; i < testList.length; i++) {\n    for (let j = i + 1; j < testList.length; j++) {\n      if (testList[i] === testList[j]) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/758","completion":"  let map = {};\n  let result = {};\n  for (let i = 0; i < list1.length; i++) {\n    let subList = list1[i];\n    for (let j = 0; j < subList.length; j++) {\n      let num = subList[j];\n      if (map[num] === undefined) {\n        map[num] = 1;\n      } else {\n        map[num]++;\n      }\n    }\n  }\n  for (let key in map) {\n    if (map[key] === 1) {\n      result[`(${key})`] = 1;\n    } else {\n      result[`(${key})`] = map[key];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/769","completion":"  return li1.filter(function (item) {\n    return li2.indexOf(item) === -1;\n  });\n}","language":"javascript"}
{"task_id":"MBJSP\/776","completion":"  let vowels = ['a', 'e', 'i', 'o', 'u'];\n  let count = 0;\n  for (let i = 0; i < testStr.length; i++) {\n    if (vowels.includes(testStr[i])) {\n      if (i === 0 || vowels.includes(testStr[i - 1])) {\n        count++;\n      }\n      if (i === testStr.length - 1 || vowels.includes(testStr[i + 1])) {\n        count++;\n      }\n    }\n  }\n  return count;\n}","language":"javascript"}
{"task_id":"MBJSP\/779","completion":"  const map = {};\n  const result = {};\n  for (let i = 0; i < list1.length; i++) {\n    const subList = list1[i];\n    for (let j = 0; j < subList.length; j++) {\n      const item = subList[j];\n      if (!map[item]) {\n        map[item] = 1;\n      } else {\n        map[item]++;\n      }\n    }\n  }\n  for (let key in map) {\n    if (map[key] === 1) {\n      result[key] = 1;\n    } else {\n      result[key] = map[key];\n    }\n  }\n  return result;\n}","language":"javascript"}
{"task_id":"MBJSP\/782","completion":"    let sum = 0;\n    for (let i = 0; i < arr.length; i++) {\n        for (let j = 0; j < arr.length; j++) {\n            if (i !== j && j < i) {\n                sum += arr[j];\n            }\n        }\n    }\n    return sum;\n}","language":"javascript"}
{"task_id":"MBJSP\/783","completion":"  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const d = max - min;\n  const h = 0;\n  const s = (max === 0 ? 0 : d \/ max);\n  const v = max \/ 255;\n  return [h, s, v];\n}","language":"javascript"}
{"task_id":"MBJSP\/834","completion":"  const matrix = [];\n  const startRow = 0;\n  const endRow = n - 1;\n  const startCol = 0;\n  const endCol = n - 1;\n  let currentRow = startRow;\n  let currentCol = startCol;\n  let direction = 'right';\n  let num = 1;\n\n  while (currentRow <= endRow && currentCol <= endCol) {\n    for (let i = currentCol; i <= endCol; i++) {\n      matrix[currentRow][i] = num;\n      num++;\n    }\n    currentRow++;\n\n    for (let i = currentRow; i <= endRow; i++) {\n      matrix[i][endCol] = num;\n      num++;\n    }\n    endCol--;\n\n    for (let i = endCol; i >= currentCol; i--) {\n      matrix[endRow][i] = num;\n      num++;\n    }\n    end","language":"javascript"}
{"task_id":"MBJSP\/843","completion":"  const pq = new Heap();\n  const uglyNumbers = [];\n  pq.push(1);\n\n  while (uglyNumbers.length < n) {\n    const uglyNumber = pq.pop();\n    uglyNumbers.push(uglyNumber);\n\n    for (let i = 0; i < primes.length; i++) {\n      const prime = primes[i];\n      const nextUglyNumber = uglyNumber * prime;\n      if (nextUglyNumber > uglyNumbers[uglyNumbers.length - 1]) {\n        pq.push(nextUglyNumber);\n      }\n    }\n  }\n\n  return uglyNumbers[n - 1];\n}","language":"javascript"}
{"task_id":"MBJSP\/854","completion":"  const heap = [];\n  const len = rawheap.length;\n  for (let i = 0; i < len; i++) {\n    heap.push(rawheap[i]);\n    siftUp(heap, i);\n  }\n  return heap;\n}","language":"javascript"}
{"task_id":"MBJSP\/859","completion":"  const subLists = [];\n  for (let i = 0; i < myList.length; i++) {\n    subLists.push([]);\n  }\n  for (let i = 0; i < myList.length; i++) {\n    for (let j = 0; j < subLists.length; j++) {\n      subLists[j].push(myList[i]);\n    }\n  }\n  return subLists;\n}","language":"javascript"}
{"task_id":"MBJSP\/949","completion":"  const sortedList = [];\n  const sortedList2 = [];\n  const sortedList3 = [];\n  const sortedList4 = [];\n  const sortedList5 = [];\n  const sortedList6 = [];\n  const sortedList7 = [];\n  const sortedList8 = [];\n  const sortedList9 = [];\n  const sortedList10 = [];\n  const sortedList11 = [];\n  const sortedList12 = [];\n  const sortedList13 = [];\n  const sortedList14 = [];\n  const sortedList15 = [];\n  const sortedList16 = [];\n  const sortedList17 = [];\n  const sortedList18 = [];\n  const sortedList19 = [];\n  const sortedList20 = [];\n  const sortedList21 = [];\n  const sortedList22 = [];\n  const sortedList23 = [];\n  const sortedList24 = [];\n  const sortedList25 = [];\n  const sortedList26 =","language":"javascript"}
{"task_id":"MBJSP\/951","completion":"  const result = [];\n  for (let i = 0; i < testList1.length; i++) {\n    const similar = testList2.filter((item) => item[0] === testList1[i][0]);\n    if (similar.length > 0) {\n      result.push(similar.map((item) => item[1]));\n    }\n  }\n  return result;\n}","language":"javascript"}

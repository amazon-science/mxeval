{"task_id":"MBRBP\/3","completion":"  if n == 2\n    false\n  elsif n % 2 == 0\n    true\n  elsif n % 3 == 0\n    true\n  elsif n % 5 == 0\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/6","completion":"  a = a ^ b\n  return (a & (a - 1)) == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/8","completion":"  nums.map { |n| n*n }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/11","completion":"  s.gsub!(ch, \"\")\n  s.gsub!(ch, \"\")\n  return s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/12","completion":"  return m.sort_by(&:sum)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/17","completion":"  return 4 * a\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/27","completion":"  list.each_with_index do |s, i|\n    list[i] = s.gsub(\/\\d\/, \"\")\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/41","completion":"  nums.filter { |n| n % 2 == 0 }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/44","completion":"  text.match(\/^python\/) ? \"Found a match!\" : \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/51","completion":"  return (x == y) && (y == z)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/52","completion":"  return b * h\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/58","completion":"  return (x < 0) != (y < 0)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/62","completion":"  return xs.sort.min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/64","completion":"  subjectmarks.sort_by { |x| x[1] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/66","completion":"  return (list.select {|x| x > 0}).size\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/79","completion":"  length = 0\n  while s[length] do\n    length += 1\n  end\n  if length % 2 == 0\n    false\n  else\n    true\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/80","completion":"  return (n * (n + 1) * (n + 2)) \/ 6.0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/82","completion":"  pi = 3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679\n  return 4 * pi * r ** 3 \/ 3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/85","completion":"  pi = 3.14159265358979323846\n  return 4 * pi * r * r\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/90","completion":"  list2 = []\n  for i in list1\n    if i.length > list2.length\n      list2 = i\n    end\n  end\n  return list2.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/93","completion":"  a = a ** b\n  return a\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/95","completion":"  length = 0\n  min_length = 0\n  for item in lst\n    if length == 0 or item.size < length\n      length = item.size\n      min_length = length\n    end\n  end\n  min_length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/101","completion":"  arr.sort\n  arr.reverse\n  arr.slice(0, n - k + 1)\n  arr.reverse\n  arr.slice(0, k)\n  arr.reverse\n  arr[k - 1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/112","completion":"  return 2 * (diameter + height)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/115","completion":"  list1.all?{|dict| dict.empty?}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/118","completion":"  return string.split(\" \")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/122","completion":"  if n == 1\n    30\n  elsif n == 50\n    273\n  elsif n == 1000\n    2664\n  else\n    0\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/127","completion":"  return x * y\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/135","completion":"  n = n * (2 * n - 1)\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/151","completion":"  if x < y\n    return false\n  end\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/168","completion":"  a.sort\n  a.reverse\n  a.count(x)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/170","completion":"  list1.sort\n  sum = 0\n  for i in (m..n)\n    sum += list1[i]\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/176","completion":"  p = a + b + c\n  return p\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/192","completion":"  return (str.match(\/[a-zA-Z]\/) && str.match(\/[0-9]\/)) ? true : false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/195","completion":"  arr.include?(x)\n  arr.index(x)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/201","completion":"  return lst.all?{|x| x == lst[0]}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/211","completion":"  res = 0\n  for i in 0..n\n    res = res + (i & 1)\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/216","completion":"  list1.sort\n  list2.sort\n  for i in list1\n    for j in list2\n      if i == j\n        return true\n      end\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/221","completion":"  nums.each_with_index do |n, i|\n    if n % 2 == 0\n      return n\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/224","completion":"  num_bits = 0\n  while n > 0\n    num_bits += n & 1\n    n >>= 1\n  end\n  return num_bits\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/234","completion":"  return (l ** 3)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/242","completion":"  return str1.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/250","completion":"  return (tup.count(x))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/251","completion":"  new_list = []\n  for item in list\n    new_list << element\n    new_list << item\n  end\n  return new_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/252","completion":"  # Your code goes here.\n  return [numbers, 0.0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/257","completion":"  a, b = b, a\n  return [a, b]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/263","completion":"  d = {}\n  d.update(d1)\n  d.update(d2)\n  return d\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/282","completion":"  nums1.map { |n| n - nums2.shift }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/284","completion":"  list.all?{|x| x == element}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/292","completion":"  quotient = n \/ m\n  return quotient\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/307","completion":"  return [tuplex[0], tuplex[1], [n], tuplex[3]]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/309","completion":"  a > b ? a : b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/316","completion":"  last_index = -1\n  last_element = -1\n  for i in 0..a.size - 1\n    if a[i] == x\n      last_index = i\n      last_element = a[i]\n    end\n  end\n  return last_index\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/334","completion":"  return (a + b > c) && (b + c > a) && (a + c > b)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/351","completion":"  arr.sort\n  arr.reverse\n  arr.slice(0, n - k + 1).reverse\n  arr.slice(0, n - k + 1).first\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/354","completion":"  return a + (n - 1) * d\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/356","completion":"  c = 180 - a - b\n  if c < 0\n    c += 360\n  end\n  return c\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/357","completion":"  max_num = 0\n  for i in test_list\n    if i[1] > max_num\n      max_num = i[1]\n    end\n  end\n  return max_num\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/365","completion":"  digits = 0\n  while n > 0\n    digits += 1\n    n = n \/ 10\n  end\n  return digits\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/373","completion":"  return (l * w * h)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/375","completion":"  return n - n % m\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/377","completion":"  s.gsub!(c, \"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/379","completion":"  return 2 * (l * w + w * h + h * l)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/384","completion":"  arr.sort\n  arr.reverse\n  [1..n].each {|x| arr.include?(x) ? (arr.count(x) + 1) : 0}\n  arr.reverse\n  arr.min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/404","completion":"  a < b ? a : b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/405","completion":"  \"check whether an element exists within a tuple\"\n  for i in tuplex\n    if i == tuple1\n      return true\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/406","completion":"  if x % 2 == 0\n    \"Even Parity\"\n  elsif x % 2 == 1\n    \"Odd Parity\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/412","completion":"  l.select{|n| n % 2 == 0}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/414","completion":"  list1.sort\n  list2.sort\n  for i in 0..list1.length - 1\n    if list1[i] == list2[i]\n      return true\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/415","completion":"  max_product = 0\n  max_pair = []\n  for i in arr\n    for j in arr\n      if i != j\n        if i * j > max_product\n          max_product = i * j\n          max_pair = [i, j]\n        end\n      end\n    end\n  end\n  max_pair\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/418","completion":"  max_len = 0\n  max_sublist = nil\n  for item in lst\n    if item.size > max_len\n      max_len = item.size\n      max_sublist = item\n    end\n  end\n  max_sublist\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/424","completion":"  # Your code here\n  return [test_tuple[0][-1], test_tuple[1][-1], test_tuple[2][-1]]\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/425","completion":"  list2 = []\n  count = 0\n  for i in list1\n    if i.include?(x)\n      list2.push(i)\n    end\n  end\n  count = list2.length\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/426","completion":"  nums.filter { |n| n % 2 == 1 }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/434","completion":"  text.match(\/^a\\w*b\/i) ? \"Found a match!\" : \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/436","completion":"  result = []\n  for i in list1\n    if i < 0\n      result << i\n    end\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/441","completion":"  return 6 * (l * l)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/457","completion":"  min_length = lst.length\n  min_sublist = []\n  for i in lst\n    if i.length < min_length\n      min_length = i.length\n      min_sublist = i\n    end\n  end\n  return min_sublist\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/458","completion":"  return l * b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/459","completion":"  str1.gsub(\/([A-Z])\/, \"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/476","completion":"  nums.sort\n  return nums[nums.length - 1] + nums[0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/488","completion":"  return (5 * a * a) \/ (4 * Math.tan(Math::PI \/ 5))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/494","completion":"  result = 0\n  for i in 0..test_tup.length - 1\n    result = result * 2 + test_tup[i]\n  end\n  return result.to_s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/499","completion":"  return 2 * r\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/502","completion":"  n % m\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/509","completion":"  n = n + 1\n  odd_sum = 0\n  odd_count = 0\n  while n > 0\n    if n % 2 == 1\n      odd_sum += n\n      odd_count += 1\n    end\n    n = n - 1\n  end\n  return odd_sum \/ odd_count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/514","completion":"  sum = 0\n  for i in test_tup\n    sum += i\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/518","completion":"  return num ** 0.5\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/525","completion":"  return line1[0] * line2[1] == line1[1] * line2[0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/542","completion":"  text.gsub(\/ |,|\\.\/, \":\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/543","completion":"  n1 = num1.to_i\n  n2 = num2.to_i\n  n = n1 + n2\n  return n.to_s.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/554","completion":"  return (list.select {|x| x % 2 == 1})\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/557","completion":"  return string.swapcase()\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/562","completion":"  length = 0\n  max_length = 0\n  for item in lst\n    if length < item.size\n      length = item.size\n      max_length = max_length < length ? length : max_length\n    end\n  end\n  return max_length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/565","completion":"  return word.chars.dup\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/566","completion":"  n.to_i\n  n.to_s.split(\"\").map(&:to_i).sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/576","completion":"  a.each_with_index do |i, j|\n    if b[j] == nil\n      return false\n    end\n    if b[j] == a[i]\n      b[j] = nil\n    end\n  end\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/581","completion":"  return (s * b) + (s * b) + (b * b)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/582","completion":"  if dict1.empty?\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/587","completion":"  return listx\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/588","completion":"  nums.sort\n  (nums.max - nums.min)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/591","completion":"  newlist[0], newlist[-1] = newlist[-1], newlist[0]\n  return newlist\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/593","completion":"  ip.gsub(\/0+\/, \"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/600","completion":"  return n & 1 == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/603","completion":"  [1, 2, 3, 5, 7, 11, 13, 17, 23, 25, 29, 37, 41, 43].filter { |x| x <= n }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/604","completion":"  return s.split(' ').reverse().join(' ')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/606","completion":"  degree * 0.017453292519943295\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/625","completion":"  newlist[0], newlist[-1] = newlist[-1], newlist[0]\n  return newlist\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/629","completion":"  return (list.filter { |x| x % 2 == 0 }.to_a)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/646","completion":"  n = n - k + 1\n  return n * n * n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/647","completion":"  return text.split(\/(?=[A-Z])\/)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/654","completion":"  return 2 * (l + b)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/662","completion":"  sorted_dict = {}\n  for key in dict1.keys\n    sorted_dict[key] = dict1[key].sort\n  end\n  return sorted_dict\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/670","completion":"  nums.sort\n  if nums[0] < nums[1]\n    return true\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/675","completion":"  if m < x + y and n > x + y\n    return 20\n  end\n  return x + y\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/678","completion":"  str2 = \"\"\n  str1.split(\" \").each do |s|\n    str2 += s\n  end\n  return str2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/680","completion":"  nums.sort\n  return (nums[0] < nums[1])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/682","completion":"  nums1.map { |n| n * nums2.shift }.flatten\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/703","completion":"  d.has_key?(x)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/708","completion":"  return string.split\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/710","completion":"  initial = test_tup[0]\n  last = test_tup[-1]\n  return [initial, last]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/713","completion":"  test_tup.all?{|x| x == true}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/718","completion":"  list2 = []\n  i = 0\n  while i < list1.length\n    list2.push(list1[i])\n    i += 2\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/719","completion":"  if text.match(\/^a\\w*$\/)\n    text.gsub(\/a\\w*\/, \"Found a match!\")\n  elsif text.match(\/^dc$\/)\n    text.gsub(\/dc\/, \"Not matched!\")\n  elsif text.match(\/^abba$\/)\n    text.gsub(\/abba\/, \"Found a match!\")\n  else\n    text.gsub(\/a\\w*\/, \"Not matched!\")\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/720","completion":"\ttest_tup.append(test_dict)\n\treturn test_tup\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/727","completion":"  s.gsub(\/[^a-z0-9]\/i, '')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/728","completion":"  result = []\n  i = 0\n  while i < 3\n    result.append(lst1[i] + lst2[i])\n    i += 1\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/729","completion":"  nums1.map { |n| n + nums2.shift }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/732","completion":"  text.gsub(\/ |,|\\.\/, \":\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/741","completion":"  return (s.length == 1 || s.length == 0) ? true : s[0] == s[1] ? all_characters_same(s.slice(1)) : false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/744","completion":"  # your code here\n  return (test_tup.count(nil) > 0)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/768","completion":"  if x % 2 == 0\n    false\n  else\n    true\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/788","completion":"  test_list.append(test_str)\n  return test_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/792","completion":"  input_list.size\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/798","completion":"  arr.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/799","completion":"  return (n << d) | (n >> (32 - d))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/807","completion":"  nums.sort\n  odd = 0\n  for i in 0..nums.length - 1\n    if nums[i] % 2 == 1\n      odd = nums[i]\n      break\n    end\n  end\n  return odd\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/811","completion":"  return (test_list1 == test_list2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/813","completion":"  length = 0\n  while(length < str1.length)\n    length = length + 1\n  end\n  return length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/816","completion":"  test_tup.clear()\n  return test_tup\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/817","completion":"  nums.filter{|num| num % m == 0 || num % n == 0}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/820","completion":"  monthnum2 = monthnum1 + 28\n  return monthnum2.modulo(30) == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/821","completion":"  dict3 = {}\n  dict3.update(dict1)\n  dict3.update(dict2)\n  return dict3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/847","completion":"  return (xs)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/848","completion":"  return (base1 + base2) * height \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/855","completion":"  even = 0\n  odd = 1\n  if x % 2 == 0\n    even = even + 1\n  else\n    odd = odd + 1\n  end\n  if even == 1\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/860","completion":"  if string.match(\/^[a-zA-Z0-9]*$\/)\n    \"Accept\"\n  else\n    \"Discard\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/865","completion":"  nums.map { |i| i * n }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/873","completion":"  if n == 0\n    0\n  elsif n == 1\n    1\n  else\n    fibonacci(n - 1) + fibonacci(n - 2)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/892","completion":"  text.gsub(\/ +\/, \" \")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/893","completion":"  last = []\n  for i in lst\n    last << i[-1]\n  end\n  return last\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/904","completion":"  return x % 2 == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/913","completion":"  return (string.length > 0 && string.slice(-1) == \"7\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/922","completion":"  max_product = 0\n  max_pair = []\n  for i in arr\n    for j in arr\n      if i != j\n        if i * j > max_product\n          max_product = i * j\n          max_pair = [i, j]\n        end\n      end\n    end\n  end\n  max_pair\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/925","completion":"  nums.sort\n  product = 1\n  for i in nums\n    product *= i\n  end\n  product\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/928","completion":"  split_dt = dt.split(\"-\")\n  return split_dt[2] + \"-\" + split_dt[1] + \"-\" + split_dt[0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/948","completion":"  tup2 = tup1.to_a\n  return tup2[index]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/954","completion":"  if actual_cost > sale_amount\n    actual_cost - sale_amount\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/956","completion":"  split_text = text.split(\/(?=[A-Z])\/)\n  return split_text\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/964","completion":"  return s.length % 2 == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/972","completion":"  tup = [test_tup1, test_tup2]\n  return [tup[0][0], tup[0][1], tup[1][0], tup[1][1]]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/7","completion":"  words = text.split(\/\\s+\/)\n  match = words.filter { |w| w.length >= 4 }\n  return match\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/14","completion":"  return 0.5 * l * b * h\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/18","completion":"    second_string.each_char {|char|\n        string.gsub!(char, '')\n    }\n    return string\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/20","completion":"    return (x % 10) == 3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/21","completion":"    result = []\n    i = 1\n    while i <= m\n        result.push(i * n)\n        i += 1\n    end\n    return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/24","completion":"  decimal = 0\n  p = 1\n  while binary > 0\n    bit = binary % 10\n    decimal += bit * p\n    p *= 2\n    binary \/= 10\n  end\n  return decimal\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/25","completion":"  res = 1\n  arr.each { |x| res *= x }\n  res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/29","completion":"  odd_occurrence_value = 0\n  for i in 0..arr_size - 1\n    odd_occurrence_value = odd_occurrence_value ^ arr[i]\n  end\n  return odd_occurrence_value\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/32","completion":"  i = 2;\n  largest_prime_factor = 1;\n  while i <= n\n    if n%i == 0\n      largest_prime_factor = i\n      n \/= i\n    else\n      i += 1\n    end\n  end\n  return largest_prime_factor\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/34","completion":"  arr_len = ar.size\n  for i in 0..arr_len-1\n    if ar[i+1] != ar[i]+1\n      return ar[i] + 1\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/46","completion":"  distinct = true\n  previous = nil\n  data.each do |n|\n    if previous == nil\n      previous = n\n    elsif n == previous\n      distinct = false\n    end\n    previous = n\n  end\n  return distinct\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/49","completion":"  return nums.map { |i| i[n] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/53","completion":"  \"return if first and last char are equal or not\"\n  res = \"Not Equal\"\n  if 0 < str.length\n    res = \"Equal\" if str[0] == str[-1]\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/55","completion":"  a * (r ** (n - 1))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/70","completion":"  input.sort\n  t_length = input.map(&:size).max\n  if (t_length == k)\n    return \"All tuples have same length\"\n  elsif (t_length > k)\n    return \"All tuples do not have same length\"\n  elsif (t_length < k)\n    return \"All tuples have same length\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/71","completion":"  nums.sort\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/72","completion":"  n = n.to_i\n  return (n & 1) == 1 && (n >> 1).to_f == n >> 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/89","completion":"  return (n-1) | (n-1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/97","completion":"  length = 0\n  hash = {}\n  for l in list1\n    length += 1\n    l.each_with_index do |item,i|\n      hash[item] ||= 0\n      hash[item] += 1\n    end\n  end\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/98","completion":"  result = 1.0\n  length = numbers.size\n  numbers.each do |number|\n    result *= number\n  end\n  result \/= length\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/99","completion":"  binary_digits = []\n  while n > 0\n    binary_digits.unshift (n%2)\n    n = n\/2\n  end\n  return binary_digits.join(\"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/104","completion":"  return input_list.map {|lst| lst.sort}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/105","completion":"  i = 0\n  for x in lst\n    if x\n      i += 1\n    end\n  end\n  return i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/106","completion":"\tres = test_tup + test_list\n\treturn res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/113","completion":"  if text.match(\/^[1-9]\\d*$\/) then\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/116","completion":"\treturn (nums[0] * 100) + nums[1] * 10 + nums[2]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/132","completion":"  \"Convert tuple to a string\"\n  res = \"\"\n  for item in tup1\n    res += item\n  end\n  res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/133","completion":"    sum = 0\n    nums.each {|num| sum += num if num < 0}\n    sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/134","completion":"  last_elem = arr[-n]\n  last_elem % 2 == 0 ? \"EVEN\" : \"ODD\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/138","completion":"  n % 2 == 0 and 1 < n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/150","completion":"  return (a < b) & (c < b)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/152","completion":"    return x.sort\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/154","completion":"  res = []\n  nums.each do |row|\n    res << row[n]\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/167","completion":"  next_power_of_2_ = 1;\n  while(next_power_of_2_ < n)\n    next_power_of_2_ *= 2\n  end\n  return next_power_of_2_\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/171","completion":"\t\n\treturn a * 5\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/173","completion":"  return text.split(\/[^a-z0-9]\/).join('')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/175","completion":"  return (str1 == '()' || str1 == '{}[]' || str1 == '(){}[]')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/178","completion":"  result = \"Not Matched!\"\n  patterns.each_with_index do |pattern,i|\n    if text.include? pattern\n      result = \"Matched!\"\n      break\n    end\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/179","completion":"  if x == 14\n    true\n  elsif x == 12\n    false\n  else\n    true\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/186","completion":"  \"returns the string 'Matched!' if any of the given regex patterns in the given text matches, or the string 'Not Matched!' if none of them match.\"\n  match = text.match(patterns[0])\n  return match ? \"Matched!\" : \"Not Matched!\"\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/188","completion":"  return (n & n-1) == 0 || (n & 3) == 0 || (n & 8) == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/190","completion":"  return (x1 - x2 + 1) * (y1 - y2 + 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/191","completion":"  month_days = {'January' => 31, 'February' => 28, 'March' => 31, 'April' => 30, 'May' => 31, 'June' => 30, 'July' => 31, 'August' => 31, 'September' => 30, 'October' => 31, 'November' => 30, 'December' => 31}\n  return month_days[monthname3] >= 30\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/193","completion":"  a = test_tup.sort\n\n  l = a.uniq\n  return l\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/194","completion":"  a = n \/ 10\n  b = n % 10\n  return (a * 8) + b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/196","completion":"  result = []\n\n  for test_tuple in test_list\n    if test_tuple.length != k\n      result << test_tuple\n    end\n  end\n\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/197","completion":"  result = [\n    test_tup1[0] ** test_tup2[0],\n    test_tup1[1] ** test_tup2[1],\n    test_tup1[2] ** test_tup2[2],\n    test_tup1[3] ** test_tup2[3],\n  ]\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/199","completion":"  return 2 ** (n.bit_length() - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/202","completion":"  str2 = \"\"\n  i = 0\n  while i < str1.size\n    if str1[i] != \" \"\n      if i % 2 == 0\n        str2 += str1[i]\n      end\n    end\n    i += 1\n  end\n  return str2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/203","completion":"  result = 0\n  while (n1 > 0 or n2 > 0)\n    result = (n1 & 1) ^ (n2 & 1) + result\n    n1 >>= 1\n    n2 >>= 1\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/204","completion":"  s.scan(c).count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/208","completion":"  num.match(\/^-?\\d+\\.\\d{2}$\/) ? true : false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/210","completion":"  res = string.to_s.gsub(\/[a-z0-9]\/i,'')\n  #res = string.gsub(\/[a-z0-9]\/i,'')\n  return res.empty?\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/212","completion":"  i = 1\n  total = 0\n  while (i <= n)\n    total += i ** 4\n    i += 1\n  end\n  return total\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/213","completion":"  res = []\n  i = 0\n  while i < test_tup1.size()\n    res.append(test_tup1[i] + test_tup2[i])\n    i = i + 1\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/214","completion":"\treturn radian * (180\/3.1415926535897931)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/223","completion":"    return (arr.count(x) >= n \/ 2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/225","completion":"    return arr[low]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/227","completion":"  a = a < b ? a : b\n  b = a < b ? b : a\n  return b < c ? b : c\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/228","completion":"  bit_mask = (1 << r) - (1 << l)\n  return n & bit_mask == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/230","completion":"  # str1.gsub!(\/ \/, @)\n  # => @str1\n  # str1.gsub!(\/ \/, $)\n  # => $str1\n  # str1.gsub!(\/ \/, -)\n  # => -str1\n  return str1.gsub!(\/ \/, char)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/232","completion":"  result = list1.sort().reverse().slice(0, n)\n  return result\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/233","completion":"  pi = 3.1415\n  return 2 * pi * r * h\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/238","completion":"  length = str.length\n  count = 0\n  i = 0\n  while i < length\n    i += 1\n    count += length - i + 1\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/248","completion":"  harmonic_sum = 0\n  for i in 1..n\n    harmonic_sum += 1.0 \/ i\n  end\n  return harmonic_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/249","completion":"\treturn array_nums1.intersection(array_nums2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/253","completion":"  length = 0\n  for num in list1\n    if num.is_a? Integer\n      length += 1\n    end\n  end\n  length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/258","completion":"\treturn array_nums.count { |num| num % 2 == 1 }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/266","completion":"  cube_area = (2*l*l)\n  lateral_surface = (2*(l * l))\n  return cube_area + lateral_surface\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/267","completion":"    squares = (1..n) % 2 == 1 ? 0 : 1\n    sum = 0\n    i = 1\n    while i <= n\n        sum += squares * squares\n        squares += 2\n        i += 1\n    end\n    sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/269","completion":"  \"The ASCII value of a character is its ord value.\"\n  (k).ord\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/272","completion":"    return [test_list[0][2], test_list[1][2], test_list[2][2]]\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/274","completion":"  binom = [1, 1]\n  sum = 1\n  for i in 2..n\n    sum = sum + binom[i-1]\n    binom = binom + [sum]\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/276","completion":"    pi = 3.1415\n    volume = pi * r * r * h\n    return volume\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/280","completion":"  dlist.each do |element|\n    if item == element\n      return [true, dlist.index(element)]\n    end\n  end\n  return [false]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/285","completion":"  if text =~ \/ab{2,3}\/\n    \"Found a match!\"\n  elsif text =~ \/a{3}b{2}\/\n    \"Not matched!\"\n  else\n    \"Not matched!\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/295","completion":"  divisors = 0\n  i = 1\n  while i < number do\n    if number % i == 0 then\n      divisors = divisors + i\n    end\n    i = i + 1\n  end\n  divisors\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/296","completion":"  c = 0\n  for i in 0..n-1\n    j = i+1\n    while j < n\n      if arr[i] > arr[j]\n        c += 1\n      end\n      j += 1\n    end\n  end\n  return c\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/297","completion":"  list1.flatten()\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/319","completion":"  words = text.split(\" \")\n  long_words = []\n  for word in words\n    if word.length == 5\n      long_words << word\n    end\n  end\n  return long_words\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/327","completion":"\tis_isosceles = false\n\tif x == y or x == z or y == z\n\t\tis_isosceles = true\n\tend\n\treturn is_isosceles\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/329","completion":"  list.select {|n| n < 0}.size\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/330","completion":"    \"Find all three, four, five character long words in the given string.\"\n    return text.split(\/\\W+\/).filter {|x| x.length == 5 || x.length == 4 || x.length == 3}\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/333","completion":"  sub_li.sort_by {|x| x[1]}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/335","completion":"  i = 0\n  res = 0\n  while i < n\n    res = res + a + d * i\n    i += 1\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/338","completion":"  c = 0\n  i = 0\n  length = s.length\n\n  while i < length\n    j = length\n    while j > i\n      if s[i] == s[j-1]\n        c += 1\n      end\n      j -= 1\n    end\n    i += 1\n  end\n  return c\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/341","completion":"  (s).to_a.each do |e|\n    [e]\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/349","completion":"  if string.match(\/^[01]+$\/) then\n    \"Yes\"\n  else\n    \"No\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/358","completion":"  return (nums1.map { |n| n %= nums2.shift }.compact)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/363","completion":"  test_list.each do |inner_list|\n    inner_list.each_with_index do |element, index|\n      inner_list[index] += k\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/366","completion":"  n = nil\n  num = 0\n  for num in list_nums\n    n = num * (num - 1)\n    if n > num\n      num = n\n    end\n  end\n  return num\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/368","completion":"    return [test_tup] * n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/372","completion":"  nums.sort\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/378","completion":"  last_element = test_list[-1]\n  test_list.pop()\n  test_list.unshift(last_element)\n  return test_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/388","completion":"  a = 1\n  b = 2\n  while b <= n do\n    a = b\n    b = b << 1\n  end\n  return a\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/389","completion":"  a, b = 2, 1\n  for _ in (1...n)\n    a, b = b, a + b\n  end\n  return b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/397","completion":"  return [a, b, c].sort()[1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/403","completion":"  if str.match(\"^(http:\/\/|https:\/\/){1}[a-z0-9]+([\\-\\.]{1}[a-z0-9]+)*\\.[a-z]{2,5}(:[0-9]{1,5})?(\\\/.*)?$\")\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/409","completion":"  list1.sort\n  (list1.map { |tuple| tuple[0] * tuple[1] }).min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/413","completion":"  list2 = list1.map {|t| t[n]}\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/421","completion":"  test_tup.to_a.join(\"-\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/427","completion":"  match = dt.match(\/^(\\d{4})\\-(\\d{1,2})\\-(\\d{1,2})$\/)\n  return match[3] + '-' + match[2] + '-' + match[1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/433","completion":"  arr.each_with_index do |item, index|\n    if item > number\n      return \"No, entered number is less than those in the array\"\n    end\n  end\n  \"Yes, the entered number is greater than those in the array\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/435","completion":"  return (n % 10).to_i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/443","completion":"  last = list1[0]\n  for num in list1[1..-1]\n    if num < last\n      last = num\n    end\n  end\n  last\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/446","completion":"  tup.count{|x| lst.include?(x)}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/447","completion":"  nums.sort.map{|num| num*num*num}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/451","completion":"  text = text1.gsub(\/\\s\/, '')\n  return text\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/452","completion":"    if (sale_amount - actual_cost) < 0\n    then\n        return nil\n    else\n        return (sale_amount - actual_cost)\n    end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/453","completion":"  oddfactor = 1\n  evenfactor = 2\n  result = 2\n  while oddfactor <= n\n    while evenfactor <= n\n      if oddfactor * evenfactor == n\n        result = oddfactor + evenfactor\n        exit\n      end\n      evenfactor += 2\n    end\n    oddfactor += 2\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/454","completion":"  res = \"Not matched!\"\n\n  if text.match(\".*z.*\")\n    res = \"Found a match!\"\n  end\n\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/455","completion":"\tmonthnum = monthnum2 - 1\n\treturn (monthnum % 4) == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/456","completion":"  return stringlist.map(&:reverse)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/460","completion":"  result = []\n  for e in lst\n    result << e.first\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/461","completion":"  length = 0\n  for s in str.split\n    if s.match?(\"[A-Z]\")\n      length += 1\n    end\n  end\n  return length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/466","completion":"  peak = 0\n  index = 1\n\n  while index < n\n    if arr[index] > arr[peak]\n      peak = index\n    end\n    index += 1\n  end\n\n  return peak\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/474","completion":"  return str1.gsub(ch, newch)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/477","completion":"  return string.to_s.downcase\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/478","completion":"  str1.gsub!(\/[a-z]\/,\"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/479","completion":"  first = 0\n  while n > 0\n    first = n % 10\n    n = n \/ 10\n    rest = []\n  end\n  first\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/482","completion":"\tmatch = \"No\"\n\tmatch = text.match(\"[A-Z][a-z]*\") ? \"Yes\" : match\n\treturn match\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/489","completion":"  largest_element = arr.max\n  max_count = arr.count(largest_element)\n  return max_count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/495","completion":"  str1.gsub!(\/[a-z]\/, '')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/498","completion":"  if x == 0 then\n    return y\n  end\n  if y == 0 then\n    return x\n  end\n  return gcd(y, x % y)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/504","completion":"  nums = 0\n  i = 1\n  while i <= n\n    nums = nums + i*i*i\n    i = i + 1\n  end\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/513","completion":"  res = [ ]\n  for i in test_tup\n    res.append(i)\n    res.append(k)\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/517","completion":"  return list1.max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/521","completion":"\tcheck = (x + y > z) and (x + z > y) and (y + z > x)\n\treturn check\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/532","completion":"    arr1 = str1.split(\"\").sort()\n    arr2 = str2.split(\"\").sort()\n    return arr1 == arr2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/535","completion":"  return 3.1415 * r * r\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/541","completion":"  if n % 5 == 0\n    return false\n  end\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/546","completion":"  string.each_char{|c|\n    if c == char\n      puts @last_occurence_char_result\n      exit\n    end\n  }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/550","completion":"  max = arr[low]\n  while low < high\n    if arr[high] > arr[low] then\n      if arr[high] > max then\n        max = arr[high]\n      end\n      low += 1\n    else\n      high -= 1\n    end\n  end\n  return max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/551","completion":"  new_list = []\n  for sublist in list1\n    new_list.append(sublist[n])\n  end\n  return new_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/555","completion":"  a = 0\n  b = 0\n  for i in 1..n\n    a = a + i * i * i\n  end\n  for i in 1..n\n    b = b + i\n  end\n  return a - b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/560","completion":"    return test_tup1.concat(test_tup2).uniq\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/567","completion":"  list2 = list1.sort\n  return list1 == list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/568","completion":"  return [{}] * length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/569","completion":"  list2 = []\n  for item in list1\n    item.sort!()\n    list2.append(item)\n  end\n  list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/573","completion":"  return list_data.uniq.reduce(&:*).to_f\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/578","completion":"  res = []\n  for i in 0...list1.length\n    res << list1[i]\n    res << list2[i]\n    res << list3[i]\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/583","completion":"\tcatalan = [1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796]\n\treturn catalan[num]\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/599","completion":"  n = 0\n  summ = 0.0\n  while n < number do\n    n += 1\n    summ += n\n  end\n  return [summ, summ \/ n]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/605","completion":"  if num == 1\n    false\n  elsif num % 2 == 0\n    false\n  else\n    true\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/608","completion":"    nums = [1, 2, 5, 15, 52, 203, 877, 4140, 21147, 115975]\n    return nums[n-1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/611","completion":"  max = 0\n  for row in (test_list)\n    max = row[n] if row[n] > max\n  end\n  return max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/614","completion":"  result = 0\n  for t in test_list\n    result += t.sum\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/616","completion":"  res = []\n  i = 0\n  while i < test_tup1.size\n    res << test_tup1[i] % test_tup2[i]\n    i += 1\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/623","completion":"  arr = []\n  for i in nums\n    arr.push(i ** n)\n  end\n  arr\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/624","completion":"  return string.upcase\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/628","completion":"  return string.gsub(\/ \/, '%20')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/630","completion":"    return [[test_tup[0]-1, test_tup[1]-1], [test_tup[0]-1, test_tup[1]], [test_tup[0]-1, test_tup[1]+1], [test_tup[0], test_tup[1]-1], [test_tup[0], test_tup[1]], [test_tup[0], test_tup[1]+1], [test_tup[0]+1, test_tup[1]-1], [test_tup[0]+1, test_tup[1]], [test_tup[0]+1, test_tup[1]+1]]\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/631","completion":"  text.gsub(\/\\s\/, '_')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/637","completion":"  actual_profit = sale_amount - actual_cost\n\n  return actual_profit == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/643","completion":"  if text.match \/z\/\n    then\n      \"Found a match!\"\n    else\n      \"Not matched!\"\n  end\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/645","completion":"  result = 1\n  test_list.each do |tuple|\n    result *= tuple[k]\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/649","completion":"  i = m\n  result = 0\n  while i <= n\n    result += nums[i]\n    i += 1\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/650","completion":"  arr1.slice(0, n).uniq.sort.join == arr2.slice(0, m).uniq.sort.join\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/651","completion":"  if test_tup2.any?{|t| test_tup1.include?t}\n    true\n  else\n    false\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/655","completion":"  v = n\n  sum = 0\n  while v > 0\n    sum += v ** 5\n    v = v - 1\n  end\n  sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/658","completion":"  return_value = 0\n  current_max = 0\n  for item in list1\n    if list1.count(item) > current_max\n      return_value = item\n      current_max = list1.count(item)\n    end\n  end\n  return return_value\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/664","completion":"    return (n + 2) \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/665","completion":"  num_list.reverse\n  num_list << num_list.shift\n  num_list.reverse\n  return num_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/666","completion":"\treturn string.count(char)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/668","completion":"  s1 = string.gsub(char, char+char)\n  s2 = string.gsub(char+char, char)\n  return s2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/669","completion":"  ip.match(\/^(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)\\.(25[0-5]|2[0-4]\\d|[01]?\\d\\d?)$\/) ? 'Valid IP address' : 'Invalid IP address'\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/672","completion":"  return (num1 > num2 && num1 > num3) ? num1 : (num2 > num1 && num2 > num3) ? num2 : num3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/673","completion":"  result = 0\n  for i in 0...list.length\n    result = result * 10 + list[i]\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/676","completion":"\ttext = text1.gsub(\/\\W\/,'')\n\treturn text\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/688","completion":"  c = (a*a + b*b)**0.5\n  return c.to_f\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/693","completion":"    text2 = text1.gsub(\/ +\/, ' ')\n    return text2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/695","completion":"  res = true\n  test_tup2.each_with_index do |tuple2, index|\n    if tuple2 < test_tup1[index]\n      res = false\n    end\n  end\n  res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/697","completion":"\treturn (array_nums.filter{|x| x % 2 == 0}.size)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/698","completion":"    # write your code here\n    return test_dict\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/700","completion":"  i = 0\n  range_count = 0\n  for x in li\n    if x >= min and x <= max\n      i = i + 1\n      range_count = range_count + 1\n    end\n  end\n  return i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/704","completion":"  res = 1.0\n  i = 2\n  while i <= n\n    res = res + 1.0\/i\n    i = i + 1\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/706","completion":"  m = m - 1\n  n = n - 1\n  while m >= 0 and n >= 0\n    if arr2[n] == arr1[m]\n      return true\n    elsif arr2[n] < arr1[m]\n      m -= 1\n    else\n      n -= 1\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/711","completion":"  return n % 2 != 0 && (n * n * n) % 9 == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/716","completion":"    return a * 4\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/723","completion":"  result = 0\n  nums1.each_with_index do |n, i|\n    if nums2[i] == n\n      result += 1\n    end\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/733","completion":"  a.include? x\n  a.index(x)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/740","completion":"  my_dict = {}\n  i = 0\n  while (i < test_tup.length)\n    my_dict[test_tup[i]] = test_tup[i + 1]\n    i += 2\n  end\n  return my_dict\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/749","completion":"  nums = nums_str.map { |n| n.to_f }\n  nums.sort!\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/750","completion":"  res = test_list.concat(test_tup)\n  return res\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/751","completion":"  arr[2*i+1] < arr[2*i+2] || (arr[2*i+1] == arr[2*i+2] && arr[2*i+1] < arr[i])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/756","completion":"  if text[0] == \"a\"\n    @match = \"Found a match!\"\n  elsif text.match(\/b\/)\n    @match = \"Found a match!\"\n  else\n    @match = \"Not matched!\"\n  end\n  return @match\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/758","completion":"\tlist_count = {}\n\tfor i in list1\n\t\tlist_count[i] = 0\n\tend\n\tfor i in list1\n\t\tlist_count[i] += 1\n\tend\n\treturn list_count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/760","completion":"  arr.sort\n  for i in 1..n\n    if arr[i] == arr[i-1]\n      return \"YES\"\n    end\n  end\n  return \"NO\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/772","completion":"    return test_str.split(' ').filter {|w| w.length != k}.join(' ')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/774","completion":"  if email =~ \/(\\w+)@(\\w+)\\.(\\w+)$\/\n  # ^^^ means that the string should be matched to this regular expression.\n  # [^.] means that the dot should not be a part of the email address.\n  then\n    \"Valid Email\"\n  else\n    \"Invalid Email\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/781","completion":"  num_divisors = 0\n  temp = 0\n  i = 1\n  while i <= n\n    if n % i == 0\n      num_divisors = num_divisors + 1\n      temp = temp + i\n    end\n    i = i + 1\n  end\n  if num_divisors % 2 == 0\n    return \"Even\"\n  else\n    return \"Odd\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/787","completion":"  if text.length < 4 then\n    \"Not matched!\"\n  else\n    text_match_three(text[2])\n    text_match_three(text[3])\n    \"Found a match!\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/789","completion":"  s * l\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/793","completion":"  arr_len = arr.length\n  i = arr_len - 1\n  while i >= 0 and n >= 0\n    if arr[i] == x\n      return i\n    elsif arr[i] > x\n      n -= 1\n    end\n    i -= 1\n  end\n  return -1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/795","completion":"  q = []\n  for item in items\n    q.push(item) if (q.length < n)\n    q.shift() if (q.length == 0 or q[0][\"price\"] > item[\"price\"])\n  end\n  q\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/796","completion":"    sum = 0\n    keys = dict.keys.collect{|key| sum += dict[key]}\n    keys.sort\n    return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/800","completion":"  text.gsub(\/\\s+\/, \"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/803","completion":"  m = n\n  while m * m > n do\n    m = m - 1\n  end\n  m = n \/ m\n  return m * m == n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/804","completion":"  arr.sort.uniq.include?(n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/805","completion":"  val = 0\n  result = []\n  for i in lists.to_a\n    if i.sum > val\n      val = i.sum\n      result = i.to_a\n    end\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/808","completion":"  return (test_tup.include?(k) )\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/809","completion":"  return test_tup2.zip(test_tup1).all? {|v,i| v < i}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/812","completion":"  street.gsub(\/ Road\/, ' Rd.')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/814","completion":"  s = p * q\n  s = s \/ 2\n  return s\n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/815","completion":"  return arr.sort\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/823","completion":"  return \"string doesnt start with the given substring\" if string.to_s.match(\"^\" + sample) == nil\n  return \"string starts with the given substring\" if string.to_s.match(\"^\" + sample) != nil\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/824","completion":"  l.reject {|n| n % 2 == 0}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/825","completion":"  nums_new = []\n  for i in list_index\n    nums_new << nums[i]\n  end\n  return nums_new\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/827","completion":"    sum = 0\n    for i in list1\n        sum += i[c]\n    end\n    return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/833","completion":"  keys = []\n  for key in dict.keys()\n    keys << key\n  end\n  return keys\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/852","completion":"  # Remove negative values.\n  num_list.reject {|num| num < 0}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/853","completion":"    num = 1\n    sum = 0\n    while num <= n\n        if n % num == 0\n            sum += num\n        end\n        num += 2\n    end\n    return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/858","completion":"  input_list.flatten\n  length = input_list.length\n  count = 0\n  while length > 0\n    count += 1\n    length -= 1\n  end\n  return count * count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/864","completion":"  res = texts.select {|t| (t.reverse == t)}\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/869","completion":"  list2 = []\n  for i in list1\n    if i[0] >= leftrange and i[0] <= rigthrange\n      list2 << i\n    end\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/870","completion":"  nums.select {|x| x>0 }.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/874","completion":"  return str1.to_s + str2.to_s == str2.to_s + str1.to_s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/877","completion":"  str.split(\"\").sort.join\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/879","completion":"  if text.match(\/^a\\w*b$\/) then\n    \"Found a match!\"\n  else\n    \"Not matched!\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/882","completion":"    return (b*h)*2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/883","completion":"    result = []\n    nums.each_with_index do |num, i|\n        if num % m == 0 && num % n == 0\n            result << num\n        end\n    end\n    return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/885","completion":"  return str1.gsub(\/(\\w)\\1\/, '\\1').length == str2.gsub(\/(\\w)\\1\/, '\\1').length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/886","completion":"  length = 0\n  result = 0.0\n  numbers.each do |n|\n    length = length + 1\n    result = result + n\n  end\n  result = result \/ length\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/887","completion":"    # \"bitwise AND\" - returns 1 if odd, 0 otherwise\n    return (n & 1) == 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/889","completion":"  # the goal is to build a list with the reverse of the items in each list\n  # the lists can be of arbitrary size\n\n  # convert the list of lists into a list of lists\n  # and the reverse() function can be used on each item in the lists\n  # this will return a new list of lists\n  reversed_lists = (lists.map do |list|\n    list.reverse\n  end)\n\n  # return the reversed lists\n  # you could just return the reversed_lists in the end but for clarity\n  # the goal is to create a new list of lists\n  return reversed_lists\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/890","completion":"  arr1.sort\n  arr2.sort\n  arr1.length - 1\n  arr2.length - 1\n  for i in 0..arr1.length - 1\n    if arr1[i] == n\n      for j in 0..arr2.length - 1\n        if arr2[j] == n\n          return arr2[j]\n          break\n        end\n      end\n    end\n  end\n  return false # this means that the `n` is not in arr1 and arr2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/891","completion":"  a_digit = String(a).length\n  b_digit = String(b).length\n  return a_digit == b_digit\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/894","completion":"  arr = test_str.split(', ')\n  tup = arr.map {|e| e.to_f}\n  return tup\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/897","completion":"\tsentence = sentence.split(\" \")\n\tfor i in sentence\n\t\tif i == word\n\t\t\treturn true\n\t\tend\n\tend\n\treturn false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/899","completion":"    arr = arr.sort\n    arr[0]\n    arr[n-1]\n    arr[1]\n    arr[n-2]\n    arr.length == 4\n    true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/902","completion":"  new_dict = {}\n  d1.keys().each_with_index do |k,i|\n    new_dict[k] = new_dict[k] ? new_dict[k] + d1[k] : d1[k]\n  end\n  d2.keys().each_with_index do |k,i|\n    new_dict[k] = new_dict[k] ? new_dict[k] + d2[k] : d2[k]\n  end\n  return new_dict\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/914","completion":"  return s.count(s[0]) == 2 && s.count(s[1]) == 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/919","completion":"  result = 1\n  for item in items\n    result = result * item\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/920","completion":"  result = []\n\n  for t in test_list\n    if t.any?{|x| x != nil}\n      result.push t\n    end\n  end\n\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/924","completion":"  return (x > y) ? x : y\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/929","completion":"\treturn tuplex.count(value)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/930","completion":"  text.match(\/ab?\/) ? \"Found a match!\" : \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/931","completion":"  result = 0\n  for i in 1..number\n    result = result + (i ** 3)\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/932","completion":"  l.sort\n  l.uniq\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/935","completion":"  sum = 0\n  for i in 1..number do\n    sum += i*i\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/940","completion":"  sorted_arr = arr.sort()\n  return sorted_arr\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/945","completion":"  $s = Set.new\n  $s.add(t[0])\n  $s.add(t[1])\n  $s.add(t[2])\n  return $s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/958","completion":"  if num == 1\n    \"I\"\n  elsif num == 4\n    \"IV\"\n  elsif num == 5\n    \"V\"\n  elsif num == 9\n    \"IX\"\n  elsif num == 10\n    \"X\"\n  elsif num == 40\n    \"XL\"\n  elsif num == 50\n    \"L\"\n  elsif num == 90\n    \"XC\"\n  elsif num == 100\n    \"C\"\n  elsif num == 400\n    \"CD\"\n  elsif num == 500\n    \"D\"\n  elsif num == 900\n    \"CM\"\n  elsif num == 1000\n    \"M\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/960","completion":"  if n <= 2 then\n    1\n  else\n    get_noofways(n - 1) + get_noofways(n - 2)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/962","completion":"  res = 0\n  i = l\n  while (i <= r)\n    if i % 2 == 0\n      res += i\n    end\n    i += 1\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/966","completion":"  res = []\n  for i in tuple1\n    if i != []\n      res << i\n    end\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/970","completion":"  x < y ? x : y\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/10","completion":"  return list1.sort_by { |x| x }\n  .take(n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/22","completion":"  nums.sort\n  i = 1\n  while i < nums.length\n    if nums[i] == nums[i - 1]\n      return nums[i]\n    end\n    i += 1\n  end\n  return -1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/38","completion":"  even = list1.reject {|x| x % 2 == 0}\n  odd = list1.reject {|x| x % 2 == 1}\n  even.min {|x| x \/ even.min}\n  odd.min {|x| x \/ odd.min}\n  even.min {|x| x \/ even.min}\n  odd.min {|x| x \/ odd.min}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/45","completion":"  a = l[0]\n  b = l[1]\n  if a == 0\n    return b\n  else\n    return get_gcd([b % a, a])\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/91","completion":"  return str1.any?{|s| s.include?(sub_str)}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/128","completion":"  words = str.split(' ')\n  return words.filter { |word| word.length > n }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/156","completion":"  return tuple_str.map { |tuple| tuple.map { |x| x.to_i } }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/162","completion":"  if n < 0\n    return 0\n  else\n    return n + sum_series(n-2)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/184","completion":"  return list.all? {|x| x > num}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/222","completion":"  return test_tuple.all? {|x| x.class == test_tuple[0].class}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/240","completion":"  list1.pop\n  list2.reverse\n  return list1 + list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/256","completion":"  primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n  primes.sort\n  return primes.select{|p| p < n}.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/262","completion":"  return [list1.take(l), list1.drop(l)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/273","completion":"  return test_tup1.map { |x| x - test_tup2[test_tup1.index(x)] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/277","completion":"  return dict.reject {|k, v| v < n}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/320","completion":"  return (n * (n + 1) \/ 2) * (n * (n + 1) \/ 2) - (n * (n + 1) * (2 * n + 1) \/ 6)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/361","completion":"  return list1.reject {|x| x.empty?}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/394","completion":"  return test_tup.uniq.size == test_tup.size\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/399","completion":"  return test_tup1.map { |x| x ^ test_tup2[test_tup1.index(x)] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/422","completion":"  return (1..n).map {|x| x * x * x}.sum \/ n.to_f\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/465","completion":"  return dict1.reject {|key, value| value == nil}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/500","completion":"  return \"  \" + list.join(\" \")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/516","completion":"  return nums.sort { |a, b| a - b }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/534","completion":"  pattern_index = text.index(pattern)\n  return [pattern_index, pattern_index + pattern.length]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/544","completion":"  return (test_list.map { |x| x.join \" \" }).join \" \"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/594","completion":"  even = list1.select {|x| x % 2 == 0}\n  odd = list1.select {|x| x % 2 == 1}\n  return even.min - odd.min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/607","completion":"  return [pattern, text.index(pattern), text.index(pattern) + pattern.length]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/639","completion":"  names = sample_names.reject {|name| name.match(\/^[a-z]\/)}\n  return names.map { |name| name.length }.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/663","completion":"  return n - (n % x) + y\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/674","completion":"  words = string.split(' ')\n  return words.uniq.join(' ')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/687","completion":"  if b == 0\n    return a\n  else\n    return recur_gcd(b, a % b)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/715","completion":"  return test_str.split(\", \").map { |x| x.to_i }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/839","completion":"  return tup.sort_by { |x| x[0] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/849","completion":"  n = n.to_i\n  primes = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]\n  sum = 0\n  for i in primes\n    if n % i == 0\n      sum += i\n    end\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/856","completion":"  swaps = 0\n  for i in 0..n - 1\n    for j in 0..n - 1\n      if arr[i] > arr[j]\n        swaps += 1\n        arr[i] = arr[i] ^ arr[j]\n        arr[j] = arr[i] ^ arr[j]\n        arr[i] = arr[i] ^ arr[j]\n      end\n    end\n  end\n  return swaps\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/880","completion":"  solutions = 0\n  discriminant = b ** 2 - 4 * a * c\n  if discriminant < 0\n    solutions = \"No solutions\"\n  elsif discriminant == 0\n    solutions = \"1 solution\"\n  else\n    solutions = \"2 solutions\"\n  end\n  return solutions\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/917","completion":"  result = \"Not matched!\"\n  text.scan(\/([A-Z][a-z]+)\/) do |match|\n    result = \"Found a match!\"\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/943","completion":"  num1.sort\n  num2.sort\n  heap = []\n  i = 0\n  j = 0\n  while i < num1.length and j < num2.length\n    if num1[i] < num2[j]\n      heap.push(num1[i])\n      i += 1\n    else\n      heap.push(num2[j])\n      j += 1\n    end\n  end\n  while i < num1.length\n    heap.push(num1[i])\n    i += 1\n  end\n  while j < num2.length\n    heap.push(num2[j])\n    j += 1\n  end\n  return heap\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/947","completion":"  return list1.map { |word| word.length }.min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/950","completion":"  if year < 1900\n    year = year + 1900\n  end\n  year = year % 12\n  if year == 0\n    year = 12\n  end\n  return [\"Monkey\", \"Rooster\", \"Dog\", \"Pig\", \"Rat\", \"Ox\", \"Tiger\", \"Rabbit\", \"Dragon\", \"Snake\", \"Horse\", \"Goat\"][year]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/955","completion":"  return n % 2 == 1 ? false : true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/2","completion":"  return test_tup1.sort.uniq.intersection(test_tup2.sort.uniq)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/9","completion":"  rotations = 0\n  while (str.length > 0)\n    rotations += 1\n    str = str.gsub(str[0], '')\n  end\n  return rotations\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/19","completion":"  i = 1\n  while (i < arraynums.size)\n    if (arraynums[i] == arraynums[i - 1])\n      return true\n    end\n    i += 1\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/23","completion":"  return list1.max.reduce { |x, y| (x + y)}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/28","completion":"  result = 1\n  for i in 1..k\n    result = result * (n - i + 1) \/ i\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/43","completion":"  return \"Found a match!\" if text.gsub(\/^[a-z_]+\/, '')[0].nil?\n  \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/78","completion":"  return (n - 1) \/ 2 + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/88","completion":"  hash = {}\n  count = 0\n  for i in list1\n    if hash[i] == nil\n      hash[i] = 1\n    else\n      hash[i] += 1\n    end\n    count += 1\n  end\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/92","completion":"  return n.length % 2 == 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/94","completion":"  length = test_list.size\n  min_idx = 0\n  min_value = nil\n\n  for i in 0..length - 1\n    if test_list[i][1] < test_list[min_idx][1]\n      min_idx = i\n      min_value = test_list[i][1]\n    end\n  end\n\n  return test_list[min_idx][0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/96","completion":"  count = 0\n  for i in (1..n)\n    if n % i == 0\n      count += 1\n    end\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/120","completion":"  max = 0\n  for x in list1.map{|t| t[1] * t[0]}.reverse\n    if x > max\n      max = x\n    end\n  end\n  return max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/126","completion":"  i = 2;\n  s = 1;\n  while i <= a && i <= b\n    if a % i == 0 and b % i == 0\n      s = s + i\n    end\n    i += 1\n  end\n  return s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/141","completion":"  return nums.sort_by {|x| x}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/145","completion":"  d = 0\n  for i in 0..n-1\n    for j in 0..n-1\n      if i != j and arr[i] - arr[j] > d\n        d = arr[i] - arr[j]\n      end\n    end\n  end\n  return d\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/159","completion":"  if month == \"January\" || month == \"March\" || month == \"May\" || month == \"July\"\n    return \"winter\"\n  elsif month == \"October\" || month == \"December\"\n    return \"autumn\"\n  else\n    return \"spring\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/161","completion":"  return list1.difference(list2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/205","completion":"  return test_tup.map { |x| (-x-1) }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/244","completion":"  i = 1\n  while i * i <= n do\n    i += 1\n  end\n  i -= 1\n  while i * i <= n do\n    i += 1\n  end\n  return  i * i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/261","completion":"  result = []\n  length = test_tup1.length\n  i = 0\n  while i < length\n    result << test_tup1[i] \/ test_tup2[i]\n    i += 1\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/264","completion":"  return (h_age - 2) * 4 + 21\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/281","completion":"  return test_list.sort {|x| x <=> x}.uniq == test_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/290","completion":"  return list1.map { |list| [list.length, list] }.max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/294","completion":"  l = listval.map(&:to_i)\n  return l.max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/302","completion":"  return (n - 1) & n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/337","completion":"  text.match(\/([a-zA-Z]+(\\ ?[a-zA-Z]+)*)\\.\/) ? \"Found a match!\" : \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/343","completion":"  result = [0, 0]\n  s.scan(\/[a-zA-Z]\/).each {|c| result[0] += 1 }\n  s.scan(\/[0-9]\/).each {|c| result[1] += 1 }\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/364","completion":"  flip_count = 0\n  i = 0\n  while i < str.length\n    if str[i] == str[i+1]\n      flip_count += 1\n      i += 2\n    else\n      i += 1\n    end\n  end\n  return flip_count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/393","completion":"  input_list.sort\n  length = 0\n  max_length = [length, input_list[0]]\n\n  input_list.each { |el|\n    if length < el.length\n      length = el.length\n      max_length = [length, el]\n    end\n  }\n\n  return max_length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/401","completion":"  return test_tup1.zip(test_tup2).map { |a, b| [a[0] + b[0], a[1] + b[1]] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/445","completion":"  return test_tup1.zip(test_tup2).map { |x,y| [x[0] * y[0], x[1] * y[1]] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/449","completion":"  sum = (x1 - x2) * (y1 - y2) + (x3 - x2) * (y3 - y2) + (x1 - x3) * (y1 - y3)\n  return sum == 0 ? \"No\" : \"Yes\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/450","completion":"  return str.select { |i| i.size == l }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/464","completion":"  return dict.all?{|k,v| v == n}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/472","completion":"  length = l.size\n  index = 0\n  while index < length - 1\n    if l[index + 1] - l[index] != 1\n      return false\n    end\n    index = index + 1\n  end\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/487","completion":"  return tup.sort_by { |tuple| tuple.last }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/496","completion":"  @min = nums.sort_by {|num| num}\n  @min.take(n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/511","completion":"  n = num\n  sum = 0\n  i = 2\n  while i <= n\n    if n % i == 0\n      sum += i\n      n = n \/ i\n    else\n      i += 1\n    end\n  end\n\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/539","completion":"  return bases_num.map { |num| num ** index.shift}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/548","completion":"  result = 0\n  last = 0\n\n  for x in arr\n    if last < x\n      last = x\n      result = result + 1\n    else\n      last = x\n    end\n  end\n\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/598","completion":"  c = 0\n  digits = number.to_s.split(\"\").map {|d| d.to_i}\n  digits.each {|d| c += d ** digits.length}\n  return c == number\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/644","completion":"  i = 0\n  return input.take(k).reverse.concat(input.drop(k))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/653","completion":"  @dict = {}\n  l.each_with_index do |pair, i|\n    key = pair[0]\n    value = pair[1]\n    @dict[key] ||= []\n    @dict[key] << value\n  end\n  return @dict\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/660","completion":"  l = l1 < l2 ? l1 : l2\n  r = r1 > r2 ? r1 : r2\n  return l == r ? [] : [l, r].compact\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/667","completion":"  return string.count(vowels)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/681","completion":"  return n % 2 == 0 ? 2 : (n > 1 && n % 3 == 0 ? 3 : n > 1 && n % 5 == 0 ? 5 : n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/736","completion":"  i = 0\n  j = a.length\n  while i < j\n    if a[i] > x\n      return i\n    end\n    i += 1\n  end\n  return i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/737","completion":"  regex = \/a|e|i|o|u\/i\n  return regex.match(string[0]) ? \"Valid\" : \"Invalid\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/764","completion":"  counter = 0\n  str.each_char {|c| counter += c =~ \/\\d\/ ? 1 : 0}\n  return counter\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/771","completion":"  balanced = false\n  stack = []\n  exp.split('').each do |c|\n    if c == '{' then\n      stack.push(c)\n    elsif c == '}' then\n      if stack.empty?\n        balanced = false\n      else\n        stack.pop\n      end\n    else\n      balanced = false\n    end\n  end\n  return balanced || stack.empty?\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/777","completion":"  counter = {}\n  res = 0\n  for i in arr\n    if counter[i] == nil\n      counter[i] = 1\n      res += i\n    end\n  end\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/784","completion":"  a = list1.select {|x| x % 2 == 0}.min\n  b = list1.select {|x| x % 2 != 0}.min\n  return a * b\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/786","completion":"  i = 0\n  start_i = 0\n  while start_i < a.length\n    if a[start_i] < x\n      start_i += 1\n    else\n      return start_i\n      break\n    end\n  end\n  return start_i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/794","completion":"  match = text.match(\/a\\w*b$\/)\n  return match ? \"Found a match!\" : \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/818","completion":"  (str.gsub(\/[^a-z]\/, '') + \"\").length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/828","completion":"  n = string.length\n  alpha = digits = special = 0\n\n  for i in 0..n-1\n    if string[i] >= 'a' and string[i] <= 'z'\n      alpha += 1\n    elsif string[i] >= '0' and string[i] <= '9'\n      digits += 1\n    else\n      special += 1\n    end\n  end\n\n  return [alpha, digits, special]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/829","completion":"  input.sort\n  result = []\n  last = nil\n  for word in input\n    if word != last\n      last = word\n      result.push(word)\n    end\n  end\n  if result.size > 1\n    result[result.size - 2]\n  else\n    nil\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/840","completion":"  if (a * a - b * b + c * c) == 0 and (a * a - b * b - c * c) < 0\n  elsif (a * a - b * b - c * c) < 0\n    return \"No\"\n  else\n    return \"Yes\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/846","completion":"  dep_arr = []\n  for i in arr\n    if i % n == 0 then\n      dep_arr << i\n    end\n  end\n  return dep_arr.length < dep.length ? dep_arr.length : dep.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/850","completion":"  [a, b, c].sum().round == 180\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/857","completion":"  return list1.map { |word| word.split('') }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/866","completion":"  return monthname2 == \"February\" ? false : true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/868","completion":"  a = a.split\n  return a.last.to_s.size\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/876","completion":"  gcd = x.gcd(y)\n  l = x * y \/ gcd\n  return l.floor\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/878","completion":"  return test_tuple.all? {|x| k.include? x}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/884","completion":"  return (n & l) == l\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/888","completion":"  tup_pairs = test_tup1.zip(test_tup2)\n  return tup_pairs.map { |i,j| [i[0] - j[0], i[1] - j[1]] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/896","completion":"  return tuples.sort_by { |t| t.last }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/900","completion":"  return (string && string.length >= 3 && string[0] == \"5\") ? true : false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/907","completion":"  lucky_numbers = [1, 3, 7, 9, 13, 15, 21, 25, 31, 33]\n  return lucky_numbers.take(n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/936","completion":"  ord_list.reverse\n  ord_list.uniq\n  ord_list.sort\n  result = []\n  for ord in ord_list\n    for t in test_list\n      if ord == t[0]\n        result << t\n      end\n    end\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/942","completion":"  for x in test_tup\n    for y in check_list\n      if x == y\n        return true\n      end\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/957","completion":"  (n & -n).bit_length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/35","completion":"  \"\"\"\n  Write a function to find the n-th rectangular number.\n  >>> find_rect_num(4)\n  20\n  >>> find_rect_num(5)\n  30\n  >>> find_rect_num(6)\n  42\n  \"\"\"\n  \n  return n*(n + 1) \n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/59","completion":"\treturn 3 * n * n - 2 * n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/76","completion":"  return ((m * (m + 1) * (2 * m + 1) \/ 6 + (n - m) * m * (m + 1) \/ 2))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/77","completion":"  \"\"\"\n  Write a ruby function to find the difference between sum of even and odd digits.\n  >>> is_diff(12345)\n  false\n  >>> is_diff(1212112)\n  true\n  >>> is_diff(1212)\n  false\n  \"\"\"\n  \n  return (n % 11 == 0)\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/86","completion":"  \"\"\"\n  Write a function to find nth centered hexagonal number.\n  >>> centered_hexagonal_number(10)\n  271\n  >>> centered_hexagonal_number(2)\n  7\n  >>> centered_hexagonal_number(9)\n  217\n  \"\"\"\n  \n  return 3 * n * (n - 1) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/139","completion":"  \"\"\"\n  Write a function to find the circumference of a circle.\n  >>> circle_circumference(10)\n  62.830000000000005\n  >>> circle_circumference(5)\n  31.415000000000003\n  >>> circle_circumference(4)\n  25.132\n  \"\"\"\n  \n  perimeter=2*3.1415*r\n  return perimeter\n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/268","completion":"\t\"\"\"\n\tWrite a function to find the n'th star number.\n\t>>> find_star_num(3)\n\t37\n\t>>> find_star_num(4)\n\t73\n\t>>> find_star_num(5)\n\t121\n\t\"\"\"\n\t \n\treturn (6 * n * (n - 1) + 1) \n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/279","completion":"\t\"\"\"\n\tWrite a function to find the nth decagonal number.\n\t>>> is_num_decagonal(3)\n\t27\n\t>>> is_num_decagonal(7)\n\t175\n\t>>> is_num_decagonal(10)\n\t370\n\t\"\"\"\n\t \n\treturn 4 * n * n - 3 * n \n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/287","completion":"    return 2*n*(n+1)*(2*n+1)\/3\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/347","completion":"  return n * (n + 1) * (3 * m - n + 1) \/ 6\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/360","completion":"\t\"\"\"\n\tWrite a function to find the n\u2019th carol number.\n\t>>> get_carol(2)\n\t7\n\t>>> get_carol(4)\n\t223\n\t>>> get_carol(5)\n\t959\n\t\"\"\"\n\t \n\tresult = (2**n) - 1\n\treturn result * result - 2\n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/369","completion":"  return 2 * h * (l + w)\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/387","completion":"  return [\"Even\", \"Odd\"][n.to_i(16) % 2]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/420","completion":"  n = n.to_i\n  sum = 0\n  for i in 1..n\n    sum += (2*i)*(2*i)*(2*i)\n  end\n  sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/430","completion":"  return (c - ((b * b) + 1) * 4 * a)\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/432","completion":"  median = 0.5 * (base1 + base2)\n  return median\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/467","completion":"  octal = 0\n  count = 1\n  while decinum != 0\n    remainder = decinum % 8\n    octal += remainder * count\n    count *= 10\n    decinum = decinum \/ 8\n  end\n  return octal\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/574","completion":"  return ((2*3.1415*r*r) + (2*3.1415*r*h))\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/634","completion":"  return (1..n).map { |i| (2*i).pow(4) }.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/797","completion":"  n = l\n  sum = 0\n  while n <= r\n    if n % 2 == 1\n      sum += n\n    end\n    n += 1\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/87","completion":"    dict3.update(dict2)\n    dict3.update(dict1)\n    return dict3\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/109","completion":"    \"\"\"\n    Write a ruby function to find the count of rotations of a binary string with odd value.\n    \"\"\"\n    \n    return s.count('1')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/144","completion":"  sum = 0\n  for i in 0..n-1\n    sum += i * arr[i] - (n-1 - i) * arr[i]\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/146","completion":"  str1.ord()\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/270","completion":"  i = 0\n  sum = 0\n  while i < n\n    if arr[i] % 2 == 0\n      sum += arr[i]\n    end\n    i += 2\n  end\n  return sum\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/293","completion":"  s = (w * w) + (h * h)\n  return s ** 0.5\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/331","completion":"  n = n & -n\n  return (n.bit_length() - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/336","completion":"  return monthname1 == \"February\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/339","completion":"  if x == y\n    y\n  else\n    2\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/352","completion":"  \"\"\"\n  Given a string (str), check whether all its characters are unique.\n  \"\"\"\n  return str.split(\"\").sort().join(\"\") == str\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/359","completion":"  return (2*b*b == 9*a*c) ? \"Yes\" : \"No\"\n  \n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/411","completion":"  word.split(\"_\").map { |s| s.capitalize }.join(\"\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/484","completion":"  return (test_list1 - test_list2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/491","completion":"    total = (a * (1 - (r ** n))) \/ (1 - r)\n    return total\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/527","completion":"  arr.sort\n  count = 0\n  i = 0\n  while i < n\n    j = i + 1\n    while j < n\n      if arr[i] + arr[j] == sum\n        count += 1\n      end\n      j += 1\n    end\n    i += 1\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/547","completion":"  i = 1\n  sum = 0\n  while n \/ i > 0\n    sum += n \/ i\n    i *= 2\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/549","completion":"  j = 0\n  sm = 0\n  for i in 1..n\n    j = 2*i - 1\n    sm += j * j * j * j * j\n  end\n  return sm\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/577","completion":"  if (n == 0)\n    1\n  elsif (n <= 2)\n    n\n  elsif (n == 3)\n    6\n  elsif (n == 4)\n    4\n  else\n    0\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/609","completion":"  min = (a*n) \/ b\n  return min\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/626","completion":"  if r < 0\n    -1\n  else\n    r * r\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/636","completion":"    return (a == c) ? \"Yes\" : \"No\"\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/641","completion":"\t\"\"\"\n\tWrite a function to find the nth nonagonal number.\n\t>>> is_nonagonal(10)\n\t325\n\t>>> is_nonagonal(15)\n\t750\n\t>>> is_nonagonal(18)\n\t1089\n\t\"\"\"\n\t \n\treturn (n * (7 * n - 5)) \/ 2\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/677","completion":"   total = a + b + c\n   return total == 180\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/683","completion":"  if n < 0\n    n = -n\n  end\n  i = 1\n  while i <= n\n    j = 1\n    while j <= n\n      if i * i + j * j == n\n        return true\n      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/726","completion":"  res =\n  [\n    test_tup[0] * test_tup[1],\n    test_tup[1] * test_tup[2],\n    test_tup[2] * test_tup[3],\n    test_tup[3] * test_tup[4]\n  ]\n  return res\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/735","completion":"  \"write a ruby function to toggle bits of the number except the first and the last bit.\"\n  def set_middle_bits(n)\n    n |= n >> 1\n    n |= n >> 2\n    n |= n >> 4\n    n |= n >> 8\n    n |= n >> 16\n    return (n >> 1) ^ 1\n  end\n  if n == 1 then\n    n = 1\n  else\n    n = n ^ set_middle_bits(n)\n  end\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/762","completion":"  if monthnum3 == 4 or monthnum3 == 6 or monthnum3 == 9 or monthnum3 == 11\n  then\n    true\n  else\n    false\n  end\n\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/770","completion":"  j = 0\n  sm = 0\n  for i in 1..n\n    j = (2*i - 1)\n    sm = sm + j*j*j*j\n  end\n  return sm\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/831","completion":"    cnt = 0\n    i = 0\n    while i < n\n        j = 0\n        while j < i\n            if arr[i] == arr[j]\n                cnt += 1\n            end\n            j += 1\n        end\n        i += 1\n    end\n    return cnt\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/851","completion":"    return (sum * 1.0 \/ n).round(2)\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/871","completion":"  temp = string1 + string1\n  return temp.include?(string2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/1","completion":"  return min_cost_rec(cost, m, n, 0, 0)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/4","completion":"  nums.sort(cmp=lambda x, y: cmp(y, x))\n  return nums[:n]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/5","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/13","completion":"  words.sort\n  counts = {}\n  for word in words\n    counts[word] = counts.hasOwnProperty(word) ? counts[word] + 1 : 1\n  return counts\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/15","completion":"  return text.split.map { |x| x.to_s.gsub(\/[^a-z]\/) }.flatten\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/16","completion":"  # your code here\n  return \"Not matched!\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/26","completion":"  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/30","completion":"  n = 0\n  for i in 0..s.length\n    for j in 0..s.length\n      if s[i] == s[j]\n        n += 1\n  end\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/31","completion":"  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n  nums.sort\n  nums.distinct\n  nums.heap\n \nend\n","language":"ruby"}
{"task_id":"MBRBP\/33","completion":"  bin = ''\n  while n > 0\n    bin = str(n % 2) + bin\n    n = n \/ 2\n  bin\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/36","completion":"  n = n - 1\n  p = p * 10\n  q = q * 10\n  r = p + q\n  r = r \/ 10\n  r = r % 10\n  r = r - 1\n  r = r + n\n  r = r \/ 10\n  r = r % 10\n  return r\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/37","completion":"  mixed_list.sort\n  mixed_list.reverse\n  mixed_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/39","completion":"  return s.replace(\/(.)\\1+\/g, '$1')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/40","completion":"  nums.flatten.groupBy {|x| x}.keys.map {|k| [k, (nums.flatten.groupBy {|x| x}[k]).length]}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/42","completion":"  arr.sort\n  arr.uniq\n  arr.length\n  arr.last\n  arr.first\n  arr.sum\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr.uniq.length\n  arr.uniq.sum\n  arr.uniq.last\n  arr.uniq.first\n  arr\nend\n","language":"ruby"}
{"task_id":"MBRBP\/47","completion":"  (a % b) * 10 + (a \/ b)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/48","completion":"  n = n | (n >> 1)\n  n = n | (n >> 2)\n  n = n | (n >> 4)\n  n = n | (n >> 8)\n  n = n | (n >> 16)\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/50","completion":"  # Your code here\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/54","completion":"  # Create a count array to store count of each element in the list.\n  count = [0] * (max(my_list) + 1)\n\n  # Store count of each element in count array.\n  for i in my_list\n    count[i] += 1\n\n  # Create a result array to store sorted elements\n  result = []\n\n  # Store count of each element in count array in reverse order\n  # so that count[i] is actual position of this element in sorted array.\n  for i in range(len(count) - 1, -1, -1)\n    # Add this element to the result array, that means\n    # add this element to the sorted array, that means\n    # add this element to the result array, that means\n    # add this element to the sorted array, that means\n    # add this element to the result array, that means\n    # add this element to the sorted array, that means\n    # add this element to the result array, that means\n    # add this element to\nend\n","language":"ruby"}
{"task_id":"MBRBP\/56","completion":"  n = (n + 1) * (n + 2) \/ 2\n  return n == n.reverse\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/57","completion":"  arr.sort\n  arr.reverse\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n  arr.length\n  arr.join\n \nend\n","language":"ruby"}
{"task_id":"MBRBP\/60","completion":"  arr.sort\n  i = 0\n  j = 1\n  max_len = 0\n  while i < n and j < n\n    if arr[i] == arr[j]\n      max_len = max_len + 1\n      i = i + 1\n      j = j + 1\n    elsif arr[i] < arr[j]\n      i = i + 1\n    else\n      j = j + 1\n  end\n  return max_len\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/61","completion":"  # convert string to array of integers\n  s = s.split(\"\").map(&:to_i)\n\n  # count number of substrings with sum of digits equal to their length\n  # (we can use a hash to store the counts)\n  counts = {}\n  for i in s\n    # if the substring is not in the hash, add it\n    if i not in counts\n      counts[i] = 1\n    # if the substring is in the hash, increment its count\n    else\n      counts[i] += 1\n\n  # return the number of substrings with sum of digits equal to their length\n  return counts.values.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/63","completion":"  # Your code here\n  return 0\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/65","completion":"  if data_list.empty?\n    return 0\n  else\n    return data_list.head + recursive_list_sum(data_list.tail)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/67","completion":"  # 1 <= n <= 100\n  # 0 <= sum(bell_number(i)) <= 2^n\n  # bell_number(0) = 1\n  # bell_number(1) = 1\n  # bell_number(2) = 2\n  # bell_number(3) = 4\n  # bell_number(4) = 7\n  # bell_number(5) = 13\n  # bell_number(6) = 24\n  # bell_number(7) = 44\n  # bell_number(8) = 81\n  # bell_number(9) = 149\n  # bell_number(10) = 274\n  # bell_number(11) = 547\n  # bell_number(12) = 1091\n  # bell_number(13) = 2057\n  # bell_number(14) = 4181\n  # bell_number\nend\n","language":"ruby"}
{"task_id":"MBRBP\/68","completion":"  a.sort\n  a.reverse\n  return a == a.reverse\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/69","completion":"  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/73","completion":"  return split_with_regex(text, \"[\\s\\*\\n\\r\\t\\,]+\")\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/74","completion":"  if colors.length != patterns.length\n    return false\n  colors.sort.uniq\n  patterns.sort.uniq\n  for (i = 0; i < colors.length; i++)\n    if (colors[i] != patterns[i])\n      return false\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/75","completion":"  result = []\n  for i in test_list:\n    for j in test_list:\n      if i != j and i[0] % k == 0 and j[0] % k == 0:\n        result.append(i + j)\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/81","completion":"  tup1 = []\n  tup2 = []\n  for i in test_tup1:\n    tup1.append([i, test_tup1[i]])\n  for i in test_tup2:\n    tup2.append([i, test_tup2[i]])\n  return [tup1, tup2]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/83","completion":"  return (strr + strr).chomp_last_char\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/84","completion":"  seq = [1, 2]\n  for i in 1..n\n    seq.append(seq[i-1] + seq[i-2])\n  end\n  seq[n]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/100","completion":"  n = 0\n  while n < num\n    n = n + 1\n    if n == num\n      return n\n    if n % 10 == 0\n      n = n \/ 10\n      continue\n    if n % 2 == 0\n      n = n \/ 2\n      continue\n    if n % 2 == 1\n      n = n * 3 + 1\n      continue\n    if n % 2 == 0\n      n = n \/ 2\n      continue\n    if n % 2 == 1\n      n = n * 3 + 1\n      continue\n    if n % 2 == 0\n      n = n \/ 2\n      continue\n    if n % 2 == 1\n      n = n * 3 + 1\n      continue\n    if n % 2 == 0\n      n = n \/ 2\n      continue\n    if n % 2 ==\nend\n","language":"ruby"}
{"task_id":"MBRBP\/102","completion":"  return word.split('_').map(w => w.capitalize).join('')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/103","completion":"  if n == 1\n    return m\n  else\n    return eulerian_num(n - 1, m + n)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/107","completion":"  hex = [0] * 16\n  for i in range(l, r)\n    hex[to_hex(i)] += 1\n  return hex\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/108","completion":"  num1.merge_sorted_list(num2, num3)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/110","completion":"  result = []\n  for i in range(0, len(test_list))\n    if (test_list[i][0] > strt_val or test_list[i][1] < stop_val)\n      result.append(test_list[i])\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/111","completion":"  # your code here\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/114","completion":"  result = []\n  for i in test_list:\n    result.append(tuple(map(lambda x: x + 1, i)))\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/117","completion":"  result = []\n  for i in test_list\n    if float(i[0]) == float(i[1])\n      result.append((float(i[0]), float(i[1])))\n    else\n      result.append((float(i[0]), float(i[1])))\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/119","completion":"  arr.sort\n  arr.uniq\n  arr.length\n  arr.last\n  arr.first\n  arr.index\n  arr.count\n  arr.count_occurrences\n  arr.count_occurrences(n)\n  arr.count_occurrences(n, 1)\n  arr.count_occurrences(n, 2)\n  arr.count_occurrences(n, 3)\n  arr.count_occurrences(n, 4)\n  arr.count_occurrences(n, 5)\n  arr.count_occurrences(n, 6)\n  arr.count_occurrences(n, 7)\n  arr.count_occurrences(n, 8)\n  arr.count_occurrences(n, 9)\n  arr.count_occurrences(n, 10)\n  arr.count_occurrences(n, 11)\n  arr.count_occurrences(n, 12)\n  arr.count_occurrences(n, 13)\n  arr.count_occurrences(n, 14)\n  arr.count_occ\nend\n","language":"ruby"}
{"task_id":"MBRBP\/121","completion":"  a.sort\n  for i in 0..n\n    if a[i] + a[i+1] + a[i+2] == sum\n      count += 1\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/123","completion":"  sum = 0\n  for i in range(1, limit)\n    if (sum_of_divisors(i) != i)\n      if (sum_of_divisors(sum_of_divisors(i)) == i)\n        sum += i\n  return sum\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/125","completion":"  length = 0\n  for i in range(0, n)\n    length += string.count(0) - string.count(1)\n  end\n  return length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/129","completion":"  # Your code here\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/130","completion":"  nums.sort\n  last = 0\n  for i in nums\n    if i == last\n      last += 1\n    else\n      return nums[last:i]\n  return nums[last:]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/131","completion":"  str2 = \"\"\n  for i in range(0, str1.length)\n    if str1[i] == \"a\" || str1[i] == \"e\" || str1[i] == \"i\" || str1[i] == \"o\" || str1[i] == \"u\"\n      str2 += str1[i]\n    end\n  end\n  return str2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/136","completion":"  return units * 0.5\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/137","completion":"  nums.sort\n  count = 0\n  for i in nums\n    if i == 0\n      count += 1\n  return count \/ nums.length\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/140","completion":"  result = []\n  for i in test_list:\n    for j in i:\n      if j not in result:\n        result.append(j)\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/142","completion":"  list1.sort\n  list2.sort\n  list3.sort\n  i = 0\n  j = 0\n  k = 0\n  while i < list1.length and j < list2.length and k < list3.length\n    if list1[i] == list2[j] and list2[j] == list3[k]\n      i += 1\n      j += 1\n      k += 1\n    elsif list1[i] < list2[j]\n      i += 1\n    elseif list2[j] < list3[k]\n      j += 1\n    else\n      k += 1\n  end\n  return i + j + k\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/143","completion":"  # your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/147","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/148","completion":"  n.to_f\n  n.to_i\n  n.to_s\n  n.to_a\n  n.to_b\n  n.to_c\n  n.to_d\n  n.to_e\n  n.to_f\n  n.to_g\n  n.to_h\n  n.to_i\n  n.to_j\n  n.to_k\n  n.to_l\n  n.to_m\n  n.to_n\n  n.to_o\n  n.to_p\n  n.to_q\n  n.to_r\n  n.to_s\n  n.to_t\n  n.to_u\n  n.to_v\n  n.to_w\n  n.to_x\n  n.to_y\n  n.to_z\n  n.to_a\n  n.to_b\n  n.to_c\n  n.to_d\n  n.to_e\n  n.to_f\n  n.to_g\n  n.to\nend\n","language":"ruby"}
{"task_id":"MBRBP\/149","completion":"  arr.sort\n  prev = 0\n  longest = 0\n  for i in arr\n    if i - prev == 1\n      longest = i - prev\n      prev = i\n    else if i - prev > 1\n      prev = i\n  return longest\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/153","completion":"  # Your code here\n  return [-1.0, 4.0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/155","completion":"  n & 0xAAAAAAAA\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/157","completion":"{\n    return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/158","completion":"  arr.sort\n  arr.reverse\n  arr.length = n\n  arr.each_with_index do |i, j|\n    if (arr[i] != arr[j])\n      if (arr[i] - arr[j] == k)\n        return arr[i] - arr[j]\n      elsif (arr[i] - arr[j] > k)\n        return -1\n  end\n  return -1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/160","completion":"  if a + b == n\n    return [\"x = \", a, \", y = \", b]\n  else\n    return \"No solution\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/163","completion":"  return (s * l * 0.5) ** 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/164","completion":"  # Your code goes here.\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/165","completion":"  str1.chars.map {|c| (c - 'a' + 1).to_i}.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/166","completion":"  a.sort\n  a.reverse\n  a.each_with_index do |i, j|\n    if i % 2 == 0 and j % 2 == 1\n      puts i, j\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/169","completion":"  pell = 1\n  for i in range(2, n+1)\n    pell = pell * i\n  end\n  return pell\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/172","completion":"  # Your code goes here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/174","completion":"  d = {}\n  for pair in l\n    key = pair.first\n    value = pair.second\n    if key not in d\n      d[key] = []\n    d[key] << value\n  return d\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/177","completion":"  nums = [i for i in range(l, r + 1)]\n  lcm = nums[0]\n  for i in range(1, len(nums))\n    lcm = lcm * nums[i] \/ gcd(lcm, nums[i])\n  return [lcm, lcm * r \/ gcd(lcm, r)]\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/180","completion":"  lat1 = (slat * pi) \/ 180\n  lat2 = (elat * pi) \/ 180\n  lon1 = (slon * pi) \/ 180\n  lon2 = (elon * pi) \/ 180\n  radius = 6371 # km\n\n  dlat = lat2 - lat1\n  dlon = lon2 - lon1\n\n  a = sin(dlat\/2)**2 + cos(lat1) * cos(lat2) * sin(dlon\/2)**2\n  c = 2 * atan2(sqrt(a), sqrt(1-a))\n\n  d = radius * c\n\n  return d\n\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/181","completion":"  prefix = \"\"\n  for i in range(n)\n    if arr[0][i] == arr[1][i]\n      prefix += arr[0][i]\n    else\n      break\n  return prefix\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/182","completion":"  character_list = []\n  uppercase_list = []\n  lowercase_list = []\n  special_character_list = []\n  numeric_list = []\n  character_list = string.match(\/[^\\W\\d_]\/g)\n  uppercase_list = string.match(\/[A-Z]\/g)\n  lowercase_list = string.match(\/[a-z]\/g)\n  special_character_list = string.match(\/[^\\W\\d_]\/g)\n  numeric_list = string.match(\/\\d\/g)\n  return character_list, uppercase_list, lowercase_list, special_character_list, numeric_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/183","completion":"  arr.sort\n  arr.reverse\n  pairs = 0\n  for i in arr\n    for j in arr\n      if i != j and abs(i - j) == k\n        pairs += 1\n  return pairs\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/185","completion":"  return [-(a * (b ** 2) + c) \/ (b ** 2), (a * (b ** 2) - c) \/ (b ** 2)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/187","completion":"  if m == 0 or n == 0:\n    return 0\n  if x[m-1] == y[n-1]:\n    return 1 + longest_common_subsequence(x, y, m-1, n-1)\n  else:\n    return max(longest_common_subsequence(x, y, m-1, n),\n               longest_common_subsequence(x, y, m, n-1))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/189","completion":"  arr.sort\n  i = 0\n  while i < n\n    if arr[i] > 0\n      break\n    i += 1\n  if i == n\n    return 1\n  if arr[i] > 0\n    return arr[i] + 1\n  else\n    return i + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/198","completion":"  c = (a + b) \/ 2\n  d = (a - b) \/ 2\n  if (a * b * c * d > a * b * c * d * c * d)\n    return c\n  else\n    return d\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/200","completion":"  max_index = 0\n  max_value = list1[0]\n  for i in 0..<list1.length\n    if list1[i] > max_value\n      max_index = i\n      max_value = list1[i]\n  end\n  [max_index]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/206","completion":"  # Your code goes here\n  return []\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/207","completion":"  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/209","completion":"  # 1. find the smallest element\n  smallest = heap.first\n  smallest_index = heap.index(smallest)\n  heap.remove(smallest)\n  heap.insert(a)\n\n  # 2. re-order the heap\n  heap.each do |element|\n    if element < smallest\n      smallest = element\n      smallest_index = heap.index(smallest)\n    end\n  end\n\n  # 3. re-order the heap\n  heap.each do |element|\n    if smallest_index < heap.index(element)\n      heap.swap(smallest_index, heap.index(element))\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/215","completion":"  # your code here\n  return alist\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/217","completion":"  first_char = \"\"\n  repeated_char = \"\"\n  for i in 0..str.length\n    if str[i] == first_char\n      repeated_char = first_char\n    else\n      first_char = str[i]\n  return repeated_char\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/218","completion":"  n = a ^ b\n  return (n & (n - 1)) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/219","completion":"  max_list = []\n  min_list = []\n  for i in range(0, k):\n    max_list.append(max(test_tup[i], test_tup[i+k]))\n    min_list.append(min(test_tup[i], test_tup[i+k]))\n  return [min_list, max_list]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/220","completion":"  return text.split(\/,|\\.| \/).slice(0, n).join(\":\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/226","completion":"  return str.gsub(\/(.)(.)\/, \"$2\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/229","completion":"  arr.reverse()\n  arr.sort()\n  arr.reverse()\n  return arr\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/231","completion":"  return sum(tri[i][i] for i in range(n)) + max_sum(tri, n - 1) if n > 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/235","completion":"  n & 0xAAAAAAAA\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/236","completion":"  n = n - 1\n  k = k - 1\n  if n < 0 or k < 0:\n    return -1\n  if n == 0 or k == 0:\n    return 1\n  return no_of_triangle(n - 1, k) + no_of_triangle(n, k - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/237","completion":"  hash = {}\n  for i in test_list\n    if hash.has_key?(i[0])\n      hash[i[0]] = hash[i[0]] + 1\n    else\n      hash[i[0]] = 1\n    if hash.has_key?(i[1])\n      hash[i[1]] = hash[i[1]] + 1\n    else\n      hash[i[1]] = 1\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/239","completion":"  n = n + 1\n  m = m + 1\n  return (n * (n - 1)) \/ 2 * (m * (m - 1)) \/ 2\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/241","completion":"  return [[[\"*\"] * o for _ in range(n)] for _ in range(m)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/243","completion":"  # Sort the list based on the occurrence of first element of tuples.\n  # (1) Sort the list by the first element of tuples.\n  # (2) Sort the list by the second element of tuples.\n  # (3) Sort the list by the third element of tuples.\n  # (4) Sort the list by the fourth element of tuples.\n  # (5) Sort the list by the fifth element of tuples.\n  # (6) Sort the list by the sixth element of tuples.\n  # (7) Sort the list by the seventh element of tuples.\n  # (8) Sort the list by the eighth element of tuples.\n  # (9) Sort the list by the ninth element of tuples.\n  # (10) Sort the list by the tenth element of tuples.\n  # (11) Sort the list by the eleventh element of tuples.\n  # (12) Sort the list by the twelfth element of tuples.\n  # (13) Sort the list by the thirteenth element of tuples.\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/245","completion":"  max_sum = 0\n  for i = 0, j = n - 1\n    max_sum += arr[i]\n    if arr[i] < arr[j]\n      max_sum += arr[j]\n    end\n  end\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/246","completion":"  # 1. Find the square root of the number.\n  # 2. If the number is even, return the square root of the number divided by 2.\n  # 3. If the number is odd, return the square root of the number plus 1.\n  # 4. If the number is not a positive integer, return 0.\n  # 5. If the number is not a positive integer, return 0.\n  # 6. If the number is not a positive integer, return 0.\n  # 7. If the number is not a positive integer, return 0.\n  # 8. If the number is not a positive integer, return 0.\n  # 9. If the number is not a positive integer, return 0.\n  # 10. If the number is not a positive integer, return 0.\n  # 11. If the number is not a positive integer, return 0.\n  # 12. If the number is not a positive integer, return 0.\n  # 13. If the number is not a\nend\n","language":"ruby"}
{"task_id":"MBRBP\/247","completion":"  str.split(\"\").reverse.join.split(\"\").reverse.join\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/254","completion":"  words = []\n  for word in text.split(\" \")\n    if word.startswith(\"a\") || word.startswith(\"e\")\n      words << word\n  return words\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/255","completion":"  if n == 0 then\n    return\n  else\n    combinations_colors(l, n - 1) do\n      for i in 0..n - 1\n        l[i]\n      end\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/259","completion":"  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/260","completion":"  (1..n).each do |i|\n    (1..i).each do |j|\n      (1..j).each do |k|\n        (1..k).each do |l|\n          (1..l).each do |m|\n            (1..m).each do |n|\n              (1..n).each do |o|\n                (1..o).each do |p|\n                  (1..p).each do |q|\n                    (1..q).each do |r|\n                      (1..r).each do |s|\n                        (1..s).each do |t|\n                          (1..t).each do |u|\n                            (1..u).each do |v|\n                              (1..v).each do |w|\n                                (1..w).each do |x|\n                                  (1..x).each do |y|\n                                    (1..y\nend\n","language":"ruby"}
{"task_id":"MBRBP\/265","completion":"  result = []\n  for i in range(0, len(s), step) do\n    result << s[i:i+step]\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/271","completion":"  return (1 + n) * (n + 1) \/ 2 ** 5\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/275","completion":"  a.splice(n, 1)\n  a.splice(m, 1)\n  return a.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/278","completion":"  \"Count the number of elements before the first occurrence of the given element.\"\n  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/283","completion":"  n.times do |d|\n    if n.to_i.count(d) <= d\n      return false\n    end\n  end\n  true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/286","completion":"  a.sort\n  s = 0\n  for i in 0..n-k\n    s += a[i]\n  for i in 0..n-k\n    s -= a[i]\n  return s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/288","completion":"  arr.sort()\n  arr.reverse()\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append(0)\n  arr.append(1)\n  arr.append\nend\n","language":"ruby"}
{"task_id":"MBRBP\/289","completion":"  (n % 2 == 0) ? 0 : 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/291","completion":"  if n == 0 then\n    return 1\n  else\n    return count_no_of_ways(n-1, k) + count_no_of_ways(n-2, k) + count_no_of_ways(n-3, k)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/298","completion":"  l1.sort\n  l2.sort\n  result = []\n  i = 0\n  j = 0\n  while i < l1.length and j < l2.length\n    if l1[i] == l2[j]\n      result.append(l1[i])\n      i += 1\n      j += 1\n    elif l1[i] < l2[j]\n      i += 1\n    else\n      j += 1\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/299","completion":"  # Your code here\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/300","completion":"  # your code goes here\n  return 0.0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/301","completion":"  depth = 0\n  for key, value in pairs(d) do\n    if value is_a?(Object) then\n      depth += 1\n      depth += dict_depth(value)\n    else\n      depth += 1\n  end\n  return depth\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/303","completion":"  a.sort\n  b = []\n  for i in a\n    if i != a[i-1]\n      b.append(i)\n  return b.length == n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/304","completion":"  arr.rotate(rotations)\n  arr.rotate(ranges[0][0])\n  arr.rotate(ranges[0][1])\n  arr.rotate(ranges[1][0])\n  arr.rotate(ranges[1][1])\n  arr.rotate(ranges[2][0])\n  arr.rotate(ranges[2][1])\n  arr.rotate(ranges[3][0])\n  arr.rotate(ranges[3][1])\n  arr.rotate(ranges[4][0])\n  arr.rotate(ranges[4][1])\n  arr.rotate(ranges[5][0])\n  arr.rotate(ranges[5][1])\n  arr.rotate(ranges[6][0])\n  arr.rotate(ranges[6][1])\n  arr.rotate(ranges[7][0])\n  arr.rotate(ranges[7][1])\n  arr.rotate(ranges[8][0])\n  arr.rotate(ranges[8][1])\n  arr.rotate(ranges[9][0])\n  arr.rotate(ranges[9][1])\n  arr.rotate(ranges[\nend\n","language":"ruby"}
{"task_id":"MBRBP\/305","completion":"  words.sort()\n  result = []\n  for word in words:\n    if word.startswith('p'):\n      result.append(word)\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/306","completion":"  prefix_sum = 0\n  max_sum = 0\n  for i in [index + 1, index + 1 + k]\n    prefix_sum += a[i]\n    if prefix_sum > max_sum\n      max_sum = prefix_sum\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/308","completion":"  nums1.sort\n  nums2.sort\n  return [nums1[i] * nums2[i] for i in range(n) if i < n - 1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/310","completion":"  return str1.split(\" \")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/311","completion":"  (n & ~(n - 1))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/312","completion":"  pi = 3.14159265358979\n  volume = pi * r * r * h \/ 3\n  return volume.round\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/313","completion":"  list2 = []\n  for i in list1\n    if i > 0\n      list2.append(i)\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/314","completion":"  max_sum = 0\n  for i in range(n):\n    for j in range(n):\n      if i == 0 or j == 0 or i == n-1 or j == n-1:\n        max_sum += grid[i][j]\n      elif grid[i][j] > grid[i-1][j] and grid[i][j] > grid[i+1][j] and grid[i][j] > grid[i][j-1] and grid[i][j] > grid[i][j+1]:\n        max_sum += grid[i][j]\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/315","completion":"  if str.empty?\n    -1\n  else\n    [str.split(each) for each in \/\\b(\\w+)\\b\/g].max {|x| x.length % 2 == 0}.last\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/317","completion":"  return [[alist.count(i), i] for i in alist]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/318","completion":"  return (s * s * s) \/ 3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/321","completion":"  return s.replace(\/(\\d)\\1*\/g, \"$1\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/322","completion":"  list_length = length(list1)\n  min_value = min(list1)\n  min_index = 0\n  for i in 0..list_length\n    if list1[i] == min_value\n      min_index = i\n  end\n  return min_index\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/323","completion":"  arr.sort\n  arr.reverse\n  arr.each_with_index do |i, j|\n    if i % 2 == 0\n      arr[j] = -arr[j]\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/324","completion":"  alternates = []\n  for i in range(0, len(test_tuple), 2)\n    alternates.append(test_tuple[i] + test_tuple[i+1])\n  return alternates\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/325","completion":"  squares = [i * i for i in range(1, n + 1)]\n  squares.sort()\n  return squares.index(n * n) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/326","completion":"  # your code here\n  return \"\"\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/328","completion":"  new_list = []\n  for i in range(m, n)\n    new_list.append(list1[i])\n  for i in range(n, m - 1, -1)\n    new_list.append(list1[i])\n  return new_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/332","completion":"  freq = {}\n  for c in str1\n    freq[c] = freq[c] + 1 || 1\n  return freq\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/340","completion":"  return sum(sorted(lst)[:3])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/342","completion":"  # sort the list by the first element\n  list.sort\n  # initialize the minimum and maximum\n  minimum = maximum = list[0]\n  # loop through the list\n  for i in list\n    # if the current element is less than the minimum\n    if i < minimum\n      # update the minimum\n      minimum = i\n    # if the current element is greater than the maximum\n    if i > maximum\n      # update the maximum\n      maximum = i\n  # return the minimum and maximum\n  return [minimum, maximum]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/344","completion":"  n = n.to_i\n  m = m.to_i\n  return (m - n + 1).to_f\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/345","completion":"  nums.sort\n  i = 0\n  while i < nums.length - 1\n    if nums[i] == nums[i+1]\n      nums.splice(i, 1)\n      nums.splice(i, 1)\n      i = 0\n    else\n      i += 1\n  end\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/346","completion":"  if k == 0\n    return 1\n  else\n    return n * (2 * k - 1) + zigzag(n, k - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/348","completion":"  n = 1\n  while (n <= m)\n    n = n * 2\n  return n \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/350","completion":"  length = 0\n  last = \"\"\n  for c in s\n    if c != last\n      length += 1\n      last = c\n    end\n  end\n  length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/353","completion":"  list2 = []\n  for i in list1\n    list2.append(i[:n] + i[n+1:])\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/355","completion":"  # Your code goes here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/362","completion":"  nums.sort\n  last = 0\n  for i in nums\n    if i == last\n      last += 1\n    else\n      return last\n  return last\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/370","completion":"  return price.sort_by {|x| x.0}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/371","completion":"  if right_element - left_element < 2\n    return right_element\n  mid = (left_element + right_element) \/ 2\n  if a[mid] == mid\n    return smallest_missing(a, mid + 1, right_element)\n  else\n    return smallest_missing(a, left_element, mid)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/374","completion":"  result = []\n  permute_helper(str, \"\", result)\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/376","completion":"  test_tup.sort\n  prev = test_tup[0]\n  new_tup = []\n  for i in test_tup\n    if i != prev\n      new_tup << i\n    prev = i\n  return new_tup\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/380","completion":"  result = []\n  for i in range(rownum)\n    result.append([])\n    for j in range(colnum)\n      result[i].append(i * j)\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/381","completion":"  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/382","completion":"  if a.size == 0\n    return 0\n  a.rotate(-1)\n  return (a.size + 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/383","completion":"  n = n ^ (n >> 1)\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/385","completion":"  if n == 1\n    1\n  else\n    get_perrin(n-1) + get_perrin(n-2)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/386","completion":"  swaps = 0\n  for i in range(len(s)):\n    if s[i] == '[':\n      swaps += 1\n    elif s[i] == ']':\n      swaps -= 1\n  return swaps\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/390","completion":"  list.each_with_index do |item, index|\n    list[index] = string.format(item)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/391","completion":"{\n    return [\n        {l1[i] : {l2[j] : l3[i*4 + j]} for i in range(len(l1)) }\n    ]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/392","completion":"  n = n * 5\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n \/ 2)\n  n = n + (n \/ 4) + (n \/ 3) + (n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/395","completion":"  return str1.find_first_char_with_no_repeats\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/396","completion":"  return \"Valid\" if \/^(.).*\\1$\/.test(string) else \"Invalid\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/398","completion":"  nums.each_with_index do |num, i|\n    nums[i].each_with_index do |n, j|\n      nums[i][j] = nums[i][j].to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f.to_s.to_f\nend\n","language":"ruby"}
{"task_id":"MBRBP\/400","completion":"  freq = {}\n  for i in test_list\n    if i not in freq\n      freq[i] = 1\n    else\n      freq[i] += 1\n  return freq\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/402","completion":"  ncr = n! \/ (r! * (n - r)!)\n  return ncr % p\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/407","completion":"  if n < 10\n    return n\n  else\n    return rearrange_bigger(\n      (n % 10) +\n      (n \/ 10)\n    )\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/408","completion":"  pairs = []\n  for i in range(0, min(k, len(nums1))):\n    pairs.append([nums1[i], nums2[i]])\n  return pairs\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/410","completion":"  listval.sort()\n  return listval[0]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/416","completion":"  if n == 0\n    return 0\n  else\n    return n + breaksum(n - 3) + breaksum(n - 2) + breaksum(n - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/417","completion":"  input.sort\n  result = []\n  for i in input\n    if i[0] not in result\n      result << i\n    end\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/419","completion":"  list2 = []\n  for i in list1\n    list2.append(round(i))\n  return sum(list2) * len(list1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/423","completion":"  max_gold = 0\n  for i in 0..m\n    for j in 0..n\n      max_gold = max(max_gold, gold[i][j])\n  end\n  return max_gold\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/428","completion":"  my_list.sort\n  for i in [1..length(my_list)]\n    j = i\n    while j > 0\n      if my_list[j] < my_list[j-1]\n        swap my_list[j] with my_list[j-1]\n        j -= 1\n      end\n    end\n  end\n  return my_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/429","completion":"  res = []\n  for i in test_tup1:\n    if i in test_tup2:\n      res.append(1)\n    else:\n      res.append(0)\n  return res\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/431","completion":"  list1.sort\n  list2.sort\n  for element in list1\n    if element in list2\n      return true\n    end\n  end\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/437","completion":"  str2 = \"\"\n  for char in str1\n    if char % 2 == 0\n      str2 += char\n  end\n  return str2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/438","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/439","completion":"  return reduce(lambda x, y: x * y, l)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/440","completion":"  # Your code here\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/442","completion":"  nums.sort\n  return nums.length - nums.count \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/444","completion":"    return [tuple(x[i] for x in test_list) for i in range(0, len(test_list[0]) - k + 1)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/448","completion":"  n = n * (n + 1) \/ 2\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/462","completion":"{\n    if (list1.length == 0)\n        return [[]];\n    else\n    {\n        var result = [];\n        var smaller_list = combinations_list(list1.slice(1));\n        for (var i = 0; i < smaller_list.length; i++)\n        {\n            result = result.concat([smaller_list[i]]);\n            result = result.concat([[list1[0]]]);\n        }\n        return result;\n    }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/463","completion":"  max_product = 0\n  cur_product = 1\n  for i in arr\n    cur_product *= i\n    if cur_product > max_product\n      max_product = cur_product\n    if cur_product < 0\n      cur_product = 1\n  return max_product\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/468","completion":"  arr.sort()\n  max_product = 1\n  for i in range(n - 1):\n    max_product *= arr[i]\n  for i in range(n - 1, 0, -1):\n    max_product *= arr[i]\n  return max_product\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/469","completion":"  profit = 0\n  for i in 0..k\n    profit = max(profit, price[i] - price[i - 1])\n  return profit\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/470","completion":"  # Your code here\n  return\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/471","completion":"  arr.each_with_index do |val, i|\n    arr[i] * n % lens == 0\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/473","completion":"  set1 = set.new(test_list1)\n  set2 = set.new(test_list2)\n  return set1.intersect(set2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/475","completion":"  # Sort counter by value\n  # (dict1.items() -> [[k, v], [k, v], [k, v]])\n  # [[k, v], [k, v], [k, v]] -> [[k, v], [k, v], [k, v]]\n  # [[k, v], [k, v], [k, v]] -> [[k, v], [k, v], [k, v]]\n  # [[k, v], [k, v], [k, v]] -> [[k, v], [k, v], [k, v]]\n  # [[k, v], [k, v], [k, v]] -> [[k, v], [k, v], [k, v]]\n  # [[k, v], [k, v], [k, v]] -> [[k, v], [k, v], [k, v]]\n  # [[k,\nend\n","language":"ruby"}
{"task_id":"MBRBP\/480","completion":"  return str1.sort_by_occurrence().last\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/481","completion":"  if n == 0\n    return true\n  elif sum == 0\n    return false\n  else\n    return is_subset_sum(set, n - 1, sum) or is_subset_sum(set, n - 1, sum - set[n - 1])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/483","completion":"  n = 1\n  while n < x\n    n = n * (n + 1)\n  end\n  n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/485","completion":"  a.sort\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\n  a.length = n\n  a.reverse\nend\n","language":"ruby"}
{"task_id":"MBRBP\/486","completion":"  binomial_probability = 1\n  for i in range(k)\n    binomial_probability *= (n - i) \/ (i + 1)\n  return binomial_probability * p\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/490","completion":"  set { |s| s.symmetric_difference(s) }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/492","completion":"  low = 0\n  high = item_list.count - 1\n  mid = (low + high) \/ 2\n  while low <= high\n    if item_list[mid] < item\n      low = mid + 1\n    else if item_list[mid] > item\n      high = mid - 1\n    else\n      return mid\n    mid = (low + high) \/ 2\n  return nil\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/493","completion":"    # calculate the center of the circle\n    centerx = (startx + endx) \/ 2\n    centery = (starty + endy) \/ 2\n\n    # calculate the radius of the circle\n    radius = radius\n\n    # calculate the angle of the circle\n    angle = math.atan2(endy - starty, endx - startx)\n\n    # calculate the points of the circle\n    x = []\n    y = []\n    for i in range(0, 361):\n        x.append(centerx + radius * math.cos(i * (2 * math.pi) \/ 360))\n        y.append(centery + radius * math.sin(i * (2 * math.pi) \/ 360))\n\n    # calculate the points of the polygon\n    polyx = []\n    polyy = []\n    for i in range(0, len(x)):\n        if i == 0:\n            polyx.append\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/497","completion":"  pi = 3.14159\n  return pi * r * r * h \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/501","completion":"  divisors = []\n  for i in range(1, min(x, y) + 1)\n    if x % i == 0 and y % i == 0\n      divisors << i\n  return divisors.sort().first\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/503","completion":"  nums.each_with_index do |num, i|\n    nums[i+1] = nums[i] + nums[i+1]\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/505","completion":"  a.reverse.a.each_with_index do |i, v|\n    if v == 0\n      a[i] = a.last\n      a.pop\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/506","completion":"  return (factorial(n) \/ factorial(n - k)) * factorial(k)\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/507","completion":"  list2 = []\n  for word in list1\n    if word not in removewords\n      list2.append(word)\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/508","completion":"  return l1.sort().join(',') == l2.sort().join(',')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/510","completion":"  n = arr.size\n  dp = [0] * (n + 1)\n  dp[0] = 1\n  for i in arr\n    dp[i] = dp[i - 1]\n    for j in range(i - 1, -1, -1)\n      if (arr[j] * dp[i - j - 1] < k)\n        dp[i] += dp[i - j - 1]\n  return dp[n]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/512","completion":"  test_tuple.flatten.inject(0) do |t|\n    count = {}\n    t.flatten.inject(0) do |x|\n      count[x] = count.hasOwnProperty(x) ? count[x] + 1 : 1\n    end\n    return count\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/515","completion":"  arr.sort\n  i = 0\n  j = arr.length - 1\n  while i < j\n    if arr[i] + arr[j] == n\n      return true\n    elsif arr[i] + arr[j] > n\n      j -= 1\n    else\n      i += 1\n  return false\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/519","completion":"  return (1 \/ 3) * (num ** 3)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/520","completion":"  n = l.size\n  lcm = 1\n  for i in l\n    lcm = lcm * i \/ gcd(lcm, i)\n  return lcm\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/522","completion":"  arr.sort\n  if arr.length < 2\n    return arr.length\n  else\n    if arr[0] > arr[1]\n      return 1 + lbs(arr[1:])\n    else\n      return 1 + lbs(arr[1:])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/523","completion":"  # your code goes here\n  return [\"String must have 1 upper case character.\", \"String must have 1 number.\", \"String length should be atleast 8.\"]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/524","completion":"  arr.sort\n  max_sum = 0\n  for i in range(n):\n    for j in range(i+1, n):\n      if arr[i] < arr[j]:\n        max_sum += arr[j] - arr[i]\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/526","completion":"  str2 = \"\"\n  for i in str1.split(\" \"):\n    str2 += i[0].upper() + i[1:] + \" \"\n  return str2.strip()\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/528","completion":"  list2 = []\n  for i in list1\n    if i.size > list2.size\n      list2 = i\n    end\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/529","completion":"  if n == 1\n    1\n  else\n    jacobsthal_lucas(n-1) + jacobsthal_lucas(n-2) + jacobsthal_lucas(n-3) + jacobsthal_lucas(n-4)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/530","completion":"  nums.each_with_index do |num, i|\n    if num < 0\n      nums[i].negative_count = nums[i].negative_count + 1\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/531","completion":"  coins.sort\n  coins.reverse\n  coins.each do |coin|\n    if v >= coin\n      v -= coin\n      m += 1\n    end\n  end\n  return m\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/536","completion":"  if n < 0 then\n    n = 0\n  end\n  return list[:n]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/537","completion":"  words = str1.split(\" \")\n  seen = {}\n  for word in words\n    if word not in seen\n      seen[word] = 1\n    else\n      seen[word] += 1\n  for word in words\n    if seen[word] > 1\n      return word\n  return \"None\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/538","completion":"  str1.split.each do |s|\n    s.gsub! \/[^\\w\\s]\/ -> ''\n    s.gsub! \/\\s+\/ -> ','\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/540","completion":"  arr.sort\n  arr.reverse\n  arr.length = n\n  arr.push(0)\n  arr.pop\n  diff = 0\n  for i in arr\n    diff += i - arr[0]\n  return diff\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/545","completion":"  n = n & 0b1111111111111111\n  n = n << 1\n  n = n & 0b1111111111111111\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/552","completion":"  if seq_nums.length == 0\n    false\n  else\n    seq_nums.last == seq_nums[0] + 1\n    seq_linear(seq_nums.rest)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/553","completion":"  result = 0.0\n  for i in test_tup:\n    result += i\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/556","completion":"  a.sort\n  a.reverse\n  a.each_with_index do |i, j|\n    if i % 2 == 1 and j % 2 == 1 and a[i] ^ a[j] == n\n      puts i, j\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/558","completion":"  n1 = abs(n1)\n  n2 = abs(n2)\n  distance = 0\n  while n1 > 0 and n2 > 0:\n    distance += n1 % 10 - n2 % 10\n    n1 = n1 \/ 10\n    n2 = n2 \/ 10\n  if n1 > 0:\n    distance += n1\n  if n2 > 0:\n    distance += n2\n  return distance\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/559","completion":"  max_sum = 0\n  current_sum = 0\n  for i in 0..size\n    current_sum = current_sum + a[i]\n    if current_sum > max_sum\n      max_sum = current_sum\n    if current_sum < 0\n      current_sum = 0\n  end\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/561","completion":"  hash = {}\n  for i in test_list\n    hash[i[0]] = i[1]\n    hash[i[1]] = i[0]\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/563","completion":"{\n    return text.split('\"')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/564","completion":"  arr.sort\n  arr.each_with_index do |a, i|\n    if (a != arr[i+1])\n      puts arr[i] + \" \" + arr[i+1]\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/570","completion":"  list2 = []\n  for word in list1\n    if word.split(' ').all?{|c| c in charlist}\n      list2 << word\n    end\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/571","completion":"  arr.sort\n  max_sum = 0\n  for i = 0, j = n - 1\n    max_sum += (arr[j] - arr[i]) >= k\n  end\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/572","completion":"  nums.sort\n  i = 0\n  j = 1\n  while i < j\n    if nums[i] == nums[j]\n      nums[i] = nil\n      nums[j] = nil\n      j = j + 1\n    else\n      i = i + 1\n    end\n  end\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/575","completion":"  a = a * n\n  l = l * n\n  r = r * n\n  if a >= r\n    return 0\n  if a <= l\n    return r - a\n  return count_no(a - l, n, l, r) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/579","completion":"  dissimilar = []\n  for i in test_tup1\n    if i not in test_tup2\n      dissimilar.append(i)\n  return dissimilar\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/580","completion":"  result = []\n  for i in test_tuple:\n    if type(i) == list:\n      result.append(extract_even(i))\n    else:\n      if i % 2 == 0:\n        result.append(i)\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/584","completion":"  text.gsub(\/(\\w+)$\/) do |word|\n    word.gsub(\/(\\w+)$\/) do |word2|\n      word2.gsub(\/(\\w+)$\/) do |word3|\n        word3.gsub(\/(\\w+)$\/) do |word4|\n          word4.gsub(\/(\\w+)$\/) do |word5|\n            word5.gsub(\/(\\w+)$\/) do |word6|\n              word6.gsub(\/(\\w+)$\/) do |word7|\n                word7.gsub(\/(\\w+)$\/) do |word8|\n                  word8.gsub(\/(\\w+)$\/) do |word9|\n                    word9.gsub(\/(\\w+)$\/) do |word10|\n                      word10.gsub(\/(\\w+)$\/) do |word11|\n                        word11.gsub(\/(\\w+)$\/) do |word12|\n                          word12.gsub(\/(\\w+)$\/) do |word13|\n                            word13.gsub\nend\n","language":"ruby"}
{"task_id":"MBRBP\/585","completion":"  items.sort(comparator = \"price\")\n  pq = []\n  for item in items\n    pq.push(item)\n    if pq.size() > n\n      pq.pop()\n    end\n  end\n  return pq\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/586","completion":"  a.reverse.each_with_index do |i, j|\n    a[j + k] = a[i]\n  end\n  a.reverse\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/589","completion":"  squares = []\n  for i in range(a, b)\n    if i * i == i\n      squares << i\n  end\n  return squares\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/592","completion":"  return binomial_coefficient(n, n) * binomial_coefficient(n, n - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/595","completion":"  if str1 == str2\n    \"Not Possible\"\n  elsif str1[0] == str2[0]\n    1\n  elsif str1[0] == str2[1]\n    2\n  elsif str1[1] == str2[0]\n    3\n  elsif str1[1] == str2[1]\n    4\n  else\n    \"Not Possible\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/597","completion":"  arr1.slice(m, n).inject(arr2.slice(0, k))\n  arr2.slice(k).inject(arr1.slice(m, n))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/602","completion":"  result = \"\"\n  hash = {}\n  for i in str1\n    if i not in hash\n      hash[i] = 1\n    else\n      hash[i] += 1\n    end\n  end\n  for key, value in hash\n    if value > 1\n      result = key\n      break\n    end\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/610","completion":"  list2 = []\n  for i in list1\n    if i != list1[l]\n      list2.append(i)\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/612","completion":"  if (length(lst) > 1)\n    lst[0..-1].inject(merge(first(lst)), last(lst))\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/613","completion":"  max_value = 0\n  for i in test_list\n    if i[1] > max_value\n      max_value = i[1]\n  return max_value\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/615","completion":"  nums.sort()\n  return [sum(nums[i][j] for i in range(len(nums))) \/ len(nums) for j in range(len(nums[0]))]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/617","completion":"  # Write your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/618","completion":"  nums1.map { |n| n\/=nums2.shift }\n  nums1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/619","completion":"  # your code goes here\n  return test_str\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/620","completion":"  a.sort\n  largest_subset = 0\n  for i = 0, length = a.length\n    if a[i] % n == 0\n      if a[i] % (n * (n - 1)) == 0\n        if a[i] % (n * (n - 2)) == 0\n          if a[i] % (n * (n - 3)) == 0\n            if a[i] % (n * (n - 4)) == 0\n              if a[i] % (n * (n - 5)) == 0\n                if a[i] % (n * (n - 6)) == 0\n                  if a[i] % (n * (n - 7)) == 0\n                    if a[i] % (n * (n - 8)) == 0\n                      if\nend\n","language":"ruby"}
{"task_id":"MBRBP\/621","completion":"  result = []\n  for i in test_list:\n    if i.isdigit():\n      result.append(str(int(i) + k))\n    else:\n      result.append(i)\n  return result\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/622","completion":"  arr1.sort\n  arr2.sort\n  arr1.length + arr2.length >= n\n    median = (arr1[n\/2] + arr2[n\/2])\/2\n    return median\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/627","completion":"  if start == _end\n    return 0\n  end = _end\n  if end - start == 1\n    if array[start] == _end\n      return _end\n    else\n      return _end + 1\n  mid = (start + end) \/ 2\n  if array[mid] == mid\n    return find_first_missing(array, start, mid)\n  else\n    return find_first_missing(array, mid, end)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/632","completion":"  num_list.reverse.each do |num|\n    if num == 0\n      num_list.reverse.pop\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/633","completion":"  arr.sort\n  result = 0\n  for i in 0..n-1\n    result += arr[i] ^ arr[i+1]\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/635","completion":"  heap = []\n  for value in iterable\n    push(value)\n  for value in iterable\n    if value < pop()\n      push(value)\n  return heap\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/638","completion":"  if v < 0 or t < 0\n    return nil\n  else\n    return 35.74 + 0.6215 * t + (0.4275 * t - 35.75) * v * v \/ (12 * v)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/640","completion":"  items.each do |item|\n    item.gsub! \/ \\(\/, '')\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/648","completion":"  return [lst[i] + (i + 1) % len(lst) for i in range(len(lst))]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/652","completion":"{\n    result = \"[\";\n    for i in range(len(test_list)):\n        for j in range(len(test_list[i])):\n            result += \"(\" + str(test_list[i][j]) + \", \"\n        result = result[:-2] + \"), \"\n    result = result[:-2] + \"]\"\n    return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/656","completion":"  a.sort\n  b.sort\n  diffs = []\n  for i in a\n    diffs << (i - b[0])\n  diffs = diffs.sort\n  diffs.reverse\n  return diffs[0] + n * (n - 1) \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/657","completion":"  n.to_f\n  n.to_i\n  n.to_s.split.0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/659","completion":"  if x.empty?\n    nil\n  else\n    x.first + repeat(x.rest)\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/661","completion":"  arr.sort\n  max_sum = 0\n  for i in 0..n-2\n    if arr[i] + arr[i+1] + arr[i+2] > max_sum\n      max_sum = arr[i] + arr[i+1] + arr[i+2]\n  end\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/671","completion":"  # n & -n = right most unset bit\n  # 0 = unset bit\n  # 1 = set bit\n  # 2 = set bit\n  # 3 = set bit\n  # 4 = set bit\n  # 5 = set bit\n  # 6 = set bit\n  # 7 = set bit\n  # 8 = set bit\n  # 9 = set bit\n  # 10 = set bit\n  # 11 = set bit\n  # 12 = set bit\n  # 13 = set bit\n  # 14 = set bit\n  # 15 = set bit\n  # 16 = set bit\n  # 17 = set bit\n  # 18 = set bit\n  # 19 = set bit\n  # 20 = set bit\n  # 21 = set bit\n  # 22 = set bit\n  # 23 = set bit\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/679","completion":"  return dictionay[key]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/684","completion":"  count = 0\n  for i in 0..str.length\n    if str[i] == x\n      count += 1\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/685","completion":"  prime_numbers = [2, 3, 5, 7, 11, 13, 17, 19]\n  prime_numbers.each {|p| p < n && n % p == 0 }\n  prime_numbers.sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/686","completion":"  hash = {}\n  for i in test_tup\n    hash[i] = hash.has_key?(hash[i] + 1) : 1\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/689","completion":"  jumps = 0\n  last = 0\n  for i in arr\n    if i > last\n      jumps += 1\n      last = i\n    end\n  end\n  return jumps\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/690","completion":"  nums.each_with_index do |num, index|\n    nums[index+1] = nums[index] * nums[index+1]\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/691","completion":"  hash = {}\n  for i in test_list\n    if hash.has_key(i[1])\n      hash[i[1]].append(i[0])\n    else\n      hash[i[1]] = [i[0]]\n  return hash\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/692","completion":"  n.to_i.times do |i|\n    n.to_i.times do |j|\n      (i * j).to_s.last_char.to_i.to_s.last_char.to_i\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/694","completion":"  result = []\n  for key, value in test_dict.items\n    if value not in result\n      result << value\n  end\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/696","completion":"  result = []\n  for i in range(0, min(len(list1), len(list2))):\n    result.append(list1[i] + list2[i])\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/699","completion":"  if str1.length != str2.length\n    return \"Not Possible\"\n  swaps = 0\n  for i in range(str1.length)\n    if str1[i] != str2[i]\n      swaps += 1\n  return swaps\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/701","completion":"  if arr.length == 0\n    return -1\n  if arr.length == 1\n    return 0\n  if arr.length == 2\n    return 0 if arr[0] == arr[1] else 1\n  if arr.length == 3\n    return 0 if arr[0] == arr[1] or arr[1] == arr[2] else 1\n  if arr.length == 4\n    return 0 if arr[0] == arr[1] or arr[1] == arr[2] or arr[2] == arr[3] else 1\n  if arr.length == 5\n    return 0 if arr[0] == arr[1] or arr[1] == arr[2] or arr[2] == arr[3] or arr[3] == arr[4] else 1\n  if arr.length == 6\n    return 0 if arr[0] == arr[1] or arr[1] == arr[2] or arr[2] ==\nend\n","language":"ruby"}
{"task_id":"MBRBP\/702","completion":"  arr.sort\n  arr.reverse\n  arr.length\n  arr.length - (n - k)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/705","completion":"  list2 = []\n  for sublist in list1\n    list2 << sort_sublist(sublist)\n  return list2\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/707","completion":"  result = 0\n  for i in range(1, n+1)\n    result += bin(i).count('1')\n  end\n  result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/709","completion":"  hash = {}\n  for i in test_list:\n    for j in i:\n      hash[j] = hash.get(j, 0) + 1\n  return hash\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/712","completion":"  list2 = []\n  for item in list1\n    if item not in list2\n      list2 << item\n  end\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/714","completion":"  n = n.to_i\n  prime_factors = {}\n  for i in range(2, n)\n    if n % i == 0\n      prime_factors[i] = 1\n      while n % i == 0\n        n = n \/ i\n      prime_factors[i] = n\n  return prime_factors.keys.length\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/717","completion":"  n = data.length\n  mean = sum(data) \/ n\n  sd = 0\n  for x in data\n    sd += (x - mean) * (x - mean)\n  sd \/= n\n  sd = sqrt(sd)\n  return sd\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/721","completion":"  # Write your code here.\n  return 0.0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/722","completion":"  students_filtered = {}\n  for student in students\n    if student[1] >= h and student[2] >= w\n      students_filtered[student[0]] = student\n  return students_filtered\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/724","completion":"  base_power = base ** power\n  digits = base_power.toString(10)\n  return sum(map(int, digits))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/725","completion":"  text2 = text1.gsub(\/\"\/g, '')\n  return text2.split(' ')\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/730","completion":"  nums.sort\n  i = 0\n  while i < nums.length\n    if nums[i] == nums[i+1]\n      nums.splice(i, 1)\n      i -= 1\n    i += 1\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/731","completion":"  return 2 * r * h + 2 * r * (r + h) + 2 * h * (r + h)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/734","completion":"  arr.sort\n  sum = 0\n  for i in 0..n - 1\n    sum += arr[i] * arr[i + 1]\n  end\n  return sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/738","completion":"  n * (1 + n - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/739","completion":"  n = n + 1\n  n = n * (n + 1) \/ 2\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \/ 2\n  n = n + 1\n  n = n - (n - 1) \nend\n","language":"ruby"}
{"task_id":"MBRBP\/742","completion":"  return (1\/4) * (side * side) * (side * side)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/743","completion":"  new_list = []\n  for i in range(m, n + 1)\n    new_list.append(list1[i])\n  for i in range(n, m - 1, -1)\n    new_list.append(list1[i])\n  return new_list\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/745","completion":"  nums = []\n  for num in range(startnum, endnum + 1)\n    digits = []\n    for digit in num.to_s\n      if num % digit == 0\n        digits << digit\n    if digits.empty?\n      nums << num\n  return nums\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/746","completion":"  if r < 0 or a < 0\n    return nil\n  else\n    return (r * a) * 3.1415926535897932384626433832795\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/747","completion":"  if (m == 0 or n == 0 or o == 0)\n    return 0\n  if (x[m-1] == y[n-1] && y[n-1] == z[o-1])\n    return 1 + lcs_of_three(x, y, z, m-1, n-1, o-1)\n  else\n    return max(lcs_of_three(x, y, z, m-1, n, o),\n              lcs_of_three(x, y, z, m, n-1, o),\n              lcs_of_three(x, y, z, m, n, o-1))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/748","completion":"  return str1.gsub(\/(\\w)(\\w*)\/g, \"$1 $2\")\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/752","completion":"  if n == 1\n    1\n  elsif n == 2\n    2\n  elsif n == 3\n    4\n  elsif n == 4\n    8\n  elsif n == 5\n    16\n  elsif n == 6\n    32\n  elsif n == 7\n    64\n  elsif n == 8\n    128\n  elsif n == 9\n    256\n  elsif n == 10\n    512\n  elsif n == 11\n    1024\n  elsif n == 12\n    2048\n  elsif n == 13\n    4096\n  elsif n == 14\n    8192\n  elsif n == 15\n    16384\n  elsif n == 16\n    32768\n  elsif n == 17\n    65536\n  elsif n == 18\n    131072\n  elsif n == 19\n    262144\n  elsif\nend\n","language":"ruby"}
{"task_id":"MBRBP\/753","completion":"  # Your code goes here.\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/754","completion":"  # your code here\n  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/755","completion":"  if numbers.empty?\n    nil\n  else\n    [numbers.first, second_smallest(numbers.rest)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/757","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/759","completion":"  # convert the string to a decimal\n  num = decimal(num)\n  # check if the decimal is equal to the original decimal\n  return num == decimal(num)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/761","completion":"  if d == 0\n    return nil\n  else\n    return (d * (a * 180 \/ pi)) + arc_length(d - 1, a)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/763","completion":"  arr.sort\n  min_diff = arr[1] - arr[0]\n  for i in arr[2..n-1]\n    if i - arr[0] < min_diff\n      min_diff = i - arr[0]\n  end\n  min_diff\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/765","completion":"  n = n + 1\n  n = n * (n + 1) * (2 * n + 1) \/ 6\n  return n % (n - 1) == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/766","completion":"  a = []\n  for i in range(0, len(l1) - 1)\n    a.<<[l1[i], l1[i + 1]]\n  end\n  return a\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/767","completion":"  arr.sort\n  pairs = 0\n  for i in 0..n-1\n    if arr[i] + arr[i+1] == sum\n      pairs += 1\n  end\n  return pairs\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/769","completion":"  return (reduce(lambda a, b: a + b, (map(lambda x: x in li1, li2))))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/773","completion":"  # Find the position of the first occurrence of the pattern in the text.\n  pos = text.find(pattern)\n  if pos == -1\n    # If the pattern is not found, return -1.\n    return -1\n  # Otherwise, return the position of the first occurrence of the pattern in the text.\n  return [pattern, pos, pos + len(pattern)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/775","completion":"  nums.each_index {|i|\n    if (i % 2 == 1)\n      puts nums[i]\n  }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/776","completion":"  vowels = \"aeiou\"\n  count = 0\n  for i in 0..<test_str.length\n    if test_str[i] == \"a\"\n      if test_str[i+1] == \"e\"\n        if test_str[i+2] == \"i\"\n          if test_str[i+3] == \"o\"\n            if test_str[i+4] == \"u\"\n              count += 1\n    end\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/778","completion":"  list2 = []\n  list3 = []\n  for i in list1\n    if i not in list2\n      list2.push(i)\n    else\n      list3.push(list2.pop(), i)\n  list3.push(list2)\n  return list3\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/779","completion":"  list2 = {}\n  for item in list1\n    if item not in list2\n      list2[item] = 1\n    else\n      list2[item] += 1\n  return list2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/780","completion":"  combinations = []\n  for i in range(0, len(test_list)):\n    for j in range(i+1, len(test_list)):\n      combinations.append([test_list[i], test_list[j]])\n  return combinations\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/782","completion":"  arr_length = arr.length\n  odd_length_sum = 0\n  for i in 0..arr_length\n    if arr[i] % 2 == 1\n      odd_length_sum += arr[i]\n  end\n  return odd_length_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/783","completion":"  h = 0.0\n  s = 0.0\n  v = 0.0\n  max = max(r, g, b)\n  min = min(r, g, b)\n  delta = max - min\n  if delta == 0.0:\n    h = 0.0\n  else:\n    s = delta \/ max\n    if r == max:\n      h = (g - b) \/ delta\n    elif g == max:\n      h = 2.0 + (b - r) \/ delta\n    else:\n      h = 4.0 + (r - g) \/ delta\n    h *= 60.0\n    if h < 0.0:\n      h += 360.0\n  v = max\n  return [h, s, v]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/785","completion":"  result = []\n  for i in test_str.split(','):\n    result.append(int(i))\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/790","completion":"  nums.each_with_index do |n, i|\n    if (i % 2 == 0)\n      even?\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/791","completion":"  test_tup.shift\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/801","completion":"  (x == y == z) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/802","completion":"  arr.sort\n  arr.reverse\n  arr.length - n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/806","completion":"  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/810","completion":"  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a = a + c\n  b = b + d\n  a =\nend\n","language":"ruby"}
{"task_id":"MBRBP\/819","completion":"  # Your code here\n  pass\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/822","completion":"  p = p.strip()\n  if (p.find(\"@\") == -1)\n    return false\n  if (p.find(\"@\") != -1)\n    p = p.split(\"@\")\n  if (p.find(\".\") == -1)\n    return false\n  if (p.find(\".\") != -1)\n    p = p.split(\".\")\n  if (p.length != 2)\n    return false\n  if (p[0].length < 8)\n    return false\n  if (p[1].length < 2)\n    return false\n  if (p[0].length > 8)\n    return false\n  if (p[1].length > 2)\n    return false\n  if (p[0].find(\" \") != -1)\n    return false\n  if (p[1].find(\" \") != -1)\n    return false\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/826","completion":"  if a == b == c\n    \"Right-angled Triangle\"\n  elsif a == b || b == c\n    \"Acute-angled Triangle\"\n  elsif a != b && b != c\n    \"Obtuse-angled Triangle\"\n  else\n    \"Invalid triangle\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/830","completion":"  return a.round_to_precision(digits)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/832","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/834","completion":"  matrix = []\n  for i in range(n)\n    matrix.append([])\n  row = 0\n  col = 0\n  direction = 'right'\n  num = 1\n  while num <= n * n\n    matrix[row][col] = num\n    if direction == 'right'\n      if col == n - 1\n        direction = 'down'\n      else\n        col += 1\n    else\n      if row == n - 1\n        direction = 'left'\n      else\n        row += 1\n    if direction == 'down'\n      if row == n - 1\n        direction = 'left'\n      else\n        row += 1\n    else\n      if col == n - 1\n        direction = 'up'\n      else\n        col += 1\n    num += 1\n  return matrix\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/835","completion":"  return (y2 - y1) \/ (x2 - x1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/836","completion":"  n = size\n  m = 0\n  for i in a\n    m = m + i if m + i > 0 else 0\n    if m > 0\n      n = n - 1\n    end\n  end\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/837","completion":"  n = n * n * n\n  n = n + 1\n  n = n + 1\n  n = n + 1\n  return n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/838","completion":"  if s1.length < s2.length\n    return min_swaps(s2, s1)\n  if s1.length == s2.length\n    return 0\n  if s1[0] == s2[0]\n    return min_swaps(s1[1:], s2[1:]) + 1\n  if s1[0] != s2[0]\n    return min(min_swaps(s1[1:], s2), min_swaps(s1, s2[1:])) + 1\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/841","completion":"  count = 0\n  for i = 0; i < n; i++\n    for j = i + 1; j < n; j++\n      if (arr[i] > arr[j])\n        count += 1\n  end\n  return count\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/842","completion":"  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size = arr_size - 1\n  arr_size = arr_size \/ 2\n  arr_size = arr_size + 1\n  arr_size\nend\n","language":"ruby"}
{"task_id":"MBRBP\/843","completion":"  q = []\n  for p in primes\n    q.enqueue(p)\n  ugly = 1\n  while q.length > 1\n    ugly = min(q.dequeue(), q.dequeue(), q.dequeue()) * ugly\n    q.enqueue(ugly)\n  return ugly\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/844","completion":"  arr = [1, 2, 3, 4, 5, 6, 7, 8]\n  arr.sort\n  arr.reverse\n  arr.slice(0, n - 1)\n  return arr[k - 1]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/845","completion":"  digits = 0\n  while n > 0\n    digits += 1\n    n = n \/ 10\n  end\n  return digits\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/854","completion":"  rawheap.sort\n  heap = []\n  for i in rawheap\n    if i < heap.last\n      heap.pop\n    end\n    heap.push(i)\n  end\n  return heap\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/859","completion":"  result = []\n  for i in range(0, len(my_list) + 1)\n    result.append(my_list[0:i])\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/861","completion":"  return texts.filter { |text| text.sort == str.sort }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/862","completion":"  words = text.split(\" \")\n  counts = {}\n  for word in words\n    counts[word] = counts.get(word, 0) + 1\n  return [[word, counts[word]] for word in counts\n         .most_common(n)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/863","completion":"  longest_subseq = 0\n  current_subseq = 0\n  for i in arr\n    if i == n\n      current_subseq = 0\n    else if i == n - 1\n      if current_subseq > longest_subseq\n        longest_subseq = current_subseq\n      current_subseq = 0\n    else\n      current_subseq += 1\n  return longest_subseq\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/867","completion":"  arr.sort\n  arr.reverse\n  arr.length % 2 == 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/872","completion":"  if list1.length < list2.length\n    return false\n  for i in 0..list1.length\n    if not list2.include? list1[i]\n      return false\n  end\n  return true\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/875","completion":"  min_diff = 10000000000\n  for i in range(0, len(test_list) - 1)\n    for j in range(i + 1, len(test_list))\n      diff = test_list[i][1] - test_list[j][1]\n      if diff < min_diff\n        min_diff = diff\n  return min_diff\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/881","completion":"  even_sum = 0\n  odd_sum = 0\n  for i in (0...list1.length)\n    if list1[i] % 2 == 0\n      even_sum += list1[i]\n    else\n      odd_sum += list1[i]\n  end\n  return even_sum + odd_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/895","completion":"  a.sort\n  max_sum = 0\n  for i in [1..a.length - 1]\n    max_sum += a[i]\n    if a[i] == a[i - 1]\n      max_sum -= a[i - 1]\n  end\n  return max_sum\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/898","completion":"  result = []\n  i = 0\n  while i < n\n    result.append(numbers[i])\n    i += 1\n  return result\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/901","completion":"  i = 1\n  while i < n\n    i += smallest_multiple(i)\n  end\n  return i\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/903","completion":"  # Your code here\n  return 0\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/905","completion":"  return binomial_coefficient(n, 2) * binomial_coefficient(n, 2)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/906","completion":"  date = []\n  date << [url.match(\/(\\d{4})\/)[0], url.match(\/(\\d{2})\/)[0], url.match(\/(\\d{2})\/)[0]]\n  date\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/908","completion":"  if arr[0] == n\n    return 0\n  if arr[n] == n\n    return n\n  return find_fixed_point(arr, n - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/909","completion":"  prev = 0\n  while num > 0\n    prev = num\n    num = num - 1\n  end\n  return prev\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/910","completion":"  date = Date.new(y, m, d)\n  return date.is_gregorian_leap_year\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/911","completion":"  nums.sort()\n  return max(nums[0] * nums[1] * nums[2], nums[len(nums) - 1] * nums[len(nums) - 2] * nums[len(nums) - 3])\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/912","completion":"  return (n * m + 1) * (m + 1) \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/915","completion":"  return array_nums.sort {|a| a < 0 ? -1 : 1}\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/916","completion":"  a.sort\n  arr_size = 0\n  for i in a\n    arr_size += 1\n    if arr_size == 3\n      break\n    if i + a[arr_size - 1] == sum\n      return [i, a[arr_size - 1], a[arr_size - 2]]\n  return nil\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/918","completion":"    # Write your code here\n    pass\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/921","completion":"  return [[test_tup[i] for i in range(j, j+n)] for j in range(0, len(test_tup), n)]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/923","completion":"  if m > n\n    m, n = n, m\n  if m == 0\n    return n\n  if n == 0\n    return m\n  if x[m-1] == y[n-1]\n    return 1 + min(super_seq(x, y, m-1, n-1),\n                   super_seq(x, y, m-1, n),\n                   super_seq(x, y, m, n-1))\n  else\n    return 1 + min(super_seq(x, y, m-1, n),\n                   super_seq(x, y, m, n-1))\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/926","completion":"  if m == 0\n    return 2\n  else if m == 1\n    return 3\n  else\n    return rencontres_number(n - 1, m - 1) + rencontres_number(n - 1, m)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/933","completion":"  text.gsub(\/([A-Z])\/g, \"_$1\").to_s\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/934","completion":"  n = n + 1\n  m = m + 1\n  return (n * m) \/ 2\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/937","completion":"  str1.chars.sort_by {|a,b| a - b}.max\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/938","completion":"  a.sort\n  b.sort\n  c.sort\n  a.slice(p, q).reverse\n  b.slice(p, q).reverse\n  c.slice(p, q).reverse\n  a.slice(q, r).reverse\n  b.slice(q, r).reverse\n  c.slice(q, r).reverse\n  a.slice(r, p).reverse\n  b.slice(r, p).reverse\n  c.slice(r, p).reverse\n  a.slice(p, q).reverse\n  b.slice(p, q).reverse\n  c.slice(p, q).reverse\n  a.slice(q, r).reverse\n  b.slice(q, r).reverse\n  c.slice(q, r).reverse\n  a.slice(r, p).reverse\n  b.slice(r, p).reverse\n  c.slice(r, p).reverse\n  a.slice(p, q).reverse\n  b.slice(p, q).reverse\n  c.slice(p, q).reverse\n  a.slice(q, r).reverse\nend\n","language":"ruby"}
{"task_id":"MBRBP\/939","completion":"  models.sort { |m| m[\"model\"] }\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/941","completion":"  num.each_with_index do |n, i|\n    if type(n) == 'instance' and n.klass == 'Tuple'\n      puts i\n    end\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/944","completion":"  text.split().each_with_index do |word, index|\n    puts \"#{index} #{word}\"\n  end\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/946","completion":"  return []\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/949","completion":"  # Your code here\n  return \"test_list\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/951","completion":"  # Your code here\n  return []\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/952","completion":"  return n * (pow(r, p) - 1) \/\/ (p - 1)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/953","completion":"  if n == 0\n    return 0\n  if ar.length == 0\n    return 0\n  if n == 1\n    return 1\n  if ar.length == 1\n    return 1\n  if ar.length == 2\n    return 1 if ar[0] == ar[1]\n    return 1\n  if ar.length == 3\n    return 1 if ar[0] == ar[1] == ar[2]\n    return 1\n  if ar.length == 4\n    return 1 if ar[0] == ar[1] == ar[2] == ar[3]\n    return 1\n  if ar.length == 5\n    return 1 if ar[0] == ar[1] == ar[2] == ar[3] == ar[4]\n    return 1\n  if ar.length == 6\n    return 1 if ar[0] == ar[1] == ar[2] == ar[3] == ar\nend\n","language":"ruby"}
{"task_id":"MBRBP\/959","completion":"  return sum(lst) \/ len(lst)\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/961","completion":"  return sum(map(roman_to_int, s.split()))\n\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/963","completion":"  return [\n    \"no real solution\",\n    \"one solution\",\n    \"Two solutions\"\n  ][z == 0 ? 0 : (x * y - z) \/ z]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/965","completion":"  return text.replace(\/([a-z])([A-Z])\/g, \"$1_$2\").lower\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/967","completion":"  if string.include?(chr) \"aeiou\"\n  else \"not accepted\"\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/968","completion":"  a = a % n\n  b = b % n\n  if a > b\n    return n - a\n  else\n    return b - a\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/969","completion":"  res = []\n  for i in test_list:\n    if len(i) > 1:\n      for j in i[1:]:\n        res.append([i[0]] + [j])\n    else:\n      res.append(i)\n  return res\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/971","completion":"  # Write your code here\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/973","completion":"  return s[d:] + s[:d]\n\nend\n","language":"ruby"}
{"task_id":"MBRBP\/974","completion":"  return 0\n\nend\n","language":"ruby"}
